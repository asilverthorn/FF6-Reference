C2/6800:	4C 13 68	JMP $6813		(If we have to have this here, why is it not a BRA?)

C2/6803:	4C 0C 68	JMP $680C		(Or this one?)

C2/6806:	4C 1A 68	JMP $681A		(Or this one?)

C2/6809:	4C 21 68	JMP $6821		(Or this one?)

(These four function decompress, and then run, the code for showing a special cutscene, one that requires its own event code and doesn't show maps or sprites. This one, for example, is for showing the world gets torn asunder.)
C2/680C:	20 28 68	JSR $6828
C2/680F:	5C00507E	JMP $7E5000

(This is for the intro cutscene of the three Magitek soldiers approaching Narshe with the opening credits.)
C2/6813:	20 28 68	JSR $6828
C2/6816:	5C03507E	JMP $7E5003

(This is for the Floating Continent rising into the sky.)
C2/681A:	20 28 68	JSR $6828
C2/681D:	5C06507E	JMP $7E5006

(This is for the title screen.)
C2/6821:	20 28 68	JSR $6828
C2/6824:	5C09507E	JMP $7E5009

C2/6828:	08		PHP
C2/6829:	C2 30		REP #$30		(16-bit A, X, Y)
C2/682B:	48		PHA
C2/682C:	DA		PHX
C2/682D:	5A		PHY
C2/682E:	8B		PHB
C2/682F:	0B		PHD
C2/6830:	C2 10		REP #$10		(Um, X and Y are already 16-bit...)
C2/6832:	E2 20		SEP #$20		(8-bit A)
C2/6834:	A9 00		LDA #$00
C2/6836:	48		PHA
C2/6837:	AB		PLB			(Data bank register now points to bank $00)
C2/6838:	A2 00 00	LDX #$0000	(0)
C2/683B:	DA		PHX
C2/683C:	2B		PLD			(Direct page register now points to bank $00, page $00)
C2/683D:	A2 00 00	LDX #$0000	(0)	(X = 0 already...)
C2/6840:	86 00		STX $00
C2/6842:	A9 7E		LDA #$7E	(126)
C2/6844:	8D 83 21	STA $2183
C2/6847:	A0 6C 68	LDY #$686C	(26,732)
C2/684A:	84 F3		STY $F3
C2/684C:	A9 C2		LDA #$C2	(-62)
C2/684E:	85 F5		STA $F5
C2/6850:	A0 00 50	LDY #$5000	(20,480)
C2/6853:	84 F6		STY $F6
C2/6855:	A9 7E		LDA #$7E	(126)
C2/6857:	85 F8		STA $F8
C2/6859:	8B		PHB
C2/685A:	A9 7E		LDA #$7E	(126)	(A = #$7E already...)
C2/685C:	48		PHA
C2/685D:	AB		PLB			(Data bank register now points to bank $7E)
C2/685E:	226DFFC2	JSL $C2FF6D	(Decompression function)
C2/6862:	AB		PLB
C2/6863:	C2 30		REP #$30
C2/6865:	2B		PLD
C2/6866:	AB		PLB
C2/6867:	7A		PLY
C2/6868:	FA		PLX
C2/6869:	68		PLA
C2/686A:	28		PLP
C2/686B:	60		RTS

(String of FFs following a massive block of compressed data.)
C2/8A60:	FF (x16)

(24-bit data of some sort.)
C2/8A70:	80 04 3C
C2/8A73:	90 04 3C
C2/8A76:	90 04 3C
C2/8A79:	10 04 1E
C2/8A7C:	50 04 1E
C2/8A7F:	40 04 1E
C2/8A82:	C0 04 3C
C2/8A85:	40 04 3C
C2/8A88:	00 04 3C
C2/8A8B:	00 84 1E
C2/8A8E:	10 84 1E
C2/8A91:	10 04 78
C2/8A94:	00 04 1E
C2/8A97:	00 84 3C
C2/8A9A:	00 04 B4
C2/8A9D:	00 04 B4
C2/8AA0:	00 04 B4
C2/8AA3:	00 04 B4
C2/8AA6:	00 04 B4
C2/8AA9:	00 04 B4
C2/8AAC:	00 44 1E
C2/8AAF:	00 C4 3C
C2/8AB2:	00 44 3C
C2/8AB5:	00 04 3C
C2/8AB8:	00 05 3C
C2/8ABB:	20 04 78
C2/8ABE:	80 04 3C
C2/8AC1:	00 04 B4
C2/8AC4:	00 04 FE
C2/8AC7:	90 00 B4
C2/8ACA:	10 04 B4
C2/8ACD:	50 04 1E
C2/8AD0:	40 04 B4
C2/8AD3:	00 04 B4
C2/8AD6:	00 04 FE
C2/8AD9:	C0 08 3C
C2/8ADC:	C0 08 3C
C2/8ADF:	00 08 B4
C2/8AE2:	00 08 B4
C2/8AE5:	00 08 B4
C2/8AE8:	20 00 1E
C2/8AEB:	40 04 1E
C2/8AEE:	80 04 3C
C2/8AF1:	20 02 61
C2/8AF4:	00 82 46
C2/8AF7:	00 02 FE
C2/8AFA:	00 08 B4
C2/8AFD:	00 08 B4
C2/8B00:	00 08 B4
C2/8B03:	00 08 0A
C2/8B06:	00 08 78
C2/8B09:	C0 08 5A
C2/8B0C:	40 08 14
C2/8B0F:	00 08 B4
C2/8B12:	00 08 B4
C2/8B15:	00 08 B4
C2/8B18:	00 08 B4
C2/8B1B:	10 08 1E
C2/8B1E:	00 08 B4
C2/8B21:	00 08 B4
C2/8B24:	00 08 B4
C2/8B27:	00 08 B4
C2/8B2A:	00 08 B4
C2/8B2D:	20 08 0A
C2/8B30:	60 08 1E
C2/8B33:	00 08 FE
C2/8B36:	00 01 FE
C2/8B39:	00 04 FE
C2/8B3C:	00 08 B4
C2/8B3F:	00 08 FE
C2/8B42:	90 08 FE
C2/8B45:	89 8B 08
C2/8B48:	91 8B 08
C2/8B4B:	99 8B 08
C2/8B4E:	A1 8B 08
C2/8B51:	A1 8B FF
C2/8B54:	89 8B 08
C2/8B57:	91 8B 08
C2/8B5A:	99 8B 08
C2/8B5D:	A9 8B 08
C2/8B60:	81 8B FE
C2/8B63:	89 8B 08
C2/8B66:	91 8B 08
C2/8B69:	99 8B 08
C2/8B6C:	A1 8B 08
C2/8B6F:	A1 8B FF
C2/8B72:	89 8B 08
C2/8B75:	91 8B 08
C2/8B78:	99 8B 08
C2/8B7B:	A1 8B 08
C2/8B7E:	A1 8B FF

(16-bit data.)
C2/8B81:	1C 00
C2/8B83:	06 00
C2/8B85:	C8 0B
C2/8B87:	D9 3A
C2/8B89:	1C 00
C2/8B8B:	06 00
C2/8B8D:	E4 0B
C2/8B8F:	D9 3A
C2/8B91:	1C 00
C2/8B93:	06 00
C2/8B95:	48 0D
C2/8B97:	D9 3A
C2/8B99:	1C 00
C2/8B9B:	06 00
C2/8B9D:	64 0D
C2/8B9F:	D9 3A
C2/8BA1:	1C 00
C2/8BA3:	06 00
C2/8BA5:	C8 0E
C2/8BA7:	D9 3A
C2/8BA9:	1C 00
C2/8BAB:	06 00
C2/8BAD:	E4 0E
C2/8BAF:	D9 3A

(I really can't make any sense of much of the code in C2/8BB1-C2/A659. None of it appears to be in any consistent or coherent format. Maybe it's compressed data, I don't know. The data from C2/A65A-A88E is documented well in Assassin's C2 disassembly.)

(This function sets up DMA channel 7. Called from C1/0BDD.)
C2/A88F:	A5 9A		LDA $9A
C2/A891:	F0 3E		BEQ $A8D1	(+62)
C2/A893:	A5 0E		LDA $0E
C2/A895:	29 07		AND #$07
C2/A897:	AA		TAX
C2/A898:	BFE3E4C2	LDA $C2E4E3,X
C2/A89C:	8F744300	STA $004374	(7th DMA channel source bank)
C2/A8A0:	8A		TXA
C2/A8A1:	0A		ASL
C2/A8A2:	AA		TAX
C2/A8A3:	C2 20		REP #$20		(16-bit A)
C2/A8A5:	BFC3E4C2	LDA $C2E4C3,X
C2/A8A9:	8F162100	STA $002116	(Video address)
C2/A8AD:	BFD3E4C2	LDA $C2E4D3,X
C2/A8B1:	8F724300	STA $004372	(7th DMA channel source offset)
C2/A8B5:	A9 00 08	LDA #$0800	(2,048)
C2/A8B8:	8F754300	STA $004375	(7th DMA channel source size)
C2/A8BC:	7B		TDC
C2/A8BD:	E2 20		SEP #$20		(8-bit A)
C2/A8BF:	A9 01		LDA #$01	(1)
C2/A8C1:	8F704300	STA $004370	(7th DMA channel control)
C2/A8C5:	A9 18		LDA #$18	(24)
C2/A8C7:	8F714300	STA $004371	(7th DMA channel destination)
C2/A8CB:	A9 80		LDA #$80	(-128)
C2/A8CD:	8F0B4200	STA $00420B	(Enable 7th DMA channel)
C2/A8D1:	6B		RTL

(This is NOT free space. It is data.)
C2/A8D2:	FF
C2/A8D3:	FF
C2/A8D4:	FF
C2/A8D5:	FF
C2/A8D6:	FF
C2/A8D7:	FF
C2/A8D8:	FF
C2/A8D9:	FF
C2/A8DA:	FF
C2/A8DB:	FF
C2/A8DC:	FF
C2/A8DD:	FF
C2/A8DE:	FF
C2/A8DF:	FF
C2/A8E0:	FF
C2/A8E1:	FF
C2/A8E2:	7F
C2/A8E3:	FF
C2/A8E4:	FB
C2/A8E5:	FF
C2/A8E6:	EF
C2/A8E7:	FF
C2/A8E8:	DF
C2/A8E9:	FF
C2/A8EA:	FD
C2/A8EB:	FF
C2/A8EC:	F7
C2/A8ED:	FF
C2/A8EE:	FE
C2/A8EF:	FF
C2/A8F0:	BF
C2/A8F1:	FF
C2/A8F2:	FF
C2/A8F3:	FD
C2/A8F4:	FF
C2/A8F5:	EF
C2/A8F6:	FF
C2/A8F7:	F7
C2/A8F8:	FF
C2/A8F9:	BF
C2/A8FA:	FF
C2/A8FB:	FE
C2/A8FC:	FF
C2/A8FD:	7F
C2/A8FE:	FF
C2/A8FF:	DF
C2/A900:	FF
C2/A901:	FB
C2/A902:	7F
C2/A903:	FF
C2/A904:	FB
C2/A905:	FF
C2/A906:	EF
C2/A907:	FF
C2/A908:	DF
C2/A909:	FF
C2/A90A:	FD
C2/A90B:	FF
C2/A90C:	F7
C2/A90D:	FF
C2/A90E:	FE
C2/A90F:	FF
C2/A910:	BF
C2/A911:	FF
C2/A912:	FF
C2/A913:	FD
C2/A914:	FF
C2/A915:	EF
C2/A916:	FF
C2/A917:	F7
C2/A918:	FF
C2/A919:	BF
C2/A91A:	FF
C2/A91B:	FE
C2/A91C:	FF
C2/A91D:	7F
C2/A91E:	FF
C2/A91F:	DF
C2/A920:	FF
C2/A921:	FB
C2/A922:	7F
C2/A923:	FF
C2/A924:	FB
C2/A925:	FF
C2/A926:	EF
C2/A927:	FF
C2/A928:	DF
C2/A929:	FF
C2/A92A:	FD
C2/A92B:	FF
C2/A92C:	F7
C2/A92D:	FF
C2/A92E:	FE
C2/A92F:	FF
C2/A930:	BF
C2/A931:	FF
C2/A932:	FF
C2/A933:	FD
C2/A934:	FF
C2/A935:	EF
C2/A936:	FF
C2/A937:	F7
C2/A938:	FF
C2/A939:	BF
C2/A93A:	FF
C2/A93B:	FE
C2/A93C:	FF
C2/A93D:	7F
C2/A93E:	FF
C2/A93F:	DF
C2/A940:	FF
C2/A941:	FB

(Called from C2/AA42 and C2/AA53.)
C2/A942:	AE EC EC	LDX $ECEC
C2/A945:	E0 0C 00	CPX #$000C	(12)
C2/A948:	90 16		BCC $A960	(+22)	(Just want to point out that there's a closer RTS...)
C2/A94A:	CE EE EC	DEC $ECEE
C2/A94D:	D0 06		BNE $A955	(+6)
C2/A94F:	A9 04		LDA #$04	(4)
C2/A951:	8D EE EC	STA $ECEE
C2/A954:	60		RTS

C2/A955:	C2 20		REP #$20		(16-bit A)
C2/A957:	CE B6 64	DEC $64B4		(Decrease battle info window X-offset)
C2/A95A:	EE CF 80	INC $80CF		(Increase enemy's Y-coordinate - not sure whether this means moving it up or down)
C2/A95D:	7B		TDC
C2/A95E:	E2 20		SEP #$20		(8-bit A)
C2/A960:	60		RTS

(Call C1/022A a certain number of times.)
C2/A961:	48		PHA
C2/A962:	222602C1	JSL $C10226
C2/A966:	68		PLA
C2/A967:	3A		DEC
C2/A968:	D0 F7		BNE $A961	(-9)
C2/A96A:	60		RTS

(Called from C1/91D7.)
C2/A96B:	E6 9A		INC $9A
C2/A96D:	EE 8B 62	INC $628B
C2/A970:	A2 FF FF	LDX #$FFFF	(-1)
C2/A973:	8E 01 40	STX $4001
C2/A976:	8E 03 40	STX $4003
C2/A979:	A9 01		LDA #$01	(1)
C2/A97B:	8D EE EC	STA $ECEE
C2/A97E:	EE 0C 7B	INC $7B0C
C2/A981:	A9 16		LDA #$16	(22)
C2/A983:	8D 8D 89	STA $898D		(Something about which layers to show)
C2/A986:	7B		TDC			(A = 0)
C2/A987:	AA		TAX			(X = 0)
C2/A988:	BD 00 7F	LDA $7F00,X	(Copy palette 8 to palette 3)
C2/A98B:	9D 60 7E	STA $7E60,X
C2/A98E:	E8		INX
C2/A98F:	E0 20 00	CPX #$0020	(32)
C2/A992:	D0 F4		BNE $A988	(-12)
C2/A994:	7B		TDC			(A = 0)
C2/A996:	AA		TAX			(X = 0)
C2/A996:	8B		PHB
C2/A997:	A9 7F		LDA #$7F
C2/A999:	48		PHA
C2/A99A:	AB		PLB			(Data bank register now points to bank $7F)
C2/A99B:	C2 20		REP #$20		(16-bit A)
C2/A99D:	9E 00 C4	STZ $C400,X
C2/A9A0:	E8 E8		INX x2
C2/A9A2:	E0 00 10	CPX #$1000	(4,096)
C2/A9A5:	D0 F6		BNE $A99D	(-10)
C2/A9A7:	7B		TDC			(A = 0)
C2/A9A8:	AA		TAX			(X = 0)
C2/A9A9:	A9 00 2C	LDA #$2C00	(11,264)
C2/A9AC:	85 12		STA $12
C2/A9AE:	A9 10 00	LDA #$0010	(16)
C2/A9B1:	85 10		STA $10
C2/A9B3:	A5 12		LDA $12
C2/A9B5:	9D 00 C4	STA $C400,X
C2/A9B8:	E8 E8		INX x2
C2/A9BA:	1A		INC
C2/A9BB:	C6 10		DEC $10
C2/A9BD:	D0 F6		BNE $A9B5	(-10)
C2/A9BF:	85 12		STA $12
C2/A9C1:	8A		TXA
C2/A9C2:	18		CLC
C2/A9C3:	69 20 00	ADC #$0020	(32)
C2/A9C6:	AA		TAX
C2/A9C7:	E0 00 04	CPX #$0400	(1,024)
C2/A9CA:	D0 E2		BNE $A9AE	(-30)
C2/A9CC:	A9 F0 FF	LDA #$FFF0	(-16)
C2/A9CF:	8FB4647E	STA $7E64B4	(Battle info window X-offset)
C2/A9D3:	8F167B7E	STA $7E7B16
C2/A9D7:	8FB6647E	STA $7E64B6	(Battle info window Y-offset)
C2/A9DB:	8F187B7E	STA $7E7B18
C2/A9DF:	7B		TDC
C2/A9E0:	8F1D7B7E	STA $7E7B1D
C2/A9E4:	8F1F7B7E	STA $7E7B1F
C2/A9E8:	E2 20		SEP #$20		(8-bit A)
C2/A9EA:	AB		PLB
C2/A9EB:	A2 00 10	LDX #$1000	(4,096)
C2/A9EE:	86 10		STX $10
C2/A9F0:	A2 00 C4	LDX #$C400	(-15,360)
C2/A9F3:	A0 00 48	LDY #$4800	(18,432)
C2/A9F6:	A9 7F		LDA #$7F
C2/A9F8:	228919C1	JSL $C11989
C2/A9FC:	AD 6F 89	LDA $896F
C2/A9FF:	29 AF		AND #$AF
C2/AA01:	8D 6F 89	STA $896F		(TRB would've worked...)
C2/AA04:	A9 4A		LDA #$4A	(74)
C2/AA06:	8D 71 89	STA $8971
C2/AA09:	7B		TDC			(A = 0)
C2/AA0A:	AA		TAX			(X = 0)
C2/AA0B:	8E EC EC	STX $ECEC
C2/AA0E:	8B		PHB
C2/AA0F:	A9 7F		LDA #$7F
C2/AA11:	48		PHA
C2/AA12:	AB		PLB
C2/AA13:	C2 20		REP #$20		(16-bit A)
C2/AA15:	9E 00 C4	STZ $C400,X
C2/AA18:	E8 E8		INX x2
C2/AA1A:	E0 00 20	CPX #$2000	(8,192)
C2/AA1D:	D0 F6		BNE $AA15	(-10)
C2/AA1F:	7B		TDC
C2/AA20:	E2 20		SEP #$20		(8-bit A)
C2/AA22:	AB		PLB
C2/AA23:	7B		TDC			(A = 0)
C2/AA24:	AA		TAX			(X = 0)
C2/AA25:	9D BC EC	STA $ECBC,X
C2/AA28:	9E CC EC	STZ $ECCC,X
C2/AA2B:	18		CLC
C2/AA2C:	69 04		ADC #$04	(4)
C2/AA2E:	E8		INX
C2/AA2F:	E0 10 00	CPX #$0010	(16)
C2/AA32:	D0 F1		BNE $AA25	(-15)
C2/AA34:	A9 08		LDA #$08	(8)
C2/AA36:	20 61 A9	JSR $A961		(Call C1/022A 8 times)
C2/AA39:	A9 17		LDA #$17	(23)
C2/AA3B:	8D 8D 89	STA $898D
C2/AA3E:	222602C1	JSL $C10226
C2/AA42:	20 42 A9	JSR $A942
C2/AA45:	20 F8 AA	JSR $AAF8
C2/AA48:	222602C1	JSL $C10226
C2/AA4C:	20 F8 AA	JSR $AAF8
C2/AA4F:	222602C1	JSL $C10226
C2/AA53:	20 42 A9	JSR $A942
C2/AA56:	20 F8 AA	JSR $AAF8
C2/AA59:	222602C1	JSL $C10226
C2/AA5D:	20 F8 AA	JSR $AAF8
C2/AA60:	A2 3F CC	LDX #$CC3F	(-13,249)
C2/AA63:	86 10		STX $10
C2/AA65:	A2 00 E2	LDX #$E200	(-7,680)
C2/AA68:	86 12		STX $12
C2/AA6A:	A9 7F		LDA #$7F	(127)
C2/AA6C:	85 14		STA $14
C2/AA6E:	7B		TDC			(A = 0)
C2/AA6F:	AA		TAX			(X = 0)
C2/AA70:	BD BC EC	LDA $ECBC,X
C2/AA73:	F0 05		BEQ $AA7A	(+5)
C2/AA75:	DE BC EC	DEC $ECBC,X
C2/AA78:	80 21		BRA $AA9B	(+33)
C2/AA7A:	BD CC EC	LDA $ECCC,X
C2/AA7D:	C9 18		CMP #$18	(24)
C2/AA7F:	B0 1A		BCS $AA9B	(+26)
C2/AA81:	0A		ASL
C2/AA82:	DA		PHX
C2/AA83:	AA		TAX
C2/AA84:	7B		TDC			(A = 0)
C2/AA85:	A8		TAY			(Y = 0)
C2/AA86:	BFD2A8C2	LDA $C2A8D2,X
C2/AA8A:	99 DC EC	STA $ECDC,Y
C2/AA8D:	E8		INX
C2/AA8E:	C8		INY
C2/AA8F:	C0 10 00	CPY #$0010	(16)
C2/AA92:	D0 F2		BNE $AA86	(-14)
C2/AA94:	FA		PLX
C2/AA95:	20 5A AB	JSR $AB5A
C2/AA98:	FE CC EC	INC $ECCC,X
C2/AA9B:	C2 20		REP #$20		(16-bit A)
C2/AA9D:	A5 10		LDA $10
C2/AA9F:	38		SEC
C2/AAA0:	E9 00 02	SBC #$0200	(512)
C2/AAA3:	85 10		STA $10
C2/AAA5:	A5 12		LDA $12
C2/AAA7:	38		SEC
C2/AAA8:	E9 00 02	SBC #$0200	(512)
C2/AAAB:	85 12		STA $12
C2/AAAD:	7B		TDC
C2/AAAE:	E2 20		SEP #$20		(8-bit A)
C2/AAB0:	E8		INX
C2/AAB1:	E0 10 00	CPX #$0010	(16)
C2/AAB4:	D0 BA		BNE $AA70	(-70)
C2/AAB6:	AE EC EC	LDX $ECEC
C2/AAB9:	E8		INX
C2/AABA:	8E EC EC	STX $ECEC
C2/AABD:	E0 4A 00	CPX #$004A	(74)
C2/AAC0:	D0 19		BNE $AADB	(+25)
C2/AAC2:	DA		PHX
C2/AAC3:	EE ED E9	INC $E9ED
C2/AAC6:	A9 82		LDA #$82	(-126)
C2/AAC8:	8D 00 13	STA $1300		(Instrument set for the current song)
C2/AACB:	A9 C0		LDA #$C0	(-64)
C2/AACD:	8D 01 13	STA $1301		(Play song #$C0)
C2/AAD0:	9C 02 13	STZ $1302		(Set volume to 0)
C2/AAD3:	220400C5	JSL $C50004
C2/AAD7:	9C ED E9	STX $E9ED		(Mute variable)
C2/AADA:	FA		PLX
C2/AADB:	E0 5A 00	CPX #$005A	(90)
C2/AADE:	F0 03		BEQ $AAE3	(+3)
C2/AAE0:	4C 3E AA	JMP $AA3E

C2/AAE3:	A9 80		LDA #$80	(-128)
C2/AAE5:	20 61 A9	JSR $A961		(Call C1/022A 128 times)
C2/AAE8:	AD F9 E9	LDA $E9F9		(Screen brightness)
C2/AAEB:	F0 0A		BEQ $AAF7	(+10)	(If 0, return)
C2/AAED:	A9 10		LDA #$10	(16)
C2/AAEF:	20 61 A9	JSR $A961		(Call C1/022A 16 times)
C2/AAF2:	CE F9 E9	DEC $E9F9		(Fade out/dim?)
C2/AAF5:	D0 F6		BNE $AAED	(-10)
C2/AAF7:	6B		RTL

(Called from C2/AA45, C2/AA4C, C2/AA56 and C2/AA5D.)
C2/AAF8:	8B		PHB
C2/AAF9:	A9 7F		LDA #$7F
C2/AAFB:	48		PHA
C2/AAFC:	AB		PLB			(Data bank register now points to bank $7F)
C2/AAFD:	C2 20		REP #$20		(16-bit A)
C2/AAFF:	7B		TDC			(A = 0)
C2/AB00:	AA		TAX			(X = 0)
C2/AB01:	64 18		STZ $18
C2/AB03:	A9 00 E2	LDA #$E200
C2/AB06:	18		CLC
C2/AB07:	65 18		ADC $18
C2/AB09:	85 10		STA $10
C2/AB0B:	A9 0E E0	LDA #$E00E
C2/AB0E:	18		CLC
C2/AB0F:	65 18		ADC $18
C2/AB11:	85 14		STA $14
C2/AB13:	A9 10 00	LDA #$0010	(16)
C2/AB16:	85 16		STA $16
C2/AB18:	A5 10		LDA $10
C2/AB1A:	1A 1A		INC x2
C2/AB1C:	85 12		STA $12
C2/AB1E:	A0 1C 00	LDY #$001C	(28)
C2/AB21:	B1 10		LDA ($10),Y	($E21C = $E21E, $E21A = $E21C etc.)
C2/AB23:	91 12		STA ($12),Y
C2/AB25:	88 88		DEY x2
C2/AB27:	10 F8		BPL $AB21	(-8)
C2/AB29:	B2 14		LDA ($14)		($E200 = $E00E)
C2/AB2B:	92 10		STA ($10)
C2/AB2D:	A0 10 00	LDY #$0010	(16)
C2/AB30:	B1 14		LDA ($14),Y	($E210 = $E01E)
C2/AB32:	91 10		STA ($10),Y
C2/AB34:	A5 10		LDA $10
C2/AB36:	38		SEC
C2/AB37:	E9 00 02	SBC #$0200	(512)
C2/AB3A:	85 10		STA $10
C2/AB3C:	A5 14		LDA $14
C2/AB3E:	38		SEC
C2/AB3F:	E9 00 02	SBC #$0200	(512)
C2/AB42:	85 14		STA $14
C2/AB44:	C6 16		DEC $16
C2/AB46:	D0 D0		BNE $AB18	(-48)	(Shift back 512 bytes and repeat, 16 times in total)
C2/AB48:	A5 18		LDA $18
C2/AB4A:	18		CLC
C2/AB4B:	69 20 00	ADC #$0020	(32)
C2/AB4E:	85 18		STA $18
C2/AB50:	C9 00 02	CMP #$0200	(512)
C2/AB53:	D0 AE		BNE $AB03	(-82)	(Repeat the whole thing 16 times, but shift forward 32 bytes each time)
C2/AB55:	7B		TDC
C2/AB56:	E2 20		SEP #$20		(8-bit A)
C2/AB58:	AB		PLB
C2/AB59:	60		RTS

(Called from C2/AA95.)
C2/AB5A:	DA		PHX
C2/AB5B:	7B		TDC			(A = 0)
C2/AB5C:	AA		TAX			(X = 0)
C2/AB5D:	A8		TAY			(Y = 0)
C2/AB5E:	C2 20		REP #$20		(16-bit A)
C2/AB60:	BD DC EC	LDA $ECDC,X
C2/AB63:	49 FF FF	EOR #$FFFF
C2/AB66:	85 1A		STA $1A
C2/AB68:	B1 10		LDA ($10),Y
C2/AB6A:	25 1A		AND $1A
C2/AB6C:	17 12		ORA [$12],Y
C2/AB6E:	97 12		STA [$12],Y
C2/AB70:	B1 10		LDA ($10),Y
C2/AB72:	3D DC EC	AND $ECDC,X
C2/AB75:	91 10		STA ($10),Y
C2/AB77:	E8 E8		INX x2
C2/AB79:	8A		TXA
C2/AB7A:	29 0F 00	AND #$000F
C2/AB7D:	AA		TAX
C2/AB7E:	C8 C8		INY x2
C2/AB80:	C0 00 02	CPY #$0200	(512)
C2/AB83:	D0 DB		BNE $AB60	(-37)
C2/AB85:	7B		TDC
C2/AB86:	E2 20		SEP #$20		(8-bit A)
C2/AB88:	FA		PLX
C2/AB89:	60		RTS

(A few of the instructions used here are used multiple times throughout this section. It would be more efficient to make a separate function out of them.)
C2/AB8A:	8B		PHB
C2/AB8B:	7B		TDC			(A = 0)
C2/AB8C:	48		PHA
C2/AB8D:	AB		PLB			(Data bank register now points to bank $00)
C2/AB8E:	A9 7E		LDA #$7E
C2/AB90:	8D 74 43	STA $4374		(7th DMA channel source bank)
C2/AB93:	A2 B7 6A	LDX #$6AB7	(27,319)
C2/AB96:	8E 16 21	STX $2116		(Video address)
C2/AB99:	A0 0E 00	LDY #$000E	(14)
C2/AB9C:	8C 75 43	STY $4375		(7th DMA channel size)
C2/AB9F:	A2 15 5D	LDX #$5D15 (23,829)
C2/ABA2:	8E 72 43	STX $4372		(7th DMA channel source offset)
C2/ABA5:	A9 80		LDA #$80	(-128)
C2/ABA7:	8D 0D 42	STA $420B		(Enable DMA channel 7)
C2/ABAA:	A2 F7 6A	LDX #$6AF7	(27,383)
C2/ABAD:	8E 16 21	STX $2116		(Video address)
C2/ABB0:	8C 75 43	STY $4375		(7th DMA channel size)
C2/ABB3:	A2 23 5D	LDX #$5D23	(23,843)
C2/ABB6:	8E 72 43	STX $4372		(7th DMA channel source offset)
C2/ABB9:	8D 0B 42	STZ $420B		(Disable all DMA channels)
C2/ABBC:	AF817B7E	LDA $7E7B81
C2/ABC0:	D0 03		BNE $ABC5	(+3)
C2/ABC2:	4C 4A AC	JMP $AC4A

(This function seems to be calling the decompressed graphics data repeatedly. This might be the function that displays the cutscenes in the game.)
C2/ABC5:	C2 20		REP #$20		(16-bit A)
C2/ABC7:	A9 24 7A	LDA #$7A24	(31,268)
C2/ABCA:	8D 16 21	STA $2116		(Video address)
C2/ABCD:	AFD95D7E	LDA $7E5DD9
C2/ABD1:	8D 18 21	STA $2118		(Video data)
C2/ABD4:	AFDB5D7E	LDA $7E5DDB
C2/ABD8:	8D 18 21	STA $2118		(Repeatedly load a new word and store in video data)
C2/ABDB:	AFDD5D7E	LDA $7E5DDD
C2/ABDF:	8D 18 21	STA $2118
C2/ABE2:	AFDF5D7E	LDA $7E5DDF
C2/ABE6:	8D 18 21	STA $2118
C2/ABE9:	AFE15D7E	LDA $7E5DE1
C2/ABED:	8D 18 21	STA $2118
C2/ABF0:	AFE35D7E	LDA $7E5DE3
C2/ABF4:	8D 18 21	STA $2118
C2/ABF7:	AFE55D7E	LDA $7E5DE5
C2/ABFB:	8D 18 21	STA $2118
C2/ABFE:	AFE75D7E	LDA $7E5DE7
C2/AC02:	8D 18 21	STA $2118
C2/AC05:	A9 24 7A	LDA #$7A64	(31,332)
C2/AC08:	8D 16 21	STA $2116		(Video address)
C2/AC0B:	AF737A7E	LDA $7E7A73
C2/AC0F:	8D 18 21	STA $2118
C2/AC12:	AF757A7E	LDA $7E7A75
C2/AC16:	8D 18 21	STA $2118
C2/AC19:	AF777A7E	LDA $7E7A77
C2/AC1D:	8D 18 21	STA $2118
C2/AC20:	AF797A7E	LDA $7E7A79
C2/AC24:	8D 18 21	STA $2118
C2/AC27:	AF7B7A7E	LDA $7E7A7B
C2/AC2B:	8D 18 21	STA $2118
C2/AC2E:	AF7D7A7E	LDA $7E7A7D
C2/AC32:	8D 18 21	STA $2118
C2/AC35:	AF7F7A7E	LDA $7E7A7F
C2/AC39:	8D 18 21	STA $2118
C2/AC3C:	AF817A7E	LDA $7E7A81
C2/AC40:	8D 18 21	STA $2118
C2/AC43:	7B		TDC
C2/AC44:	E2 20		SEP #$20
C2/AC46:	8F817B7E	STA $7E7B81
C2/AC4A:	A9 01		LDA #$01	(1)
C2/AC4C:	8D 70 43	STA $4370		(7th DMA channel control)
C2/AC4F:	A9 18		LDA #$18	(24)
C2/AC51:	8D 71 43	STA $4371		(7th DMA channel transfer destination)
C2/AC54:	A9 7E		LDA #$7E	(126)
C2/AC56:	8D 73 43	STA $4373		(7th DMA channel source offset high byte)
C2/AC59:	A0 0C 00	LDY #$000C	(12)
C2/AC5C:	AF9B627E	LDA $7E629B	
C2/AC60:	F0 0C		BEQ $AC6E	(+12)
C2/AC62:	7B		TDC
C2/AC63:	8F9B627E	STA $7E629B
C2/AC67:	A5 98		LDA $98
C2/AC69:	4A		LSR
C2/AC6A:	29 03		AND #$03
C2/AC6C:	80 07		BRA $AC75	(+7)
C2/AC6E:	AF9A7B7E	LDA $7E7B9A
C2/AC72:	3A		DEC
C2/AC73:	29 03		AND #$03
C2/AC75:	0A		ASL
C2/AC76:	AA		TAX
C2/AC77:	A9 80		LDA #$80	(-128)
C2/AC79:	7C 7C AC	JMP ($AC7C,X)

(Pointers.)
C2/AC7C:	84 AC
C2/AC7E:	BD AC
C2/AC80:	F6 AC
C2/AC82:	2F AD

(These four methods are all about setting up the 7th DMA channel for some purpose.)
C2/AC84:	A2 39 78	LDX #$7839	(30,777)
C2/AC87:	8E 16 21	STX $2116
C2/AC8A:	A2 51 5C	LDX #$5C51	(23,633)
C2/AC8D:	8E 72 43	STX $4372
C2/AC90:	8C 75 43	STY $4375
C2/AC93:	8D 0B 42	STA $420B
C2/AC96:	A2 39 79	LDX #$7939	(31,033)
C2/AC99:	8E 16 21	STX $2116
C2/AC9C:	A2 51 5C	LDX #$5C51	(23,633)
C2/AC9F:	8E 72 43	STX $4372
C2/ACA2:	8C 75 43	STY $4375
C2/ACA5:	8D 0B 42	STA $420B
C2/ACA8:	A2 39 7A	LDX #$7A39	(31,289)
C2/ACAB:	8E 16 21	STX $2116
C2/ACAE:	A2 51 5C	LDX #$5C51	(23,633)
C2/ACB1:	8E 72 43	STX $4372
C2/ACB4:	8C 75 43	STY $4375
C2/ACB7:	8D 0B 42	STA $420B
C2/ACBA:	4C 65 AD	JMP $AD65

C2/ACBD:	A2 79 78	LDX #$7879	(30,841)
C2/ACC0:	8E 16 21	STX $2116
C2/ACC3:	A2 69 5C	LDX #$5C69	(23,657)
C2/ACC6:	8E 72 43	STX $4372
C2/ACC9:	8C 75 43	STY $4375
C2/ACCC:	8D 0B 42	STA $420B
C2/ACCF:	A2 79 79	LDX #$7979	(31,097)
C2/ACD2:	8E 16 21	STX $2116
C2/ACD5:	A2 69 5C	LDX #$5C69	(23,657)
C2/ACD8:	8E 72 43	STX $4372
C2/ACDB:	8C 75 43	STY $4375
C2/ACDE:	8D 0B 42	STA $420B
C2/ACE1:	A2 79 7A	LDX #$7A79	(31,353)
C2/ACE4:	8E 16 21	STX $2116
C2/ACE7:	A2 69 5C	LDX #$5C69	(23,657)
C2/ACEA:	8E 72 43	STX $4372
C2/ACED:	8C 75 43	STY $4375
C2/ACF0:	8D 0B 42	STA $420B
C2/ACF3:	4C 65 AD	JMP $AD65		(BRA would've worked...)

C2/ACF6:	A2 B9 78	LDX #$78B9	(30,905)
C2/ACF9:	8E 16 21	STX $2116
C2/ACFC:	A2 81 5C	LDX #$5C81	(23,681)
C2/ACFF:	8E 72 43	STX $4372
C2/AD02:	8C 75 43	STY $4375
C2/AD05:	8D 0B 42	STA $420B
C2/AD08:	A2 B9 79	LDX #$79B9	(31,161)
C2/AD0B:	8E 16 21	STX $2116
C2/AD0E:	A2 81 5C	LDX #$5C81	(23,681)
C2/AD11:	8E 72 43	STX $4372
C2/AD14:	8C 75 43	STY $4375
C2/AD17:	8D 0B 42	STA $420B
C2/AD1A:	A2 B9 7A	LDX #$7AB9	(31,417)
C2/AD1D:	8E 16 21	STX $2116
C2/AD20:	A2 81 5C	LDX #$5C81	(23,681)
C2/AD23:	8E 72 43	STX $4372
C2/AD26:	8C 75 43	STY $4375
C2/AD29:	8D 0B 42	STA $420B
C2/AD2C:	4C 65 AD	JMP $AD65		(BRA would've worked...)

C2/AD2F:	A2 B9 78	LDX #$78B9	(30,905)
C2/AD32:	8E 16 21	STX $2116
C2/AD35:	A2 81 5C	LDX #$5C81	(23,681)
C2/AD38:	8E 72 43	STX $4372
C2/AD3B:	8C 75 43	STY $4375
C2/AD3E:	8D 0B 42	STA $420B
C2/AD41:	A2 B9 79	LDX #$79B9	(31,161)
C2/AD44:	8E 16 21	STX $2116
C2/AD47:	A2 81 5C	LDX #$5C81	(23,681)
C2/AD4A:	8E 72 43	STX $4372
C2/AD4D:	8C 75 43	STY $4375
C2/AD50:	8D 0B 42	STA $420B
C2/AD53:	A2 B9 7A	LDX #$7AB9	(31,417)
C2/AD56:	8E 16 21	STX $2116
C2/AD59:	A2 81 5C	LDX #$5C81	(23,681)
C2/AD5C:	8E 72 43	STX $4372
C2/AD5F:	8C 75 43	STY $4375
C2/AD62:	8D 0B 42	STA $420B
C2/AD65:	AB		PLB
C2/AD66:	E2 10		SEP #$10		(8-bit X & Y)
C2/AD68:	AD 9C 7B	LDA $7B9C
C2/AD6B:	F0 49		BEQ $ADB6	(+73)
C2/AD6D:	9C 9C 7B	STZ $7B9C
C2/AD70:	AD 9D 7B	LDA $7B9D
C2/AD73:	C9 FF		CMP #$FF	(-1)
C2/AD75:	F0 3F		BEQ $ADB6	(+63)
C2/AD77:	0A		ASL
C2/AD78:	AA		TAX
C2/AD79:	C2 20		REP #$20		(16-bit A)
C2/AD7B:	BFD9ADC2	LDA $C2ADD9,X
C2/AD7F:	A8		TAY
C2/AD80:	8A		TXA
C2/AD81:	0A 0A		ASL x2
C2/AD83:	AA		TAX
C2/AD84:	A9 03 00	LDA #$0003	(3)
C2/AD87:	85 36		STA $36
C2/AD89:	BFB9ADC2	LDA $C2ADB9,X
C2/AD8D:	8F162100	STA $002116
C2/AD91:	B9 0D 5C	LDA $5C0D,Y
C2/AD94:	8F162100	STA $002118
C2/AD98:	B9 0F 5C	LDA $5C0F,Y
C2/AD9B:	8F162100	STA $002118
C2/AD9F:	B9 11 5C	LDA $5C11,Y
C2/ADA2:	8F162100	STA $002118
C2/ADA6:	B9 13 5C	LDA $5C13,Y
C2/ADA9:	8F162100	STA $002118
C2/ADAD:	E8 E8		INX x2
C2/ADAF:	C6 36		DEC $36
C2/ADB1:	D0 D6		BNE $AD89	(-42)
C2/ADB3:	7B		TDC
C2/ADB4:	E2 20		SEP #$20		(8-bit A)
C2/ADB6:	C2 10		REP #$10		(16-bit X & Y)
C2/ADB8:	6B		RTL

C2/ADB9:	35 78
C2/ADBB:	35 79
C2/ADBD:	35 7A
C2/ADBF:	00 00
C2/ADC1:	75 78
C2/ADC3:	75 79
C2/ADC5:	75 7A
C2/ADC7:	00 00
C2/ADC9:	B5 78
C2/ADCB:	B5 79
C2/ADCD:	B5 7A
C2/ADCF:	00 00
C2/ADD1:	F5 78
C2/ADD3:	F5 79
C2/ADD5:	F5 7A
C2/ADD7:	00 00

C2/ADD9:	00 00
C2/ADDB:	10 00
C2/ADDD:	20 00
C2/ADDF:	30 00

(C2/ADE1-C2/AF20: Displayable status names.)

(Animation script command 80 85.)
C2/AF21:	A4 5B		LDY $5B		(Script pointer)
C2/AF23:	C8		INY
C2/AF24:	84 5B		STY $5B
C2/AF26:	A7 5B		LDA [$5B]
C2/AF28:	F0 21		BEQ $AF4B	(+33)
C2/AF2A:	C9 01		CMP #$01	(1)
C2/AF2C:	F0 07		BEQ $AF35	(+7)
C2/AF2E:	20 E6 BB	JSR $BBE6
C2/AF31:	29 07		AND #$07
C2/AF33:	D0 15		BNE $AF4A	(+21)
C2/AF35:	C2 20		REP #$20		(16-bit A)
C2/AF37:	7B		TDC			(A = 0)
C2/AF38:	AA		TAX			(X = 0)
C2/AF39:	BFE8E2C2	LDA $C2E2E8,X
C2/AF3D:	9D A0 7E	STA $7EA0,X	(Palettes 5-7)
C2/AF40:	E8 E8		INX x2
C2/AF42:	E0 60 00	CPX #$0060	(96)
C2/AF45:	D0 F2		BNE $AF39	(-14)
C2/AF47:	7B		TDC
C2/AF48:	E2 20		SEP #$20		(8-bit A)
C2/AF4A:	6B		RTL

C2/AF4B:	C2 20		REP #$20		(16-bit A)
C2/AF4D:	7B		TDC			(A = 0)
C2/AF4E:	AA		TAX			(X = 0)
C2/AF4F:	BF88E2C2	LDA $C2E288,X
C2/AF53:	9D A0 7E	STA $7EA0,X	(Palettes 5-7)
C2/AF56:	E8 E8		INX x2
C2/AF58:	E0 60 00	CPX #$0060	(96)
C2/AF5B:	D0 F2		BNE $AF4F	(-14)
C2/AF5D:	7B		TDC
C2/AF5E:	E2 20		SEP #$20		(8-bit A)
C2/AF60:	6B		RTL

(Animation script command 80 83.)
C2/AF61:	7B		TDC			(A = 0)
C2/AF62:	AA		TAX			(X = 0)
C2/AF63:	9E 57 80	STZ $8057,X
C2/AF66:	E8		INX
C2/AF67:	E0 0C 00	CPX #$000C	(12)
C2/AF6A:	D0 F7		BNE $AF63	(-9)
C2/AF6C:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/AF6F:	BD 39 6A	LDA $6A39,X	(Target's ID)
C2/AF72:	10 22		BPL $AF96	(+34)	(Exit if target is a party member)
C2/AF74:	29 0F		AND #$0F
C2/AF76:	38		SEC
C2/AF77:	E9 04		SBC #$04	(4)
C2/AF79:	0A		ASL
C2/AF7A:	AA		TAX
C2/AF7B:	C2 20		REP #$20		(16-bit A)
C2/AF7D:	A9 F8 FF	LDA #$FFF8	(-8)
C2/AF80:	9D 57 80	STA $8057,X
C2/AF83:	BD CF 80	LDA $80CF,X	(Enemy's Y-position)
C2/AF86:	8D B4 EC	STA $ECB4
C2/AF89:	38		SEC
C2/AF8A:	E9 00 01	SBC #$0100	(256)
C2/AF8D:	9D CF 80	STA $80CF,X	(Adjust by 256... units... pixels?)
C2/AF90:	8E B6 EC	STX $ECB6
C2/AF93:	7B		TDC
C2/AF94:	E2 20		SEP #$20		(8-bit A)
C2/AF96:	6B		RTL

C2/AF97:	02 08 20 80
C2/AF9B:	03 0C 30 C0
C2/AF9F:	01 04 10 40

(Called from C1/3B0B.)
C2/AFA3:	7B		TDC			(A = 0)
C2/AFA4:	A8		TAY			(Y = 0)
C2/AFA5:	64 10		STZ $10
C2/AFA7:	A5 10		LDA $10
C2/AFA9:	4A 4A		LSR x2
C2/AFAB:	99 7F A1	STA $A17F,Y
C2/AFAE:	99 80 A1	STA $A180,Y
C2/AFB1:	99 81 A1	STA $A181,Y
C2/AFB4:	99 82 A1	STA $A182,Y
C2/AFB7:	A5 10		LDA $10
C2/AFB9:	29 03		AND #$03
C2/AFBB:	AA		TAX
C2/AFBC:	BF97AFC2	LDA $C2AF97,X
C2/AFC0:	99 7F A3	STA $A37F,Y
C2/AFC3:	99 80 A3	STA $A380,Y
C2/AFC6:	99 81 A3	STA $A381,Y
C2/AFC9:	99 82 A3	STA $A382,Y
C2/AFCC:	BF9BAFC2	LDA $C2AF9B,X
C2/AFD0:	99 7F A5	STA $A57F,Y
C2/AFD3:	99 80 A5	STA $A580,Y
C2/AFD6:	99 81 A5	STA $A581,Y
C2/AFD9:	99 82 A5	STA $A582,Y
C2/AFDC:	BF9FAFC2	LDA $C2AF9F,X
C2/AFE0:	99 7F A7	STA $A77F,Y
C2/AFE3:	99 80 A7	STA $A780,Y
C2/AFE6:	99 81 A7	STA $A781,Y
C2/AFE9:	99 82 A7	STA $A782,Y
C2/AFEC:	E6 10		INC $10
C2/AFEE:	C8C8C8C8	INY x4
C2/AFF2:	C0 00 02	CPY #$0200	(512)
C2/AFF5:	D0 B0		BNE $AFA7	(-80)
C2/AFF7:	6B		RTL

(Animation script command 80 72.)
C2/AFF8:	A6 5B		LDX $5B		(Script pointer)
C2/AFFA:	E8		INX
C2/AFFB:	86 5B		STX $5B
C2/AFFD:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B000:	BD 88 6F	LDA $6F88,X
C2/B003:	10 01		BPL $B006	(+1)
C2/B005:	6B		RTL

C2/B006:	A7 5B		LDA [$5B]
C2/B008:	C2 20		REP #$20		(16-bit A)
C2/B00A:	85 22		STA $22
C2/B00C:	A5 5B		LDA $5B
C2/B00E:	18		CLC
C2/B00F:	65 22		ADC $22
C2/B011:	85 5B		STA $5B
C2/B013:	7B		TDC
C2/B014:	E2 20		SEP #$20		(8-bit A)
C2/B016:	6B		RTL

(Script animation command 80 74.)
C2/B017:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B01A:	BD 39 6A	LDA $6A39,X	(Target's ID)
C2/B01D:	30 06		BMI $B025	(+6)	(Branch if target is an enemy)
C2/B01F:	A8		TAY
C2/B020:	B9 AE 61	LDA $61AE,Y	(Will the party member casting this spell please step forward?)
C2/B023:	F0 13		BEQ $B038	(+19)	(No? OK, then we'll just branch)
C2/B025:	A0 01 00	LDY #$0001	(1)
C2/B028:	B7 5B		LDA [$5B],Y
C2/B02A:	C2 20		REP #$20		(16-bit A)
C2/B02C:	85 22		STA $22
C2/B02E:	A5 5B		LDA $5B
C2/B030:	18		CLC
C2/B031:	65 22		ADC $22
C2/B033:	85 5B		STA $5B
C2/B035:	7B		TDC
C2/B036:	E2 20		SEP #$20		(8-bit A)
C2/B038:	A6 5B		LDX $5B		(Increment script pointer)
C2/B03A:	E8		INX
C2/B03B:	86 5B		STX $5B
C2/B03D:	6B		RTL

(Animation script command 80 7D.)
C2/B03E:	A6 5B		LDX $5B		(Increment script pointer)
C2/B040:	E8		INX
C2/B041:	86 5B		STX $5B
C2/B043:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B046:	AD 10 EC	LDA $EC10
C2/B049:	D0 01		BNE $B04C	(+1)
C2/B04B:	6B		RTL

C2/B04C:	A7 5B		LDA [$5B]
C2/B04E:	C2 20		REP #$20		(16-bit A)
C2/B050:	85 22		STA $22
C2/B052:	A5 5B		LDA $5B
C2/B054:	18		CLC
C2/B055:	65 22		ADC $22		(Why not ADC $5B, hold the LDA?)
C2/B057:	85 5B		STA $5B
C2/B059:	7B		TDC
C2/B05A:	E2 20		SEP #$20		(8-bit A)
C2/B05C:	6B		RTL

(Data called from C1/9418.)
C2/B05D:	8C 31
C2/B05F:	01 04
C2/B061:	1F 7C
C2/B063:	1D 74
C2/B065:	19 64
C2/B067:	17 5C
C2/B069:	15 54
C2/B06B:	13 4C
C2/B06D:	11 44
C2/B06F:	0F 3C
C2/B071:	0D 34
C2/B073:	0B 2C
C2/B075:	09 24
C2/B077:	07 1C
C2/B079:	05 14
C2/B07B:	03 0C

(Palette information used with block animations, such as shields or Zephyr Cape.)
C2/B07D:	00 00 00 00 1A 00 13 00 0D 00 FE 7F 80 03 C0 01
C2/B08D:	00 00 00 00 FE 7F 3A 37 95 22 8B 1D F2 28 6E 18
C2/B09D:	00 00 00 00 FE 7F 37 67 71 4A 89 29 F8 2E 8F 09
C2/B0AD:	AD 35 63 0C FF 6F 08 21 F8 31 26 29 C6 18 72 01

(Don't know why we'd need this data table when we could just INC-ASL... Also, I don't even know where this is called from.)
C2/B0BD:	02 04
C2/B0BF:	06 08
C2/B0C1:	0A 0C
C2/B0C3:	0E 10

(This data is called from C2/B1D9.)
C2/B0C5:	00 00
C2/B0C7:	FF FF
C2/B0C9:	FE FF
C2/B0CB:	FD FF

(Pointers called from C2/B27E.)
C2/B0CD:	3D B1
C2/B0CF:	3D B1
C2/B0D1:	3D B1
C2/B0D3:	3D B1
C2/B0D5:	3D B1
C2/B0D7:	3D B1
C2/B0D9:	3D B1
C2/B0DB:	AD B1
C2/B0DD:	3D B1
C2/B0DF:	3D B1
C2/B0E1:	3D B1
C2/B0E3:	3D B1
C2/B0E5:	3D B1
C2/B0E7:	18 B2
C2/B0E9:	3D B1
C2/B0EB:	B8 B1
C2/B0ED:	3D B1
C2/B0EF:	3D B1
C2/B0F1:	3D B1
C2/B0F3:	3D B1
C2/B0F5:	3D B1
C2/B0F7:	3D B1
C2/B0F9:	3D B1
C2/B0FB:	3D B1
C2/B0FD:	3D B1
C2/B0FF:	3D B1
C2/B101:	3D B1
C2/B103:	3D B1
C2/B105:	3D B1
C2/B107:	3D B1
C2/B109:	3D B1
C2/B10B:	E1 B1
C2/B10D:	3D B1
C2/B10F:	B8 B1
C2/B111:	3D B1
C2/B113:	3D B1
C2/B115:	3D B1
C2/B117:	3D B1
C2/B119:	3D B1
C2/B11B:	3D B1
C2/B11D:	3D B1
C2/B11F:	3D B1
C2/B121:	3D B1
C2/B123:	3D B1
C2/B125:	C3 B1
C2/B127:	3D B1
C2/B129:	70 B1
C2/B12B:	3D B1
C2/B12D:	3D B1
C2/B12F:	3D B1
C2/B131:	3D B1
C2/B133:	3D B1
C2/B135:	3D B1
C2/B137:	3D B1
C2/B139:	4E B1
C2/B13B:	3D B1

C2/B13D:	6B

(This data is called from C2/B159.)
C2/B13E:	01 00
C2/B140:	02 00
C2/B142:	01 00
C2/B144:	00 00
C2/B146:	01 00
C2/B148:	02 00
C2/B14A:	01 00
C2/B14C:	02 00

C2/B14E:	A5 9A		LDA $9A
C2/B150:	F0 1D		BEQ $B16F	(+29)
C2/B152:	A5 0E		LDA $0E
C2/B154:	29 07 00	AND #$0007
C2/B157:	0A		ASL
C2/B158:	AA		TAX
C2/B159:	BF3EB1C2	LDA $C2B13E,X	(0, 1 or 2)
C2/B15D:	48		PHA
C2/B15E:	18		CLC
C2/B15F:	69 F0 FF	ADC #$FFF0	(-16)	(Why not SBC?)
C2/B162:	8FB4647E	STA $7E64B4	(Battle info window X-offset)
C2/B166:	68		PLA
C2/B167:	18		CLC
C2/B168:	69 10 00	ADC #$0010	(16)
C2/B16B:	8D C3 80	STA $80C3		(Enemy's X-position)
C2/B16E:	7B		TDC
C2/B16F:	6B		RTL

C2/B170:	7B		TDC			(A = 0)
C2/B171:	AA		TAX			(X = 0)
C2/B172:	BD 13 EC	LDA $EC13,X
C2/B175:	9D 71 EC	STA $EC71,X
C2/B178:	9D 81 EC	STA $EC81,X
C2/B17B:	BD 53 EC	LDA $EC53,X
C2/B17E:	9D 91 EC	STA $EC91,X
C2/B181:	9D A1 EC	STA $ECA1,X
C2/B184:	E8 E8		INX x2
C2/B186:	E0 10 00	CPX #$0010	(16)
C2/B189:	D0 E7		BNE $B172	(-25)
C2/B18B:	A5 0E		LDA $0E
C2/B18D:	4A 4A 4A	LSR x3
C2/B190:	29 07 00	AND #$0007
C2/B193:	0A		ASL
C2/B194:	AA		TAX
C2/B195:	7B		TDC			(A = 0)
C2/B196:	A8		TAY			(Y = 0)
C2/B197:	BD 71 EC	LDA $EC71,X
C2/B19A:	99 13 EC	STA $EC13,Y
C2/B19D:	BD 91 EC	LDA $EC91,X
C2/B1A0:	99 53 EC	STA $EC53,Y
C2/B1A3:	C8 C8		INY x2
C2/B1A5:	E8 E8		INX x2
C2/B1A7:	C0 10 00	CPY #$0010	(16)
C2/B1AA:	D0 EB		BNE $B197	(-21)
C2/B1AC:	6B		RTL

C2/B1AD:	AD B2 64	LDA $64B2		(Background Y-shift)
C2/B1B0:	18		CLC
C2/B1B1:	69 06 00	ADC #$0006	(6)
C2/B1B4:	8D B2 64	STA $64B2
C2/B1B7:	6B		RTL

C2/B1B8:	AD B0 64	LDA $64B0		(Background X-shift)
C2/B1BB:	38		SEC
C2/B1BC:	E9 04 00	SBC #$0004	(4)
C2/B1BF:	8D B0 64	STA $64B0
C2/B1C2:	6B		RTL

C2/B1C3:	AD B0 64	LDA $64B0		(Background X-shift)
C2/B1C6:	38		SEC
C2/B1C7:	E9 08 00	SBC #$0008	(8)
C2/B1CA:	8D B0 64	STA $64B0
C2/B1CD:	E2 20		SEP #$20		(8-bit A)
C2/B1CF:	20 E6 BB	JSR $BBE6
C2/B1D2:	C2 20		REP #$20		(16-bit A)
C2/B1D4:	29 03 00	AND #$0003
C2/B1D7:	0A		ASL
C2/B1D8:	AA		TAX
C2/B1D9:	BFC5B0C2	LDA $C2B0C5,X	(0, -1, -2 or -3)
C2/B1DD:	8D B2 64	STA $64B2		(Background Y-shift)
C2/B1E0:	6B		RTL

C2/B1E1:	7B		TDC			(A = 0)
C2/B1E2:	AA		TAX			(X = 0)
C2/B1E3:	BD 13 EC	LDA $EC13,X
C2/B1E6:	9D 71 EC	STA $EC71,X
C2/B1E9:	9D 81 EC	STA $EC81,X
C2/B1EC:	E8 E8		INX x2
C2/B1EE:	E0 10 00	CPX #$0010	(16)
C2/B1F1:	D0 F0		BNE $B1E3	(-16)
C2/B1F3:	AD B2 64	LDA $64B2		(Background Y-shift)
C2/B1F6:	18		CLC
C2/B1F7:	69 06 00	ADC #$0006	(6)
C2/B1FA:	8D B2 64	STA $64B2		(You know, there's a function that does exactly this not far from here...)
C2/B1FD:	A5 0E		LDA $0E
C2/B1FF:	4A 4A		LSR x2
C2/B201:	29 07 00	AND #$0007
C2/B204:	0A		ASL
C2/B205:	AA		TAX
C2/B206:	7B		TDC			(A = 0)
C2/B207:	A8		TAY			(Y = 0)
C2/B208:	BD 71 EC	LDA $EC71,X
C2/B20B:	99 13 EC	STA $EC13,Y
C2/B20E:	C8 C8		INY x2
C2/B210:	E8 E8		INX x2
C2/B212:	C0 10 00	CPY #$0010	(16)
C2/B215:	D0 F1		BNE $B208	(-15)
C2/B217:	6B		RTL

C2/B218:	7B		TDC			(A = 0)
C2/B219:	AA		TAX			(X = 0)
C2/B21A:	BD 13 EC	LDA $EC13,X
C2/B21D:	9D 71 EC	STA $EC71,X
C2/B220:	9D 79 EC	STA $EC79,X
C2/B223:	BD 1B EC	LDA $EC1B,X
C2/B226:	9D 81 EC	STA $EC81,X
C2/B229:	9D 89 EC	STA $EC89,X
C2/B22C:	E8 E8		INX x2
C2/B22E:	E0 08 00	CPX #$0008	(8)
C2/B231:	D0 E7		BNE $B21A	(-25)
C2/B233:	A5 0E		LDA $0E
C2/B235:	4A 4A 4A	LSR x3
C2/B238:	29 03 00	AND #$0003
C2/B23B:	49 03 00	EOR #$0003
C2/B23E:	0A		ASL
C2/B23F:	AA		TAX
C2/B240:	7B		TDC			(A = 0)
C2/B241:	A8		TAY			(Y = 0)
C2/B242:	BD 71 EC	LDA $EC71,X
C2/B245:	99 13 EC	STA $EC13,Y
C2/B248:	BD 81 EC	LDA $EC81,X
C2/B24B:	99 1B EC	STA $EC1B,Y
C2/B24E:	C8 C8		INY x2
C2/B250:	E8 E8		INX x2
C2/B252:	C0 08 00	CPY #$0008	(16)
C2/B255:	D0 EB		BNE $B242	(-21)
C2/B257:	6B		RTL

C2/B258:	E2 10		SEP #$10		(8-bit X & Y)
C2/B25A:	7B		TDC			(A = 0)
C2/B25B:	AA		TAX			(X = 0)
C2/B25C:	BD A0 7E	LDA $7EA0,X	(Palette 5)
C2/B25F:	9D 11 EC	STA $EC11,X
C2/B262:	BD C0 7E	LDA $7EC0,X	(Palette 6)
C2/B265:	9D 31 EC	STA $EC31,X
C2/B268:	BD E0 7E	LDA $7EE0,X	(Palette 7)
C2/B26B:	9D 51 EC	STA $EC51,X
C2/B26E:	E8 E8		INX x2
C2/B270:	E0 20		CPX #$20	(32)
C2/B272:	D0 E8		BNE $B25C	(-24)
C2/B274:	C2 10		REP #$10		(16-bit X & Y)
C2/B276:	AD B8 EC	LDA $ECB8		(Battle background ID)
C2/B279:	29 3F 00	AND #$003F
C2/B27C:	0A		ASL
C2/B27D:	AA		TAX
C2/B27E:	7C CD B0	JMP ($B0CD,X)

(Animation script command 80 7C.)
C2/B281:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B284:	BD 38 6A	LDA $6A38,X	(Switch caster's ID with target's ID)
C2/B287:	48		PHA
C2/B288:	BD 39 6A	LDA $6A39,X
C2/B28B:	9D 38 6A	STA $6A38,X
C2/B28E:	68		PLA
C2/B28F:	9D 39 6A	STA $6A39,X
C2/B292:	C2 20		REP #$20		(16-bit A)
C2/B294:	BD 7E 6F	LDA $6F7E,X	(Spell animation's next X-coordinate?)
C2/B297:	48		PHA
C2/B298:	BD 80 6F	LDA $6F80,X	(Spell animation's next Y-coordinate?)
C2/B29B:	48		PHA
C2/B29C:	BD 82 6F	LDA $6F82,X	(Spell animation's original X-coordinate)
C2/B29F:	9D 7E 6F	STA $6F7E,X
C2/B2A2:	BD 84 6F	LDA $6F84,X	(Spell animation's original Y-coordinate)
C2/B2A5:	9D 80 6F	STA $6F80,X
C2/B2A8:	68		PLA
C2/B2A9:	9D 84 6F	STA $6F84,X
C2/B2AC:	68		PLA
C2/B2AD:	9D 82 6F	STA $6F82,X
C2/B2B0:	7B		TDC
C2/B2B1:	E2 20		SEP #$20		(8-bit A)
C2/B2B3:	6B		RTL

(Animation script command 80 7B.)
C2/B2B4:	7B		TDC			(A = 0)
C2/B2B5:	AA		TAX			(X = 0)
C2/B2B6:	A8		TAY			(Y = 0)
C2/B2B7:	9E C0 61	STZ $61C0,X	(Character's animation ID)
C2/B2BA:	BD BE 61	LDA $61BE,X
C2/B2BD:	49 40		EOR #$40
C2/B2BF:	9D BE 61	STA $61BE,X	(X-flip sprite)
C2/B2C2:	B9 10 7B	LDA $7B10,Y
C2/B2C5:	49 01		EOR #$01
C2/B2C7:	99 10 7B	STA $7B10,Y	(Reverse direction faced by character's sprite)
C2/B2CA:	C8		INY
C2/B2CB:	8A		TXA
C2/B2CC:	18		CLC
C2/B2CD:	69 20		ADC #$20	(32)
C2/B2CF:	AA		TAX
C2/B2D0:	A9 80		CMP #$80	(128)
C2/B2D2:	D0 E3		BNE $B2B7	(-29)	(Loop for all party members)
C2/B2D4:	6B		RTL

(Animation script command 80 79.)
C2/B2D5:	7B		TDC			(A = 0)
C2/B2D6:	AA		TAX			(X = 0)
C2/B2D7:	C2 20		REP #$20		(16-bit A)
C2/B2D9:	BD C9 61	LDA $61C9,X	(Character's X-coordinate)
C2/B2DC:	38		SEC
C2/B2DD:	E9 04 00	SBC #$0004	(4)	(Move left 4 pixels?)
C2/B2E0:	9D C9 61	STA $61C9,X
C2/B2E3:	7B		TDC
C2/B2E4:	E2 20		SEP #$20		(8-bit A)
C2/B2E6:	BD BD 2E	LDA $2EBD,X	(Status effect on character)
C2/B2E9:	29 C0		AND #$C0
C2/B2EB:	D0 05		BNE $B2F2	(+5)	(Branch if not Wounded or Petrified)
C2/B2ED:	A9 04		LDA #$04	(4)
C2/B2EF:	9D C0 61	STA $61C0,X	(Character's animation ID)
C2/B2F2:	C2 20		REP #$20		(16-bit A)
C2/B2F4:	8A		TXA
C2/B2F5:	18		CLC
C2/B2F6:	69 20 00	ADC #$0020	(32)
C2/B2F9:	AA		TAX
C2/B2FA:	E0 80 00	CPX #$0080	(128)
C2/B2FD:	D0 DA		BNE $B2D9	(-38)	(Loop for all party members)
C2/B2FF:	7B		TDC
C2/B300:	E2 20		SEP #$20		(8-bit A)
C2/B302:	6B		RTL

(Animation script command 80 7A.)
C2/B303:	7B		TDC			(A = 0)
C2/B304:	AA		TAX			(X = 0)
C2/B305:	C2 20		REP #$20		(16-bit A)
C2/B307:	BD C9 61	LDA $61C9,X	(Character's X-coordinate)
C2/B30A:	18		CLC
C2/B30B:	69 04 00	ADC #$0004	(4)	(Move right 4 pixels?)
C2/B30E:	9D C9 61	STA $61C9,X
C2/B311:	7B		TDC
C2/B312:	E2 20		SEP #$20		(8-bit A)
C2/B314:	BD BD 2E	LDA $2EBD,X	(Status effect on character)
C2/B317:	29 C0		AND #$C0		(Stone? Death?)
C2/B319:	D0 05		BNE $B320	(+5)	(If either...)
C2/B31B:	A9 03		LDA #$03	(3)
C2/B31D:	9D C0 61	STA $61C0,X	(...set animation ID to 3)
C2/B320:	C2 20		REP #$20		(16-bit A)
C2/B322:	8A		TXA
C2/B323:	18		CLC
C2/B324:	69 20 00	ADC #$0020	(32)
C2/B327:	AA		TAX
C2/B328:	E0 80 00	CPX #$0080	(128)
C2/B32B:	D0 DA		BNE $B307	(-38)	(Loop for all party members)
C2/B32D:	7B		TDC
C2/B32E:	E2 20		SEP #$20		(8-bit A)
C2/B330:	6B		RTL

(Animation script command 80 77.)
C2/B331:	20 9F C2	JSR $C29F
C2/B334:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B337:	BD 39 6A	LDA $6A39,X	(Target's ID)
C2/B33A:	0A		ASL
C2/B33B:	AA		TAX
C2/B33C:	C2 20		REP #$20		(16-bit A)
C2/B33E:	B9 B7 61	LDA $61B7,Y
C2/B341:	9D 56 62	STA $6256,X
C2/B344:	B9 B9 61	LDA $61B9,Y
C2/B347:	9D 5E 62	STA $625E,X
C2/B34A:	AE F6 7A	LDX $7AF6
C2/B34D:	BD 7E 6F	LDA $6F7E,X
C2/B350:	99 B7 61	STA $61B7,Y
C2/B353:	BD 80 6F	LDA $6F80,X
C2/B356:	38		SEC
C2/B357:	E9 30 00	SBC #$0030	(48)
C2/B35A:	99 B9 61	STA $61B9,Y
C2/B35D:	7B		TDC
C2/B35E:	E2 20		SEP #$20		(8-bit A)
C2/B360:	6B		RTL

(Animation script command 80 78.)
C2/B361:	20 9F C2	JSR $C29F
C2/B364:	AE F6 7A	LDX $7AF6		(Base index of animation data in memory)
C2/B367:	BD 39 6A	LDA $6A39,X	(Target's ID)
C2/B36A:	0A		ASL
C2/B36B:	AA		TAX
C2/B36C:	C2 20		REP #$20		(16-bit A)
C2/B36E:	BD 56 62	LDA $6256,X	
C2/B371:	99 B7 61	STA $61B7,Y
C2/B374:	7B		TDC
C2/B375:	99 C5 61	STA $61C5,Y	(Character's X-offset)
C2/B378:	99 D4 61	STA $61D4,Y
C2/B37B:	BD 5E 62	LDA $625E,X
C2/B37E:	99 B9 61	STA $61B9,Y
C2/B381:	7B		TDC
C2/B382:	99 C7 61	STA $61C7,Y	(Character's Y-offset)
C2/B385:	99 D2 61	STA $61D2,Y	(Character's Y-coordinate)
C2/B388:	7B		TDC			(A = 0 already...)
C2/B389:	E2 20		SEP #$20		(8-bit A)
C2/B38B:	6B		RTL

(Animation script command 80 76.)
C2/B38C:	AE F6 7A	LDX $7AF6		(Animation ID)
C2/B38F:	A0 01 00	LDY #$0001	(1)
C2/B392:	B7 5B		LDA [$5B],Y
C2/B394:	85 10		STA $10
C2/B396:	30 04		BMI $B39C	(+4)
C2/B398:	64 11		STZ $11
C2/B39A:	80 04		BRA $B3A0	(+4)
C2/B39C:	A9 FF		LDA #$FF	(-1)
C2/B39E:	85 11		STA $11
C2/B3A0:	C2 20		REP #$20		(16-bit A)
C2/B3A2:	E6 5B		INC $5B
C2/B3A4:	BD D9 74	LDA $74D9,X
C2/B3A7:	18		CLC
C2/B3A8:	65 10		ADC $10
C2/B3AA:	9D D9 74	STA $74D9,X
C2/B3AD:	85 10		STA $10
C2/B3AF:	64 12		STZ $12
C2/B3B1:	64 16		STZ $16
C2/B3B3:	A9 40 00	LDA #$0040	(64)
C2/B3B6:	85 18		STA $18
C2/B3B8:	BD 87 6F	LDA $6F87,X	(Animation direction)
C2/B3BB:	29 FF 00	AND #$00FF
C2/B3BE:	F0 2F		BEQ $B3EF	(+47)	(Continue if direction is right, branch if left)
C2/B3C0:	BD 80 6F	LDA $6F80,X
C2/B3C3:	29 FF 00	AND #$00FF
C2/B3C6:	0A 0A		ASL x2
C2/B3C8:	AA		TAX
C2/B3C9:	A5 12		LDA $12
C2/B3CB:	18		CLC
C2/B3CC:	65 10		ADC $10
C2/B3CE:	85 12		STA $12
C2/B3D0:	A5 13		LDA $13
C2/B3D2:	29 FF 00	AND #$00FF
C2/B3D5:	85 13		STA $13
C2/B3D7:	A5 16		LDA $16
C2/B3D9:	38		SEC
C2/B3DA:	E5 13		SBC $13
C2/B3DC:	85 16		STA $16
C2/B3DE:	64 13		STZ $13
C2/B3E0:	9D F5 43	STA $43F5,X	(BG1 HDMA scroll window X-offset)
C2/B3E3:	CA (x4)	DEX x4
C2/B3E7:	C6 18		DEC $18
C2/B3E9:	D0 DE		BNE $B3C9	(-34)
C2/B3EB:	7B		TDC
C2/B3EC:	E2 20		SEP #$20		(8-bit A)
C2/B3EE:	6B		RTL

C2/B3EF:	BD 80 6F	LDA $6F80,X
C2/B3F2:	29 FF 00	AND #$00FF
C2/B3F5:	0A 0A		ASL x2
C2/B3F7:	AA		TAX
C2/B3F8:	A5 12		LDA $12
C2/B3FA:	18		CLC
C2/B3FB:	65 10		ADC $10
C2/B3FD:	85 12		STA $12
C2/B3FF:	A5 13		LDA $13
C2/B401:	29 FF 00	AND #$00FF
C2/B404:	18		CLC
C2/B405:	65 16		ADC $16
C2/B407:	85 16		STA $16
C2/B409:	64 13		STZ $13
C2/B40B:	9D F5 43	STA $43F5,X	(BG1 HDMA scroll window X-offset)
C2/B40E:	CA (x4)	DEX x4
C2/B412:	C6 18		DEC $18
C2/B414:	D0 E2		BNE $B3F8	(-30)
C2/B416:	7B		TDC
C2/B417:	E2 20		SEP #$20		(8-bit A)
C2/B419:	6B		RTL

C2/B41A:	7B		TDC			(A = 0)
C2/B41B:	AA		TAX			(X = 0)
C2/B41C:	8E 50 2F	STX $2F50
C2/B41F:	A2 03 00	LDX #$0003	(3)
C2/B422:	BD 10 7B	LDA $7B10,X	(Direction faced by character)
C2/B425:	4A		LSR A
C2/B426:	2E 50 2F	ROL $2F50		(This byte holds all of which party members are facing right)
C2/B429:	CA		DEX
C2/B42A:	10 F6		BPL $B422	(-10)	(Loop for all 4 party members)
C2/B42C:	7B		TDC			(A = 0)
C2/B42D:	AA		TAX			(X = 0)
C2/B42E:	A2 0A 00	LDX #$000A	(10)
C2/B431:	BD F3 80	LDA $80F3,X
C2/B434:	5D 7E 61	EOR $617E,X
C2/B437:	49 01		EOR #$01		(Get opposite of direction enemy is facing)
C2/B439:	4A		LSR A
C2/B43A:	2E 51 2F	ROL $2F51		(This byte holds all of which enemies are facing right)
C2/B43D:	CA CA		DEX x2
C2/B43F:	10 F0		BPL $B431	(-16)	(Loop for all 6 enemies)
C2/B441:	6B		RTL

C2/B442:	A6 18		LDX $18
C2/B444:	C2 20		REP #$20		(16-bit A)
C2/B446:	BD 00 7E	LDA $7E00,X	(Palette 0 data)
C2/B449:	85 10		STA $10
C2/B44B:	4A (x5)	LSR x5
C2/B450:	85 12		STA $12
C2/B452:	4A (x5)	LSR x5
C2/B457:	29 1F 00	AND #$001F
C2/B45A:	85 14		STA $14
C2/B45C:	A5 10		LDA $10
C2/B45E:	29 1F 00	AND #$001F
C2/B461:	18		CLC
C2/B462:	65 14		ADC $14
C2/B464:	85 14		STA $14
C2/B466:	A5 12		LDA $12
C2/B468:	29 1F 00	AND #$001F
C2/B46B:	18		CLC
C2/B46C:	65 14		ADC $14
C2/B46E:	8F044200	STA $004204	
C2/B472:	E2 20		SEP #$20		(8-bit A)
C2/B474:	A9 03		LDA #$03	(3)
C2/B476:	8F064200	STA $004206
C2/B47A:	7B		TDC
C2/B47B:	C2 20		REP #$20		(16-bit A)
C2/B47D:	EA (x6)	NOP x6
C2/B483:	AF144200	LDA $004214
C2/B487:	85 10		STA $10
C2/B489:	0A (x5)	ASL x5
C2/B48E:	05 10		ORA $10
C2/B490:	9D 00 7E	STA $7E00,X
C2/B493:	E8 E8		INX x2
C2/B495:	E4 1A		CPX $1A
C2/B497:	D0 AD		BNE $B446	(-83)
C2/B499:	7B		TDC
C2/B49A:	E2 20		SEP #$20		(8-bit A)
C2/B49C:	6B		RTL

(8-bit data.)
C2/B49D:	01
C2/B49E:	02
C2/B49F:	03
C2/B4A0:	04
C2/B4A1:	05
C2/B4A2:	06

(16-bit data called from C1/B89A and C1/B8BA.)
C2/B4BE:	7A 0F
C2/B4C0:	C0 0F
C2/B4C2:	CE 0F
C2/B4C4:	DC 0F
C2/B4C6:	EA 0F
C2/B4C8:	F8 0F
C2/B4CA:	06 10
C2/B4CC:	1C 07
C2/B4CE:	30 10
C2/B4D0:	3E 10
C2/B4D2:	4C 10
C2/B4D4:	5A 10
C2/B4D6:	C8 14
C2/B4D8:	D6 14
C2/B4DA:	1C 15
C2/B4DC:	2A 15
C2/B4DE:	38 15
C2/B4E0:	F2 06
C2/B4E2:	0E 07
C2/B4E4:	E4 0D
C2/B4E6:	10 11
C2/B4E8:	1E 11
C2/B4EA:	2C 11
C2/B4EC:	3A 11
C2/B4EE:	48 11
C2/B4F0:	56 11
C2/B4F2:	64 11
C2/B4F4:	72 11
C2/B4F6:	80 11
C2/B4F8:	8E 11
C2/B4FA:	9C 11
C2/B4FC:	AA 11
C2/B4FE:	B8 11
C2/B500:	C6 11
C2/B502:	D4 11
C2/B504:	E2 11
C2/B506:	30 10
C2/B508:	68 10
C2/B50A:	76 10
C2/B50C:	84 10
C2/B50E:	B2 0F
C2/B510:	92 10
C2/B512:	00 0E
C2/B514:	A0 0F
C2/B516:	AE 10
C2/B518:	BC 10
C2/B51A:	CA 10
C2/B51C:	D8 10
C2/B51E:	E6 10
C2/B520:	F4 10
C2/B524:	02 11
C2/B526:	34 0F
C2/B528:	26 0F
C2/B52A:	18 0F
C2/B52C:	0A 0F
C2/B52E:	BA 14
C2/B530:	18 16

C2/B532:	C2 20		REP #$20		(16-bit A)
C2/B534:	BD 01 20	LDA $2001,X	(Enemy sprite ID)
C2/B537:	AA		TAX
C2/B538:	7B		TDC
C2/B539:	E2 20		SEP #$20		(8-bit A)
C2/B53B:	E0 06 01	CPX #$0106	(262)	(Is it GhostTrain?)
C2/B53E:	F0 01		BEQ $B541	(+1)	(If not, exit)
C2/B540:	6B		RTL

C2/B541:	A2 2C 01	LDX #$012C	(300)
C2/B544:	86 26		STX $26
C2/B546:	BF0300E7	LDA $E70003,X
C2/B54A:	0A		ASL
C2/B54B:	AA		TAX
C2/B54C:	BF4818E7	LDA $E71848,X
C2/B550:	85 F3		STA $F3
C2/B552:	BF4918E7	LDA $E71849,X
C2/B556:	85 F4		STA $F4
C2/B558:	A9 E7		LDA #$E7	(-25)
C2/B55A:	85 F5		STA $F5
C2/B55C:	A9 00		LDA #$00	(0)
C2/B55E:	85 F6		STA $F6
C2/B560:	A9 C4		LDA #$C4	(-60)
C2/B562:	85 F7		STA $F7
C2/B564:	A9 7F		LDA #$7F	(127)
C2/B566:	85 F8		STA $F8
C2/B568:	226DFFC2	JSL $C2FF6D
C2/B56C:	A6 26		LDX $26
C2/B56E:	BF0000E7	LDA $E70000,X
C2/B572:	29 7F		AND #$7F
C2/B574:	85 22		STA $22
C2/B576:	0A		ASL
C2/B577:	18		CLC
C2/B578:	65 22		ADC $22
C2/B57A:	AA		TAX
C2/B57B:	BF5016E7	LDA $E71650,X
C2/B57F:	85 F3		STA $F3
C2/B581:	BF5116E7	LDA $E71651,X
C2/B585:	85 F4		STA $F4
C2/B587:	BF5216E7	LDA $E71652,X
C2/B58B:	85 F5		STA $F5
C2/B58D:	A6 26		LDX $26
C2/B58F:	BF0200E7	LDA $E70002,X
C2/B593:	29 7F		AND #$7F
C2/B595:	85 22		STA $22
C2/B597:	0A		ASL
C2/B598:	18		CLC
C2/B599:	65 22		ADC $22
C2/B59B:	AA		TAX
C2/B59C:	BF5016E7	LDA $E71650,X
C2/B5A0:	85 F6		STA $F6
C2/B5A2:	BF5116E7	LDA $E71651,X
C2/B5A6:	85 F7		STA $F7
C2/B5A8:	BF5216E7	LDA $E71652,X
C2/B5AC:	85 F8		STA $F8
C2/B5AE:	C2 20		REP #$20		(16-bit A)
C2/B5B0:	64 10		STZ $10
C2/B5B2:	7B		TDC
C2/B5B3:	AA		TAX
C2/B5B4:	BF00C47F	LDA $7FC400,X
C2/B5B8:	29 FF 01	AND #$01FF
C2/B5BB:	C9 00 01	CMP #$0100
C2/B5BE:	90 24		BCC $B5E4	(+36)
C2/B5C0:	29 FF 00	AND #$00FF
C2/B5C3:	38		SEC
C2/B5C4:	E9 80 00	SBC #$0080	(128)
C2/B5C7:	0A (x5)	ASL x5
C2/B5CC:	A8		TAY
C2/B5CD:	DA		PHX
C2/B5CE:	A9 10 00	LDA #$0010	(16)
C2/B5D1:	85 12		STA $12
C2/B5D3:	A6 10		LDX $10
C2/B5D5:	B7 F6		LDA [$F6],Y
C2/B5D7:	9D 3F AE	STA $AE3F,X
C2/B5DA:	C8 C8		INY x2
C2/B5DC:	E8 E8		INX x2
C2/B5DE:	C6 12		DEC $12
C2/B5E0:	D0 F3		BNE $B5D5	(-13)
C2/B5E2:	80 1B		BRA $B5FF	(+27)

C2/B5E4:	0A (x5)	ASL x5
C2/B5E9:	A8		TAY
C2/B5EA:	DA		PHX
C2/B5EB:	A9 10 00	LDA #$0010	(16)
C2/B5EE:	85 12		STA $12
C2/B5F0:	A6 10		LDX $10
C2/B5F2:	B7 F3		LDA [$F3],Y
C2/B5F4:	9D 3F AE	STA $AE3F,X
C2/B5F7:	C8 C8		INY x2
C2/B5F9:	E8 E8		INX x2
C2/B5FB:	C6 12		DEC $12
C2/B5FD:	D0 F3		BNE $B5F2	(-13)
C2/B5FF:	86 10		STX $10
C2/B601:	FA		PLX
C2/B602:	E8 E8		INX x2
C2/B604:	E0 00 02	CPX #$0200	(512)
C2/B607:	D0 AB		BNE $B5B4	(-85)
C2/B609:	7B		TDC
C2/B60A:	E2 20		SEP #$20		(8-bit A)
C2/B60C:	6B		RTL

C2/B60D:	A2 80 02	LDX #$0280	(640)
C2/B610:	86 10		STX $10
C2/B612:	A2 0F 89	LDX #$890F	(-30,449)
C2/B615:	86 14		STX $14
C2/B617:	20 2D B6	JSR $B62D
C2/B61A:	20 41 B6	JSR $B641
C2/B61D:	A6 10		LDX $10
C2/B61F:	E8		INX
C2/B620:	86 10		STX $10
C2/B622:	A6 14		LDX $14
C2/B624:	E8		INX
C2/B625:	86 14		STX $14
C2/B627:	E0 13 89	CPX #$8913	(-30,445)
C2/B62A:	D0 EB		BNE $B617	(-21)
C2/B62C:	6B		RTL

C2/B62D:	7B		TDC			(A = 0)
C2/B62E:	A8		TAY			(Y = 0)
C2/B62F:	18		CLC
C2/B630:	71 14		ADC ($14),Y
C2/B632:	C8 (x4)	INY x4
C2/B636:	C0 60 00	CPY #$0060	(96)
C2/B639:	D0 F4		BNE $B62F	(-12)
C2/B63B:	49 FF		EOR #$FF
C2/B63D:	1A		INC
C2/B63E:	91 10		STA ($10),Y
C2/B640:	60		RTS

C2/B641:	A0 00 00	LDY #$0000	(0)
C2/B644:	B1 14		LDA ($14),Y
C2/B646:	91 10		STA ($10),Y
C2/B648:	C8 (x4)	INY x4
C2/B64C:	C0 60 00	CPY #$0060	(96)
C2/B64F:	D0 F3		BNE $B644	(-13)
C2/B651:	60		RTS

C2/B69A:	DA		PHX
C2/B69B:	85 18		STA $18
C2/B69D:	7B		TDC			(A = 0)
C2/B69E:	A8		TAY			(Y = 0)
C2/B69F:	B9 DC 02	LDA $02DC,Y
C2/B6A2:	C5 18		CMP $18
C2/B6A4:	F0 08		BEQ $B6AE	(+8)
C2/B6A6:	C8		INY
C2/B6A7:	C0 04 00	CPY #$0004	(4)
C2/B6AA:	D0 F3		BNE $B69F	(-13)
C2/B6AC:	80 16		BRA $B6C4	(+22)

C2/B6AE:	A9 17		LDA #$17	(23)
C2/B6B0:	85 1A		STA $1A
C2/B6B2:	B9 80 02	LDA $0280,Y
C2/B6B5:	9D 0F 89	STA $890F,X
C2/B6B8:	C8 (x4)	INY x4
C2/B6BC:	E8 (x4)	INX x4
C2/B6C0:	C6 1A		DEC $1A
C2/B6C2:	D0 EE		BNE $B6B2	(-18)
C2/B6C4:	FA		PLX
C2/B6C5:	60		RTS

C2/B6C6:	7B		TDC			(A = 0)
C2/B6C7:	A8		TAY			(Y = 0)
C2/B6C8:	91 10		STA ($10),Y
C2/B6CA:	C8 (x4)	INY x4
C2/B6CE:	C0 5C 00	CPY #$005C	(92)
C2/B6D1:	D0 F5		BNE $B6C8	(-11)
C2/B6D3:	A9 FF		LDA #$FF	(-1)
C2/B6D5:	91 10		STA ($10),Y
C2/B6D7:	C8 (x4)	INY x4
C2/B6DB:	91 10		STA ($10),Y
C2/B6DD:	60		RTS

C2/B6DE:	7B		TDC			(A = 0)
C2/B6DF:	A8		TAY			(Y = 0)
C2/B6E0:	18		CLC
C2/B6E1:	71 10		ADC ($10),Y
C2/B6E3:	C8 (x4)	INY x4
C2/B6E7:	C0 60 00	CPY #$0060	(96)
C2/B6EA:	D0 F4		BNE $B6E0	(-12)
C2/B6EC:	49 FF		EOR #$FF
C2/B6EE:	1A		INC
C2/B6EF:	D1 10		CMP ($10),Y
C2/B6F1:	F0 02		BEQ $B6F5	(+2)
C2/B6F3:	38		SEC
C2/B6F4:	60		RTS

C2/B6F5:	18		CLC
C2/B6F6:	60		RTS

(Called from C1/0F17.)
C2/B6F7:	C2 20		REP #$20		(16-bit A)
C2/B6F9:	7B		TDC			(A = 0)
C2/B6FA:	AA		TAX			(X = 0)
C2/B6FB:	A9 00 20	LDA #$2000	(8,192)
C2/B6FE:	9D AD 5F	STA $5FAD,X
C2/B701:	E8 E8		INX x2
C2/B703:	E0 80 00	CPX #$0080	(128)
C2/B706:	D0 F6		BNE $B6FE	(-10)
C2/B708:	7B		TDC			(A = 0)
C2/B709:	AA		TAX			(X = 0)
C2/B70A:	9D F5 43	STA $43F5,X	(BG1 HDMA scroll window X-offset)
C2/B70D:	9D 75 47	STA $4775,X
C2/B710:	9D F5 4A	STA $4AF5,X	(Battle info text X-shift)
C2/B713:	E8 E8		INX x2
C2/B715:	E0 80 03	CPX #$0380	(896)
C2/B718:	D0 F0		BNE $B70A	(-16)
C2/B71A:	A2 5C 02	LDX #$025C	(604)
C2/B71D:	A9 A9 FF	LDA #$FFA9	(-87)
C2/B720:	85 12		STA $12
C2/B722:	A9 66 FF	LDA #$FF66	(-154)
C2/B725:	85 14		STA $14
C2/B727:	A5 12		LDA $12
C2/B729:	9D 77 47	STA $4777,X
C2/B72C:	A5 14		LDA $14
C2/B72E:	9D F7 4A	STA $4AF7,X	(Battle info text Y-shift)
C2/B731:	C6 12		DEC $12
C2/B733:	C6 14		DEC $14
C2/B735:	E8 (x4)	INX x4
C2/B739:	E0 80 03	CPX #$0380	(896)
C2/B73C:	D0 E9		BNE $B727	(-23)
C2/B73E:	A2 7C 02	LDX #$027C	(636)
C2/B741:	A9 64 00	LDA #$0064	(100)
C2/B744:	85 10		STA $10
C2/B746:	A9 0C 00	LDA #$000C	(12)
C2/B749:	85 12		STA $12
C2/B74B:	A5 10		LDA $10
C2/B74D:	9D F7 4A	STA $4AF7,X
C2/B750:	C6 12		DEC $12
C2/B752:	D0 0D		BNE $B761	(+13)
C2/B754:	A9 0C 00	LDA #$000C	(12)
C2/B757:	85 12		STA $12
C2/B759:	A5 10		LDA $10
C2/B75B:	18		CLC
C2/B75C:	69 04 00	ADC #$0004	(4)
C2/B75F:	85 10		STA $10
C2/B761:	E8 (x4)	INX x4
C2/B765:	E0 3C 03	CPX #$033C	(828)
C2/B768:	D0 E1		BNE $B74B	(-31)
C2/B76A:	A2 5C 02	LDX #$025C	(604)
C2/B76D:	A9 68 00	LDA #$0068	(104)
C2/B770:	9D 77 47	STA $4777,X
C2/B773:	E8 (x4)	INX x4
C2/B777:	E0 5C 03	CPX #$035C	(860)
C2/B77A:	D0 F4		BNE $B770	(-12)
C2/B77C:	7B		TDC			(A = 0)
C2/B77D:	AA		TAX			(X = 0)
C2/B77E:	BD 51 4D	LDA $4D51,X
C2/B781:	9D 75 4E	STA $4E75,X
C2/B784:	9D 75 4F	STA $4F75,X
C2/B787:	9D 95 50	STA $5095,X
C2/B78A:	E8 E8		INX x2
C2/B78C:	E0 00 01	CPX #$0100	(256)
C2/B78F:	D0 ED		BNE $B77E	(-19)
C2/B791:	BD 51 4D	LDA $4D51,X
C2/B794:	9D 75 4F	STA $4F75,X
C2/B797:	9D 95 50	STA $5095,X
C2/B79A:	E8 E8		INX x2
C2/B79C:	E0 20 01	CPX #$0120	(288)
C2/B79F:	D0 F0		BNE $B791	(-16)
C2/B7A1:	BD 51 4D	LDA $4D51,X
C2/B7A4:	9D 95 50	STA $5095,X
C2/B7A7:	E8 E8		INX x2
C2/B7A9:	E0 40 01	CPX #$0140	(320)
C2/B7AC:	D0 F3		BNE $B7A1	(-13)
C2/B7AE:	7B		TDC			(A = 0)
C2/B7AF:	AA		TAX			(X = 0)
C2/B7B0:	BD 73 4D	LDA $4D73,X
C2/B7B3:	18		CLC
C2/B7B4:	69 40 00	ADC #$0040	(64)
C2/B7B7:	9D 97 4E	STA $4E97,X
C2/B7BA:	18		CLC
C2/B7BB:	69 40 00	ADC #$0040	(64)
C2/B7BE:	9D 97 4F	STA $4F97,X
C2/B7C1:	38		SEC
C2/B7C2:	E9 08 00	SBC #$0008	(8)
C2/B7C5:	9D B7 50	STA $50B7,X
C2/B7C8:	E8 (x4)	INX x4
C2/B7CC:	E0 C0 00	CPX #$00C0	(192)
C2/B7CF:	D0 DF		BNE $B7B0	(-33)
C2/B7D1:	7B		TDC			(A = 0)
C2/B7D2:	AA		TAX			(X = 0)
C2/B7D3:	BD 53 4D	LDA $4D53,X
C2/B7D6:	38		SEC
C2/B7D7:	E9 08 00	SBC #$0008	(8)
C2/B7DA:	9D 97 50	STA $5097,X
C2/B7DD:	BD 33 4E	LDA $4E33,X
C2/B7E0:	38		SEC
C2/B7E1:	E9 08 00	SBC #$0008	(8)
C2/B7E4:	9D 77 51	STA $5177,X
C2/B7E7:	E8 (x4)	INX x4
C2/B7EB:	E0 20 00	CPX #$0020	(32)
C2/B7EE:	D0 E3		BNE $B7D3	(-29)
C2/B7F0:	7B		TDC			(A = 0)
C2/B7F1:	AA		TAX			(X = 0)
C2/B7F2:	9E D5 53	STZ $53D5,X
C2/B7F5:	A9 3C 01	LDA #$013C	(316)
C2/B7F8:	9D D7 53	STA $53D7,X
C2/B7FB:	E8 (x4)	INX x4
C2/B7FF:	E0 A0 00	CPX #$00A0	(160)
C2/B802:	D0 EE		BNE $B7F2	(-18)
C2/B804:	7B		TDC			(A = 0)
C2/B805:	AA		TAX			(X = 0)
C2/B806:	A9 18 00	LDA #$0018	(24)
C2/B809:	85 12		STA $12
C2/B80B:	A9 DC 00	LDA #$00DC	(220)
C2/B80E:	85 10		STA $10
C2/B810:	A9 00 01	LDA #$0100	(256)
C2/B813:	9D 75 54	STA $5475,X
C2/B816:	A5 10		LDA $10
C2/B818:	9D 77 54	STA $5477,X
C2/B81B:	C6 12		DEC $12
C2/B81D:	D0 08		BNE $B827	(+8)
C2/B81F:	A5 10		LDA $10
C2/B821:	18		CLC
C2/B822:	69 04 00	ADC #$0004	(4)
C2/B825:	85 10		STA $10
C2/B827:	E8 (x4)	INX x4
C2/B82B:	E0 C0 00	CPX #$00C0
C2/B82E:	D0 E0		BNE $B810	(-32)
C2/B830:	7B		TDC			(A = 0)
C2/B831:	AA		TAX			(X = 0)
C2/B832:	A9 60 00	LDA #$0060	(96)
C2/B835:	85 10		STA $10
C2/B837:	A9 14 00	LDA #$0014	(20)
C2/B83A:	85 12		STA $12
C2/B83C:	A9 00 01	LDA #$0100	(256)
C2/B83F:	9D D5 51	STA $51D5,X
C2/B842:	A5 10		LDA $10
C2/B844:	9D D7 51	STA $51D7,X
C2/B847:	C6 12		DEC $12
C2/B849:	D0 0D		BNE $B858	(+13)
C2/B84B:	A9 0C 00	LDA #$000C	(12)
C2/B84E:	85 12		STA $12
C2/B850:	A5 10		LDA $10
C2/B852:	18		CLC
C2/B853:	69 04 00	ADC #$0004	(4)
C2/B856:	85 10		STA $10
C2/B858:	E8 (x4)	INX x4
C2/B85C:	E0 E0 00	CPX #$00E0	(224)
C2/B85F:	D0 DB		BNE $B83C	(-37)
C2/B861:	7B		TDC
C2/B862:	9D D5 51	STA $51D5,X
C2/B865:	9D D7 51	STA $51D7,X
C2/B868:	E8 E8		INX x2
C2/B86A:	E0 00 01	CPX #$0100	(256)
C2/B86D:	D0 F3		BNE $B862	(-13)
C2/B86F:	7B		TDC			(A = 0 already...)
C2/B870:	AA		TAX			(X = 0)
C2/B871:	A9 60 00	LDA #$0060	(96)
C2/B874:	85 10		STA $10
C2/B876:	A9 0C 00	LDA #$000C	(12)
C2/B879:	85 12		STA $12
C2/B87B:	A9 00 01	LDA #$0100	(256)
C2/B87E:	9D 05 43	STA $4305,X
C2/B881:	A5 10		LDA $10
C2/B883:	9D 07 43	STA $4307,X
C2/B886:	C6 12		DEC $12
C2/B888:	D0 0D		BNE $B897	(+13)
C2/B88A:	A9 0C 00	LDA #$000C	(12)
C2/B88D:	85 12		STA $12
C2/B88F:	A5 10		LDA $10
C2/B891:	18		CLC
C2/B892:	69 04 00	ADC #$0004	(4)
C2/B895:	85 10		STA $10
C2/B897:	E8 (x4)	INX x4
C2/B89B:	E0 F0 00	CPX #$00F0	(240)
C2/B89E:	D0 DB		BNE $B87B	(-37)
C2/B8A0:	7B		TDC
C2/B8A1:	E2 20		SEP #$20		(8-bit A)
C2/B8A3:	6B		RTL

C2/B8A4:	AD F6 E9	LDA $E9F6
C2/B8A7:	F0 47		BEQ $B8F0	(+71)
C2/B8A9:	AD F9 E9	LDA $E9F9		(Battle screen brightness)
C2/B8AC:	29 0F		AND #$0F
C2/B8AE:	C9 0F		CMP #$0F	(15)
C2/B8B0:	F0 04		BEQ $B8B6	(+4)
C2/B8B2:	1A		INC
C2/B8B3:	8D F9 E9	STA $E9F9
C2/B8B6:	E2 10		SEP #$10		(8-bit X & Y)
C2/B8B8:	AD F7 E9	LDA $E9F7
C2/B8BB:	0A		ASL
C2/B8BC:	A8		TAY
C2/B8BD:	AD F8 E9	LDA $E9F8
C2/B8C0:	0A		ASL
C2/B8C1:	AA		TAX
C2/B8C2:	A9 E0		LDA #$E0	(-32)
C2/B8C4:	99 31 EA	STA $EA31,Y
C2/B8C7:	99 33 EA	STA $EA33,Y
C2/B8CA:	9D CB EA	STA $EACB,X
C2/B8CD:	9D CD EA	STA $EACD,X
C2/B8D0:	C9 FF		CMP #$FF
C2/B8D2:	F0 01		BEQ $B8D5	(+1)
C2/B8D4:	1A		INC
C2/B8D5:	E8 (x4)	INX x4
C2/B8D9:	88 (x4)	DEY x4
C2/B8DD:	D0 E5		BNE $B8C4	(-27)
C2/B8DF:	EE F8 E9	INC $E9F8
C2/B8E2:	EE F8 E9	INC $E9F8
C2/B8E5:	CE F7 E9	DEC $E9F7
C2/B8E8:	CE F7 E9	DEC $E9F7
C2/B8EB:	D0 03		BNE $B8F0	(+3)
C2/B8ED:	9C F6 E9	STZ $E9F6
C2/B8F0:	C2 10		REP #$10		(16-bit X & Y)
C2/B8F2:	6B		RTL

(A bunch of functions I chose to skip because they're well-documented in Assassin's C2 disassembly.)

(16-bit data.)
C2/BF4B:	00 C3
C2/BF4D:	40 C3
C2/BF4F:	80 C3
C2/BF51:	C0 C3

C2/BF53:	AD DB E9	LDA $E9DB
C2/BF56:	29 03		AND #$03
C2/BF58:	D0 30		BNE $BF8A	(+48)
C2/BF5A:	AD DB E9	LDA $E9DB
C2/BF5D:	4A 4A		LSR x2
C2/BF5F:	29 03		AND #$03
C2/BF61:	AA		TAX
C2/BF62:	BD 2A 20	LDA $202A,X
C2/BF65:	F0 05		BEQ $BF6C	(+5)
C2/BF67:	20 8E BF	JSR $BF8E
C2/BF6A:	80 1E		BRA $BF8A
C2/BF6C:	8A		TXA
C2/BF6D:	0A		ASL
C2/BF6E:	AA		TAX
C2/BF6F:	C2 20		REP #$20		(16-bit A)
C2/BF71:	BF43BFC2	LDA $C2BF43,X
C2/BF75:	AA		TAX
C2/BF76:	7B		TDC
C2/BF77:	A0 20 00	LDY #$0020	(32)
C2/BF7A:	9F00007F	STA $7F0000,X
C2/BF7E:	9F00017F	STA $7F0100,X
C2/BF82:	E8 E8		INX x2
C2/BF84:	88		DEY
C2/BF85:	D0 F3		BNE $BF7A	(-13)
C2/BF87:	7B		TDC
C2/BF88:	E2 20		SEP #$20		(8-bit A)
C2/BF8A:	EE DB E9	INC $E9DB
C2/BF8D:	6B		RTL

C2/BF8E:	A0 00 00	LDY #$0000	(0)
C2/BF91:	BD 2A 20	LDA $202A,X
C2/BF94:	3A		DEC
C2/BF95:	38		SEC
C2/BF96:	E9 0A		SBC #$0A	(10)
C2/BF98:	90 03		BCC $BF9D	(+3)
C2/BF9A:	C8		INY
C2/BF9B:	80 F8		BRA $BF95	(-8)
C2/BF9D:	18		CLC
C2/BF9E:	69 0A		ADC #$0A	(10)
C2/BFA0:	85 10		STA $10
C2/BFA2:	84 12		STY $12
C2/BFA4:	8B		PHB
C2/BFA5:	A9 7F		LDA #$7F
C2/BFA7:	48		PHA
C2/BFA8:	AB		PLB
C2/BFA9:	8A		TXA
C2/BFAA:	0A		ASL
C2/BFAB:	AA		TAX
C2/BFAC:	C2 20		REP #$20		(16-bit A)
C2/BFAE:	DA		PHX
C2/BFAF:	BF43BFC2	LDA $C2BF43,X
C2/BFB3:	AA		TAX
C2/BFB4:	A5 12		LDA $12
C2/BFB6:	20 DF BF	JSR $BFDF
C2/BFB9:	A5 10		LDA $10
C2/BFBB:	20 DF BF	JSR $BFDF
C2/BFBE:	FA		PLX
C2/BFBF:	BF4BBFC2	LDA $C2BF4B,X
C2/BFC3:	AA		TAX
C2/BFC4:	A5 10		LDA $10
C2/BFC6:	20 D3 BF	JSR $BFD3
C2/BFC9:	A5 12		LDA $12
C2/BFCB:	20 D3 BF	JSR $BFD3
C2/BFCE:	7B		TDC
C2/BFCF:	E2 20		SEP #$20		(8-bit A)
C2/BFD1:	AB		PLB
C2/BFD2:	60		RTS

C2/BFD3:	DA		PHX
C2/BFD4:	29 FF 00	AND #$00FF
C2/BFD7:	0A		ASL
C2/BFD8:	AA		TAX
C2/BFD9:	BF13C0C2	LDA $C2C013,X
C2/BFDD:	80 0A		BRA $BFE9	(+10)

C2/BFDF:	DA		PHX
C2/BFE0:	29 FF 00	AND #$00FF
C2/BFE3:	0A		ASL
C2/BFE4:	AA		TAX
C2/BFE5:	BFFFBFC2	LDA $C2BFFF,X
C2/BFE9:	A8		TAY
C2/BFEA:	FA		PLX
C2/BFEB:	A9 10 00	LDA #$0010	(16)
C2/BFEE:	85 14		STA $14
C2/BFF0:	B9 00 00	LDA $0000,Y
C2/BFF3:	9D 00 00	STA $0000,X
C2/BFF6:	E8 E8		INX x2
C2/BFF8:	C8 C8		INY x2
C2/BFFA:	C6 14		DEC $14
C2/BFFC:	D0 F2		BNE $BFF0	(-14)
C2/BFFE:	60		RTS

(16-bit data.)
C2/BFFF:	00 BE
C2/C001:	20 BE
C2/C003:	40 BE
C2/C005:	60 BE
C2/C007:	80 BE
C2/C009:	A0 BE
C2/C00B:	C0 BE
C2/C00D:	E0 BE
C2/C00F:	00 BF
C2/C011:	20 BF

C2/C013:	00 C0
C2/C015:	20 C0
C2/C017:	40 C0
C2/C019:	60 C0
C2/C01B:	80 C0
C2/C01D:	A0 C0
C2/C01F:	C0 C0
C2/C021:	E0 C0
C2/C023:	00 C1
C2/C025:	20 C1

C2/C027:	85 12		STA $12
C2/C029:	86 10		STX $10
C2/C02B:	8B		PHB
C2/C02C:	A9 7F		LDA #$7F
C2/C02E:	48		PHA
C2/C02F:	AB		PLB
C2/C030:	7B		TDC			(A = 0)
C2/C031:	AA		TAX			(X = 0)
C2/C032:	A9 08		LDA #$08	(8)
C2/C034:	85 18		STA $18
C2/C036:	C2 20		REP #$20		(16-bit A)
C2/C038:	A0 10 00	LDY #$0010	(16)
C2/C03B:	A7 10		LDA [$10]
C2/C03D:	85 1C		STA $1C
C2/C03F:	B7 10		LDA [$10],Y
C2/C041:	85 1A		STA $1A
C2/C043:	7B		TDC
C2/C044:	E2 20		SEP #$20		(8-bit A)
C2/C046:	A0 08 00	LDY #$0008	(8)
C2/C049:	7B		TDC
C2/C04A:	06 1B		ASL $1B
C2/C04C:	2A		ROL
C2/C04D:	06 1A		ASL $1A
C2/C04F:	2A		ROL
C2/C050:	06 1D		ASL $1D
C2/C052:	2A		ROL
C2/C053:	06 1C		ASL $1C
C2/C055:	2A		ROL
C2/C056:	29 1F		AND #$1F
C2/C058:	F0 02		BEQ $C05C	(+2)
C2/C05A:	09 30		ORA #$30
C2/C05C:	9D 01 C4	STA $C401,X
C2/C05F:	E8 E8		INX x2
C2/C061:	88		DEY
C2/C062:	D0 E5		BNE $C049	(-27)
C2/C064:	A4 10		LDY $10
C2/C066:	C8 C8		INY x2
C2/C068:	84 10		STY $10
C2/C06A:	C6 18		DEC $18
C2/C06C:	D0 C8		BNE $C036	(-56)
C2/C06E:	C2 20		REP #$20		(16-bit A)
C2/C070:	A5 10		LDA $10
C2/C072:	18		CLC
C2/C073:	69 10 00	ADC #$0010	(16)
C2/C076:	85 10		STA $10
C2/C078:	7B		TDC
C2/C079:	E2 20		SEP #$20		(8-bit A)
C2/C07B:	C6 14		DEC $14
C2/C07D:	D0 B3		BNE $C032	(-77)
C2/C07F:	AB		PLB
C2/C080:	6B		RTL

(Spell animation command C7.)
C2/C081:	A7 5B		LDA [$5B]
C2/C083:	0A		ASL
C2/C084:	AA		TAX
C2/C085:	FC 8C C0	JSR ($C08C,X)	(Call a subroutine)
C2/C088:	AE F6 7A	LDX $7AF6
C2/C08B:	6B		RTL

(Pointers called by C2/C085, indexed by [$5B].)
C2/C08C:	9B C3		(00)
C2/C08E:	62 C3		(01)
C2/C090:	1E C3		(02)
C2/C092:	39 C3		(03)
C2/C094:	03 C3		(04)
C2/C096:	B7 C2		(05)
C2/C098:	6A C2		(06)
C2/C09A:	47 C2		(07)
C2/C09C:	D6 C1		(08)
C2/C09E:	B3 C1		(09)
C2/C0A0:	94 C1		(0A)
C2/C0A2:	71 C1		(0B)
C2/C0A4:	36 C1		(0C)
C2/C0A6:	15 C1		(0D)
C2/C0A8:	F8 C0		(0E)
C2/C0AA:	F2 C0		(0F)
C2/C0AC:	B9 C0		(10)
C2/C0AE:	B0 C0		(11)

(Animation command C7 11.)
C2/C0B0:	AD 4B 2F	LDA $2F4B
C2/C0B3:	09 01		ORA #$01		(Ensures monster formation is not added to Veldt list)
C2/C0B5:	8D 4B 2F	STA $2F4B		(TSB would've worked...)
C2/C0B8:	60		RTS

(Animation command C7 10.)
C2/C0B9:	A0 01 00	LDY #$0001	(1)
C2/C0BC:	B7 5B		LDA [$5B],Y
C2/C0BE:	20 D2 C0	JSR $C0D2
C2/C0C1:	AA		TAX
C2/C0C2:	BF011AC1	LDA $C11A01,X
C2/C0C6:	0D 92 61	ORA $6192
C2/C0C9:	8D 92 61	STA $6192		(TSB would've worked...)
C2/C0CC:	A4 5B		LDY $5B
C2/C0CE:	C8		INY
C2/C0CF:	84 5B		STY $5B
C2/C0D1:	60		RTS

C2/C0D2:	85 10		STA $10
C2/C0D4:	7B		TDC			(A = 0)
C2/C0D5:	AA		TAX			(X = 0)
C2/C0D6:	64 12		STZ $12
C2/C0D8:	A5 10		LDA $10
C2/C0DA:	DD C6 2E	CMP $2EC6,X
C2/C0DD:	F0 0E		BEQ $C0ED	(+14)
C2/C0DF:	E6 12		INC $12
C2/C0E1:	8A		TXA
C2/C0E2:	18		CLC
C2/C0E3:	69 20		ADC #$20	(32)
C2/C0E5:	AA		TAX
C2/C0E6:	E0 80 00	CPX #$0080	(128)
C2/C0E9:	D0 ED		BNE $C0D8	(-19)
C2/C0EB:	7B		TDC
C2/C0EC:	60		RTS

C2/C0ED:	A5 12		LDA $12
C2/C0EF:	29 03		AND #$03
C2/C0F1:	60		RTS

(Animation command C7 0F.)
C2/C0F2:	A9 01		LDA #$01	(1)
C2/C0F4:	1C 52 2F	TRB $2F52
C2/C0F7:	60		RTS

(Animation command C7 0E.)
C2/C0F8:	A0 01 00	LDY #$0001	(1)
C2/C0FB:	B7 5B		LDA [$5B],Y
C2/C0FD:	F0 05		BEQ $C104	(+5)
C2/C0FF:	8D 85 62	STA $6285		(Makes screen shaky)
C2/C102:	80 0B		BRA $C10F	(+11)
C2/C104:	9C 85 62	STZ $6285		(Makes screen not shaky)
C2/C107:	7B		TDC			(A = 0)
C2/C108:	AA		TAX			(X = 0)
C2/C109:	8E B0 64	STX $64B0		(Background X-shift)
C2/C10C:	8E B2 64	STX $64B2		(Background Y-shift)
C2/C10F:	A4 5B		LDY $5B
C2/C111:	C8		INY
C2/C112:	84 5B		STY $5B
C2/C114:	60		RTS

(Animation command C7 0D.)
C2/C115:	A0 01 00	LDY #$0001	(1)
C2/C118:	B7 5B		LDA [$5B],Y
C2/C11A:	0A (x5)	ASL x5
C2/C11F:	AA		TAX
C2/C120:	7B		TDC			(A = 0)
C2/C121:	A8		TAY			(Y = 0)
C2/C122:	BF99D4C2	LDA $C2D499,X
C2/C126:	99 00 7F	STA $7F00,Y
C2/C129:	E8		INX
C2/C12A:	C8		INY
C2/C12B:	C0 20 00	CPY #$0020	(32)
C2/C12E:	D0 F2		BNE $C122	(-14)
C2/C130:	A4 5B		LDY $5B
C2/C132:	C8		INY
C2/C133:	84 5B		STY $5B
C2/C135:	60		RTS

(Animation command C7 0C.)
C2/C136:	A0 01 00	LDY #$0001	(1)
C2/C139:	B7 5B		LDA [$5B],Y
C2/C13B:	85 12		STA $12
C2/C13D:	7B		TDC			(A = 0)
C2/C13E:	AA		TAX			(X = 0)
C2/C13F:	64 10		STZ $10
C2/C141:	BD C6 2E	LDA $2EC6,X
C2/C144:	C5 12		CMP $12
C2/C146:	F0 0E		BEQ $C156	(+14)
C2/C148:	E6 10		INC $10
C2/C14A:	8A		TXA
C2/C14B:	18		CLC
C2/C14C:	69 20		ADC #$20	(32)
C2/C14E:	AA		TAX
C2/C14F:	E0 80 00	CPX #$0080	(128)
C2/C152:	D0 ED		BNE $C141	(-19)
C2/C154:	80 14		BRA $C16A	(+20)

C2/C156:	C8		INY
C2/C157:	B7 5B		LDA [$5B],Y
C2/C159:	9D AE 2E	STA $2EAE,X
C2/C15C:	A5 10		LDA $10
C2/C15E:	8D 78 7B	STA $7B78
C2/C161:	AE F6 7A	LDX $7AF6
C2/C164:	DA		PHX
C2/C165:	22752FC1	JSL $C12F75
C2/C169:	FA		PLX
C2/C16A:	A4 5B		LDY $5B
C2/C16C:	C8 C8		INY x2
C2/C16E:	84 5B		STY $5B
C2/C170:	60		RTS

(Animation command C7 0B.)
C2/C171:	A0 01 00	LDY #$0001	(1)
C2/C174:	EE ED E9	INC $E9ED		(Sound is not muted)
C2/C177:	7B		TDC			(A = 0)
C2/C178:	AA		TAX			(X = 0)
C2/C179:	B7 5B		LDY [$5B],Y
C2/C17B:	9D 00 13	STA $1300,X	
C2/C17E:	C8		INY
C2/C17F:	E8		INX
C2/C180:	E0 03 00	CPX #$0003	(3)
C2/C183:	D0 F4		BNE $C179	(-12)
C2/C185:	220400C5	JSL $C50004	(Plays a song)
C2/C189:	9C ED E9	STZ $E9ED
C2/C18C:	A4 5B		LDY $5B
C2/C18E:	C8 C8 C8	INY x3
C2/C191:	84 5B		STY $5B
C2/C193:	60		RTS

(Animation command C7 0A.)
C2/C194:	A0 01 00	LDY #$0001	(1)
C2/C197:	B7 5B		LDY [$5B],Y
C2/C199:	22C6BAC1	JSL $C1BAC6
C2/C19D:	A4 5B		LDY $5B
C2/C19F:	C8		INY
C2/C1A0:	84 5B		STY $5B
C2/C1A2:	60		RTS

(Data.)
C2/C1A3:	19
C2/C1A4:	18
C2/C1A5:	18
C2/C1A6:	1A
C2/C1A7:	1A
C2/C1A8:	1B
C2/C1A9:	1B
C2/C1AA:	19
C2/C1AB:	1A
C2/C1AC:	18
C2/C1AD:	18
C2/C1AE:	19
C2/C1AF:	19
C2/C1B0:	1B
C2/C1B1:	1B
C2/C1B2:	1A

(Animation command C7 09.)
C2/C1B3:	2299F9C1	JSL $C1F999
C2/C1B7:	48		PHA
C2/C1B8:	20 A7 C2	JSR $C2A7
C2/C1BB:	BD 87 6F	LDA $6F87,X
C2/C1BE:	F0 02		BEQ $C1C2	(+2)
C2/C1C0:	A9 08		LDA #$08	(8)
C2/C1C2:	85 10		STA $10
C2/C1C4:	68		PLA
C2/C1C5:	4A (x5)	LSR x5
C2/C1CA:	18		CLC
C2/C1CB:	65 10		ADC $10
C2/C1CD:	AA		TAX
C2/C1CE:	BFA3C1C2	LDA $C2C1A3,X
C2/C1D2:	99 C0 61	STA $61C0,Y
C2/C1D5:	60		RTS

(Animation command C7 08.)
C2/C1D6:	64 11		STZ $11
C2/C1D8:	64 13		STZ $13
C2/C1DA:	A0 01 00	LDY #$0001	(1)
C2/C1DD:	B7 5B		LDA [$5B],Y
C2/C1DF:	10 02		BPL $C1E3	(+2)
C2/C1E1:	C6 11		DEC $11
C2/C1E3:	85 10		STA $10
C2/C1E5:	C8		INY
C2/C1E6:	B7 5B		LDA [$5B],Y
C2/C1E8:	10 02		BPL $C1EC	(+2)
C2/C1EA:	C6 13		DEC $13
C2/C1EC:	85 12		STA $12
C2/C1EE:	C2 20		REP #$20		(16-bit A)
C2/C1F0:	AE F6 7A	LDX $7AF6
C2/C1F3:	BD 87 6F	LDA $6F87,X
C2/C1F6:	29 FF 00	AND #$00FF
C2/C1F9:	D0 1A		BNE $C215	(+26)
C2/C1FB:	BD 7E 6F	LDA $6F7E,X
C2/C1FE:	BD 82 6F	LDA $6F82,X	(????)
C2/C201:	18		CLC
C2/C202:	65 10		ADC $10
C2/C204:	9D 82 6F	STA $6F82,X
C2/C207:	BD 80 6F	LDA $6F80,X
C2/C20A:	BD 84 6F	LDA $6F84,X	(????)
C2/C20D:	18		CLC
C2/C20E:	65 12		ADC $12
C2/C210:	9D 84 6F	STA $6F84,X
C2/C213:	80 1A		BRA $C22F	(+26)

C2/C215:	A5 10		LDA $10
C2/C217:	49 FF FF	EOR #$FFFF
C2/C21A:	1A		INC
C2/C21B:	85 10		STA $10
C2/C21D:	BD 82 6F	LDA $6F82,X
C2/C220:	18		CLC
C2/C221:	65 10		ADC $10		(Could've used ADC $6F82,X instead...)
C2/C223:	9D 82 6F	STA $6F82,X
C2/C226:	BD 84 6F	LDA $6F84,X
C2/C229:	18		CLC
C2/C22A:	65 12		ADC $12
C2/C22C:	9D 84 6F	STA $6F84,X
C2/C22F:	E6 5B		INC $5B
C2/C231:	E6 5B		INC $5B
C2/C233:	7B		TDC
C2/C234:	E2 20		SEP #$20		(8-bit A)
C2/C236:	60		RTS

C2/C237:	03
C2/C238:	02
C2/C239:	02
C2/C23A:	04
C2/C23B:	04
C2/C23C:	05
C2/C23D:	05
C2/C23E:	03
C2/C23F:	04
C2/C240:	02
C2/C241:	02
C2/C242:	03
C2/C243:	03
C2/C244:	05
C2/C245:	05
C2/C246:	04

(Animation command C7 07.)
C2/C247:	2299F9C1	JSL $C1F999
C2/C24B:	48		PHA
C2/C24C:	20 A7 C2	JSR $C2A7
C2/C24F:	BD 87 6F	LDA $6F87,X
C2/C252:	F0 02		BEQ $C256	(+2)
C2/C254:	A9 08		LDA #$08	(8)
C2/C256:	85 10		STA $10
C2/C258:	68		PLA
C2/C259:	4A (x5)	LSR x5
C2/C25E:	18		CLC
C2/C25F:	65 10		ADC $10
C2/C261:	AA		TAX
C2/C262:	BF37C2C2	LDA $C2C237,X
C2/C266:	99 C0 61	STA $61C0,Y
C2/C269:	60		RTS

(Animation command C7 06.)
C2/C26A:	A0 01 00	LDY #$0001	(1)
C2/C26D:	B7 5B		LDA [$5B],Y
C2/C26F:	85 10		STA $10
C2/C271:	C8		INY
C2/C272:	B7 5B		LDA [$5B],Y
C2/C274:	85 12		STA $12
C2/C276:	64 11		STZ $11
C2/C278:	64 13		STZ $13
C2/C27A:	20 A7 C2	JSR $C2A7
C2/C27D:	C2 20		REP #$20		(16-bit A)
C2/C27F:	A5 10		LDA $10
C2/C281:	99 B7 61	STA $61B7,Y	(X-coordinate)
C2/C284:	7B		TDC
C2/C285:	99 C5 61	STA $61C5,Y	(X-coordinate offset)
C2/C288:	99 D4 61	STA $61D4,Y	(Something else to do with X-coordinate)
C2/C28B:	A5 12		LDA $12
C2/C28D:	99 B9 61	STA $61B9,Y	(Y-coordinate)
C2/C290:	7B		TDC
C2/C291:	99 C7 61	STA $61C7,Y	(Y-coordinate offset)
C2/C294:	99 D2 61	STA $61D2,Y	(Y-coordinate on battle map)
C2/C297:	E6 5B		INC $5B
C2/C299:	E6 5B		INC $5B
C2/C29B:	7B		TDC
C2/C29C:	E2 20		SEP #$20		(8-bit A)
C2/C29E:	60		RTS

C2/C29F:	AE F6 7A	LDX $7AF6
C2/C2A2:	BD 39 6A	LDA $6A39,X	(Target's index)
C2/C2A5:	80 06		BRA $C2AD	(+6)

C2/C2A7:	AE F6 7A	LDX $7AF6		(Animation ID)
C2/C2AA:	BD 38 6A	LDA $6A38,X	(Caster's index)
C2/C2AD:	0A (x5)	ASL x5
C2/C2B2:	A8		TAY
C2/C2B3:	8C F8 7A	STY $7AF8
C2/C2B6:	60		RTS

(Animation command C7 05.)
C2/C2B7:	A0 01 00	LDY #$0001	(1)
C2/C2BA:	B7 5B		LDA [$5B],Y
C2/C2BC:	85 10		STA $10
C2/C2BE:	7B		TDC			(A = 0)
C2/C2BF:	A8		TAY			(Y = 0)
C2/C2C0:	AA		TAX			(X = 0)
C2/C2C1:	B9 C6 2E	LDA $2EC6,Y
C2/C2C4:	C5 10		CMP $10
C2/C2C6:	F0 0D		BEQ $C2D5	(+13)
C2/C2C8:	E8		INX
C2/C2C9:	98		TYA
C2/C2CA:	18		CLC
C2/C2CB:	69 20		ADC #$20	(32)
C2/C2CD:	A8		TAY
C2/C2CE:	E0 04 00	CPX #$0004	(4)
C2/C2D1:	D0 EE		BNE $C2C1	(-18)
C2/C2D3:	7B		TDC			(A = 0)
C2/C2D4:	AA		TAX			(X = 0)
C2/C2D5:	8A		TXA
C2/C2D6:	0A (x5)	ASL x5
C2/C2DB:	A8		TAY
C2/C2DC:	AE F6 7A	LDX $7AF6
C2/C2DF:	C2 20		REP #$20		(16-bit A)
C2/C2E1:	B9 B7 61	LDA $61B7,Y
C2/C2E4:	18		CLC
C2/C2E5:	79 C5 61	ADC $61C5,Y
C2/C2E8:	18		CLC
C2/C2E9:	79 D4 61	ADC $61D4,Y
C2/C2EC:	9D 82 6F	STA $6F82,X
C2/C2EF:	B9 B9 61	LDA $61B9,Y
C2/C2F2:	18		CLC
C2/C2F3:	79 C7 61	ADC $61C7,Y
C2/C2F6:	18		CLC
C2/C2F7:	79 D2 61	ADC $61D2,Y
C2/C2FA:	9D 84 6F	STA $6F84,X
C2/C2FD:	E6 5B		INC $5B
C2/C2FF:	7B		TDC
C2/C300:	E2 20		SEP #$20		(8-bit A)
C2/C302:	60		RTS

(Animation command C7 04.)
C2/C303:	AE F6 7A	LDX $7AF6		(Animation ID)
C2/C306:	BD 38 6A	LDA $6A38,X	(Caster's index)
C2/C309:	0A 0A		ASL x2
C2/C30B:	A8		TAY
C2/C30C:	C2 20		REP #$20		(16-bit A)
C2/C30E:	B9 36 62	LDA $6236,Y
C2/C311:	9D 82 6F	STA $6F82,X
C2/C314:	B9 38 62	LDA $6238,Y
C2/C317:	9D 84 6F	STA $6F84,X
C2/C31A:	7B		TDC
C2/C31B:	E2 20		SEP #$20		(8-bit A)
C2/C31D:	60		RTS

(Animation command C7 02.)
C2/C31E:	20 A7 C2	JSR $C2A7
C2/C321:	BD 38 6A	LDA $6A38,X	(Caster's index)
C2/C324:	0A 0A		ASL x2
C2/C326:	AA		TAX
C2/C327:	C2 20		REP #$20		(16-bit A)
C2/C329:	B9 B7 61	LDA $61B7,Y
C2/C32C:	9D 36 62	STA $6236,X
C2/C32F:	B9 B9 61	LDA $61B9,Y
C2/C332:	9D 38 62	STA $6238,X
C2/C335:	7B		TDC
C2/C336:	E2 20		SEP #$20		(8-bit A)
C2/C338:	60		RTS

(Animation command C7 03.)
C2/C339:	20 A7 C2	JSR $C2A7
C2/C33C:	BD 38 6A	LDA $6A38,X	(Caster's index)
C2/C33F:	0A 0A		ASL x2
C2/C341:	AA		TAX
C2/C342:	C2 20		REP #$20		(16-bit A)
C2/C344:	BD 36 62	LDA $6236,X
C2/C347:	99 B7 61	STA $61B7,Y
C2/C34A:	7B		TDC
C2/C34B:	99 C5 61	STA $61C5,Y
C2/C34E:	99 D4 61	STA $61D4,Y
C2/C351:	BD 38 62	LDA $6238,Y
C2/C354:	99 B9 61	STA $61B9,Y
C2/C357:	7B		TDC
C2/C358:	99 C7 61	STA $61C7,Y
C2/C35B:	99 D2 61	STA $61D2,Y
C2/C35E:	7B		TDC			(A = 0 already...)
C2/C35F:	E2 20		SEP #$20		(8-bit A)
C2/C361:	60		RTS

(Animation command C7 01.)
C2/C362:	20 A7 C2	JSR $C2A7
C2/C365:	C2 20		REP #$20		(16-bit A)
C2/C367:	B9 B7 61	LDA $61B7,Y
C2/C36A:	18		CLC
C2/C36B:	79 C5 61	ADC $61C5,Y
C2/C36E:	18		CLC
C2/C36F:	79 D4 61	ADC $61D4,Y
C2/C372:	99 B7 61	STA $61B7,Y
C2/C375:	9D 7E 6F	STA $6F7E,X
C2/C378:	7B		TDC
C2/C379:	99 C5 61	STA $61C5,Y
C2/C37C:	99 D4 61	STA $61D4,Y
C2/C37F:	B9 B9 61	LDA $61B9,Y
C2/C382:	18		CLC
C2/C383:	79 C7 61	ADC $61C7,Y
C2/C386:	18		CLC
C2/C387:	79 D2 61	ADC $61D2,Y
C2/C38A:	99 B9 61	STA $61B9,Y
C2/C38D:	9D 80 6F	STA $6F80,X
C2/C390:	7B		TDC
C2/C391:	99 C7 61	STA $61C7,Y
C2/C394:	99 D2 61	STA $61D2,Y
C2/C397:	7B		TDC			(A = 0 already...)
C2/C398:	E2 20		SEP #$20		(8-bit A)
C2/C39A:	60		RTS

(Animation command C7 00.)
C2/C39B:	AE F6 7A	LDX $7AF6		(Animation ID)
C2/C39E:	A4 5B		LDY $5B
C2/C3A0:	C8		INY
C2/C3A1:	84 5B		STY $5B
C2/C3A3:	BD 38 6A	LDA $6A38,X	(Caster's index)
C2/C3A6:	A8		TAY
C2/C3A7:	A7 5B		LDA [$5B]
C2/C3A9:	F0 14		BEQ $C3BF	(+20)
C2/C3AB:	B9 10 7B	LDA $7B10,Y	(Facing direction)
C2/C3AE:	D0 21		BNE $C3D1	(+33)
C2/C3B0:	1A		INC
C2/C3B1:	99 10 7B	STA $7B10,Y
C2/C3B4:	9D 87 6F	STA $6F87,X
C2/C3B7:	BD 38 6A	LDA $6A38,X
C2/C3BA:	20 D5 C3	JSR $C3D5
C2/C3BD:	80 12		BRA $C3D1	(+18)

C2/C3BF:	B9 10 7B	LDA $7B10,Y
C2/C3C2:	F0 0D		BEQ $C3D1	(+13)
C2/C3C4:	7B		TDC
C2/C3C5:	99 10 7B	STA $7B10,Y
C2/C3C8:	9D 87 6F	STA $6F87,X
C2/C3CB:	BD 38 6A	LDA $6A38,X
C2/C3CE:	20 D5 C3	JSR $C3D5
C2/C3D1:	AE F6 7A	LDX $7AF6		(Animation ID)
C2/C3D4:	60		RTS

C2/C3D5:	0A (x5)	ASL x5
C2/C3DA:	AA		TAX
C2/C3DB:	BD BE 61	LDA $61BE,X
C2/C3DE:	49 40		EOR #$40
C2/C3E0:	9D BE 61	STA $61BE,X
C2/C3E3:	60		RTS

(16-bit data called from C1/26D8.)
C2/C3E4:	3F CE
C2/C3E6:	93 CE
C2/C3E8:	E7 CE
C2/C3EA:	3B CF
C2/C3EC:	8F CF
C2/C3EE:	E3 CF
C2/C3F0:	37 D0
C2/C3F2:	8B D0
C2/C3F4:	DF D0
C2/C3F6:	33 D1
C2/C3F8:	87 D1
C2/C3FA:	DB D1
C2/C3FC:	2F D2
C2/C3FE:	83 D2
C2/C400:	D7 D2
C2/C402:	2B D3
C2/C404:	7F D3
C2/C406:	D3 D3
C2/C408:	27 D4
C2/C40A:	7B D4
C2/C40C:	CF D4
C2/C40E:	23 D5
C2/C410:	77 D5
C2/C412:	CB D5
C2/C414:	1F D6
C2/C416:	73 D6
C2/C418:	C7 D6
C2/C41A:	1B D7
C2/C41C:	6F D7
C2/C41E:	C3 D7
C2/C420:	17 D8
C2/C422:	6B D8

C2/C424:	BF D8
C2/C426:	13 D9
C2/C428:	67 D9
C2/C42A:	BB D9
C2/C42C:	0F DA
C2/C42E:	63 DA
C2/C430:	B7 DA
C2/C432:	0B DB
C2/C434:	5F DB
C2/C436:	B3 DB
C2/C438:	07 DC
C2/C43A:	5B DC
C2/C43C:	AF DC
C2/C43E:	03 DD
C2/C440:	57 DD
C2/C442:	AB DD
C2/C444:	FF DD
C2/C446:	53 DE
C2/C448:	A7 DE
C2/C44A:	FB DE
C2/C44C:	4F DF
C2/C44E:	A3 DF
C2/C450:	F7 DF
C2/C452:	4B E0
C2/C454:	9F E0
C2/C456:	F3 E0
C2/C458:	47 E1
C2/C45A:	9B E1
C2/C45C:	EF E1
C2/C45E:	43 E2
C2/C460:	97 E2
C2/C462:	EB E2

(32-bit data called from C1/3962 and C1/3968.)
C2/C464:	00 00 74 C4
C2/C468:	00 40 80 C4
C2/C46C:	00 80 8C C4
C2/C470:	00 C0 98 C4

(16-bit data called from C1/1F04 and C1/3F97.)
C2/C474:	59 82
C2/C476:	9D 82
C2/C478:	E1 82
C2/C47A:	25 83
C2/C47C:	69 83
C2/C47E:	AD 83
C2/C480:	F1 83
C2/C482:	35 84
C2/C484:	79 84
C2/C486:	BD 84
C2/C488:	01 85
C2/C48A:	45 85
C2/C48C:	89 85
C2/C48E:	CD 85
C2/C490:	11 86
C2/C492:	55 86
C2/C494:	99 86
C2/C496:	DD 86
C2/C498:	21 87
C2/C49A:	65 87
C2/C49C:	A9 87
C2/C49E:	ED 87
C2/C4A0:	31 88
C2/C4A2:	75 88

(C2/C4A3-C2/C688 is well-documented. Here's some 64-bit data called from C1/3E4F.)
C2/C689:	63 14 FE 7F 14 63 6F 4E
C2/C691:	63 14 F6 4B FF 2B CD 26
C2/C699:	63 14 7B 52 15 46 F0 41
C2/C6A1:	FD 43 F1 3F E0 03 E0 02

(Party sprite animation data. This is the sequence of four graphical actions used in different animations.)
C2/C6A9:	FF FF FF FF
C2/C6AD:	00 00 00 00	(Wounded)
C2/C6B1:	01 02 03 02
C2/C6B5:	34 35 36 35	(Running away)
C2/C6B9:	04 05 06 05
C2/C6BD:	0E 0F 10 0F
C2/C6C1:	11 11 11 11	(Standing still)
C2/C6C5:	12 04 12 04
C2/C6C9:	13 06 13 06
C2/C6CD:	08 09 08 09	(Chanting)
C2/C6D1:	14 14 14 14	(Kneeling)
C2/C6D5:	15 15 15 15	(Ready to fight)
C2/C6D9:	16 16 16 16
C2/C6DD:	0A 0A 0A 0A
C2/C6E1:	02 0B 02 0B
C2/C6E5:	35 3D 35 3D
C2/C6E9:	05 0D 05 0D
C2/C6ED:	32 3C 32 3C
C2/C6F1:	02 0C 02 0C
C2/C6F5:	02 02 17 17
C2/C6F9:	35 35 37 37
C2/C6FD:	05 05 07 07
C2/C701:	0F 0F 18 18
C2/C705:	19 19 19 19
C2/C709:	17 17 17 17
C2/C70D:	37 37 37 37
C2/C711:	07 07 07 07
C2/C715:	18 18 18 18
C2/C719:	00 00 00 00
C2/C71D:	00 00 00 00
C2/C721:	00 00 00 00
C2/C725:	00 00 00 00
C2/C729:	1E 1F 1E 1F
C2/C72D:	4E 4F 4E 4F
C2/C731:	1D 02 4D 02
C2/C735:	1A 1B 1A 1B
C2/C739:	00 00 00 00
C2/C73D:	17 37 18 07	(Muddled)
C2/C741:	4A 4A 07 4B

(Sprite tile offsets.)
C2/C745:	E0 0A
C2/C747:	00 0B
C2/C749:	40 0B
C2/C74B:	60 0B
C2/C74D:	20 0B
C2/C74F:	FF FF
C2/C751:	80 0B
C2/C753:	FF FF
C2/C755:	FF FF
C2/C757:	FF FF
C2/C759:	00 00
C2/C75B:	20 00
C2/C75D:	40 00
C2/C75F:	60 00
C2/C761:	80 00
C2/C763:	A0 00
C2/C765:	FF FF
C2/C767:	FF FF
C2/C769:	00 00
C2/C76B:	20 00
C2/C76D:	C0 00
C2/C76F:	E0 00
C2/C771:	00 01
C2/C773:	20 01
C2/C775:	FF FF
C2/C777:	FF FF
C2/C779:	00 00
C2/C77B:	20 00
C2/C77D:	40 01
C2/C77F:	60 01
C2/C781:	A0 00
C2/C783:	80 00
C2/C785:	FF FF
C2/C787:	FF FF
C2/C789:	00 03
C2/C78B:	20 03
C2/C78D:	40 03
C2/C78F:	60 03
C2/C791:	80 03
C2/C793:	A0 03
C2/C795:	FF FF
C2/C797:	FF FF
C2/C799:	C0 03
C2/C79B:	E0 03
C2/C79D:	00 04
C2/C79F:	20 04
C2/C7A1:	40 04
C2/C7A3:	60 04
C2/C7A5:	FF FF
C2/C7A7:	FF FF
C2/C7A9:	00 03
C2/C7AB:	20 03
C2/C7AD:	80 04
C2/C7AF:	A0 04
C2/C7B1:	C0 04
C2/C7B3:	E0 04
C2/C7B5:	FF FF
C2/C7B7:	FF FF
C2/C7B9:	C0 03
C2/C7BB:	60 06
C2/C7BD:	80 06
C2/C7BF:	A0 06
C2/C7C1:	C0 06
C2/C7C3:	E0 06
C2/C7C5:	FF FF
C2/C7C7:	FF FF
C2/C7C9:	40 09
C2/C7CB:	60 09
C2/C7CD:	80 09
C2/C7CF:	A0 09
C2/C7D1:	C0 09
C2/C7D3:	E0 09
C2/C7D5:	FF FF
C2/C7D7:	FF FF
C2/C7D9:	40 09
C2/C7DB:	60 09
C2/C7DD:	00 0A
C2/C7DF:	A0 09
C2/C7E1:	C0 09
C2/C7E3:	E0 09
C2/C7E5:	FF FF
C2/C7E7:	FF FF
C2/C7E9:	20 0A
C2/C7EB:	40 0A
C2/C7ED:	60 0A
C2/C7EF:	80 0A
C2/C7F1:	A0 0A
C2/C7F3:	C0 0A
C2/C7F5:	FF FF
C2/C7F7:	FF FF
C2/C7F9:	00 00
C2/C7FB:	20 00
C2/C7FD:	A0 0B
C2/C7FF:	C0 0B
C2/C801:	00 01
C2/C803:	20 01
C2/C805:	FF FF
C2/C807:	FF FF
C2/C809:	00 00
C2/C80B:	20 00
C2/C80D:	C0 00
C2/C80F:	E0 0B
C2/C811:	00 01
C2/C813:	20 01
C2/C815:	FF FF
C2/C817:	FF FF
C2/C819:	C0 12
C2/C81B:	E0 03
C2/C81D:	E0 12
C2/C81F:	20 04
C2/C821:	40 04
C2/C823:	60 04
C2/C825:	FF FF
C2/C827:	FF FF
C2/C829:	80 01
C2/C82B:	A0 01
C2/C82D:	C0 01
C2/C82F:	E0 01
C2/C831:	00 02
C2/C833:	20 02
C2/C835:	FF FF
C2/C837:	FF FF
C2/C839:	80 01
C2/C83B:	A0 01
C2/C83D:	40 02
C2/C83F:	60 02
C2/C841:	80 02
C2/C843:	A0 02
C2/C845:	FF FF
C2/C847:	FF FF
C2/C849:	80 01
C2/C84B:	A0 01
C2/C84D:	C0 02
C2/C84F:	E0 02
C2/C851:	20 02
C2/C853:	00 02
C2/C855:	FF FF
C2/C857:	FF FF
C2/C859:	C0 03
C2/C85B:	E0 03
C2/C85D:	00 05
C2/C85F:	20 05
C2/C861:	40 05
C2/C863:	60 05
C2/C865:	FF FF
C2/C867:	FF FF
C2/C869:	00 03
C2/C86B:	20 03
C2/C86D:	80 05
C2/C86F:	60 03
C2/C871:	A0 05
C2/C873:	A0 03
C2/C875:	FF FF
C2/C877:	FF FF
C2/C879:	00 03
C2/C87B:	C0 05
C2/C87D:	E0 05
C2/C87F:	00 06
C2/C881:	20 06
C2/C883:	40 06
C2/C885:	FF FF
C2/C887:	FF FF
C2/C889:	00 07
C2/C88B:	20 07
C2/C88D:	40 07
C2/C88F:	60 07
C2/C891:	80 07
C2/C893:	A0 07
C2/C895:	FF FF
C2/C897:	FF FF
C2/C899:	C0 07
C2/C89B:	E0 07
C2/C89D:	00 08
C2/C89F:	20 08
C2/C8A1:	40 08
C2/C8A3:	60 08
C2/C8A5:	FF FF
C2/C8A7:	FF FF
C2/C8A9:	80 08
C2/C8AB:	A0 08
C2/C8AD:	C0 08
C2/C8AF:	E0 08
C2/C8B1:	00 09
C2/C8B3:	20 09
C2/C8B5:	FF FF
C2/C8B7:	FF FF
C2/C8B9:	40 0D
C2/C8BB:	60 0D
C2/C8BD:	80 0D
C2/C8BF:	A0 0D
C2/C8C1:	C0 0D
C2/C8C3:	E0 0D
C2/C8C5:	FF FF
C2/C8C7:	FF FF
C2/C8C9:	00 0E
C2/C8CB:	20 0E
C2/C8CD:	40 0E
C2/C8CF:	60 0E
C2/C8D1:	80 0E
C2/C8D3:	A0 0E
C2/C8D5:	FF FF
C2/C8D7:	FF FF
C2/C8D9:	20 06
C2/C8DB:	40 06
C2/C8DD:	60 06
C2/C8DF:	80 06
C2/C8E1:	A0 06
C2/C8E3:	C0 06
C2/C8E5:	FF FF
C2/C8E7:	FF FF
C2/C8E9:	00 0C
C2/C8EB:	20 0C
C2/C8ED:	40 0C
C2/C8EF:	60 0C
C2/C8F1:	80 0C
C2/C8F3:	A0 0C
C2/C8F5:	FF FF
C2/C8F7:	FF FF
C2/C8F9:	C0 0C
C2/C8FB:	E0 0C
C2/C8FD:	00 0D
C2/C8FF:	20 0D
C2/C901:	80 0C
C2/C903:	A0 0C
C2/C905:	FF FF
C2/C907:	FF FF
C2/C909:	80 0F
C2/C90B:	A0 0F
C2/C90D:	C0 0F
C2/C90F:	E0 0F
C2/C911:	00 10
C2/C913:	20 10
C2/C915:	FF FF
C2/C917:	FF FF
C2/C919:	40 12
C2/C91B:	60 12
C2/C91D:	80 12
C2/C91F:	A0 12
C2/C921:	00 01
C2/C923:	20 01
C2/C925:	FF FF
C2/C927:	FF FF
C2/C929:	60 14
C2/C92B:	80 14
C2/C92D:	00 13
C2/C92F:	20 13
C2/C931:	40 13
C2/C933:	60 13
C2/C935:	FF FF
C2/C937:	FF FF
C2/C939:	60 14
C2/C93B:	80 14
C2/C93D:	80 13
C2/C93F:	20 13
C2/C941:	40 13
C2/C943:	60 13

C2/C945:	40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
C2/C955:	00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
C2/C965:	40 20 12 0D 0A 08 06 06 05 04 04 04 03 03 03 02
C2/C975:	02 02 02 02 01 01 01 01 01 01 01 01 01 01 01 01
C2/C985:	40 2D 22 17 12 0F 0D 0B 0A 09 08 07 06 06 06 05
C2/C995:	05 04 04 04 04 04 04 03 03 03 03 03 03 02 02 02
C2/C9A5:	40 32 28 20 1A 15 12 10 0E 0D 0B 0B 0A 09 09 08
C2/C9B5:	07 07 06 06 06 06 05 05 05 04 04 04 04 04 04 04
C2/C9C5:	40 35 2D 26 20 1B 17 15 12 10 0F 0E 0D 0C 0B 0A
C2/C9D5:	0A 09 09 08 08 07 07 06 06 06 06 06 06 05 05 05
C2/C9E5:	40 37 30 2A 24 20 1C 19 17 15 12 11 10 0F 0E 0D
C2/C9F5:	0C 0B 0B 0A 0A 09 09 09 08 08 07 07 07 06 06 06
C2/CA05:	40 39 32 2D 28 24 20 1C 1A 17 15 14 12 11 10 0F
C2/CA15:	0E 0E 0D 0C 0B 0B 0B 0A 0A 09 09 09 09 08 08 07
C2/CA25:	40 3A 35 2F 2B 26 23 20 1D 1A 18 17 15 14 12 12
C2/CA35:	10 10 0F 0E 0E 0D 0C 0B 0B 0B 0B 0A 0A 09 09 09
C2/CA45:	40 3A 35 31 2D 29 26 22 20 1D 1B 1A 17 16 15 14
C2/CA55:	12 12 10 10 0F 0E 0E 0E 0D 0C 0C 0B 0B 0B 0A 0A
C2/CA65:	40 3B 37 32 2F 2B 28 25 22 20 1D 1C 1A 18 17 15
C2/CA75:	15 13 12 12 11 10 10 0F 0E 0E 0E 0D 0C 0C 0B 0B
C2/CA85:	40 3C 37 34 30 2D 2A 27 24 22 20 1E 1C 1A 19 17
C2/CA95:	17 15 15 13 12 12 11 10 10 0F 0F 0E 0E 0E 0D 0C
C2/CAA5:	40 3C 38 35 32 2E 2B 29 26 24 21 20 1E 1C 1B 1A
C2/CAB5:	18 17 16 15 14 13 12 12 11 10 10 10 0F 0E 0E 0E
C2/CAC5:	40 3C 39 35 32 30 2D 2A 28 26 24 21 20 1E 1C 1B
C2/CAD5:	1A 19 17 17 15 15 14 13 12 12 11 10 10 10 0F 0F
C2/CAE5:	40 3C 3A 37 33 30 2E 2B 29 27 25 23 21 20 1E 1C
C2/CAF5:	1C 1A 19 18 17 16 15 15 14 13 12 12 11 11 10 10
C2/CB05:	40 3C 3A 37 35 32 2F 2D 2B 29 26 24 23 21 20 1F
C2/CB15:	1D 1C 1A 1A 18 17 17 16 15 15 14 13 12 12 12 11
C2/CB25:	40 3D 3A 37 35 32 30 2E 2B 2A 28 26 24 23 21 20
C2/CB35:	1F 1D 1C 1B 1A 19 18 17 17 15 15 15 14 13 12 12
C2/CB45:	40 3D 3A 38 35 33 31 2F 2D 2B 29 27 26 24 22 21
C2/CB55:	20 1F 1D 1C 1B 1A 1A 18 17 17 16 15 15 14 14 13
C2/CB65:	40 3D 3B 38 36 34 32 30 2E 2C 2A 29 26 25 24 22
C2/CB75:	21 20 1F 1D 1C 1B 1A 1A 19 18 17 17 16 15 15 14
C2/CB85:	40 3D 3B 39 37 35 32 30 2F 2D 2B 29 28 26 25 24
C2/CB95:	22 21 20 1F 1D 1C 1C 1B 1A 19 18 17 17 16 15 15
C2/CBA5:	40 3D 3B 3A 37 35 33 31 30 2E 2C 2A 29 27 26 24
C2/CBB5:	23 22 21 20 1F 1E 1C 1C 1B 1A 1A 19 18 17 17 16
C2/CBC5:	40 3E 3C 3A 37 35 34 32 30 2E 2D 2B 2A 28 27 26
C2/CBD5:	24 23 22 21 20 1F 1E 1D 1C 1B 1A 1A 19 18 17 17
C2/CBE5:	40 3E 3C 3A 38 36 35 32 31 2F 2E 2C 2B 29 28 26
C2/CBF5:	25 24 23 21 21 20 1F 1E 1D 1C 1B 1A 1A 19 18 18
C2/CC05:	40 3E 3C 3A 38 37 35 33 32 30 2E 2D 2B 2A 29 27
C2/CC15:	26 25 24 23 21 21 20 1F 1E 1D 1C 1C 1B 1A 1A 19
C2/CC25:	40 3E 3C 3A 39 37 35 34 32 30 2F 2E 2C 2B 29 28
C2/CC35:	27 26 24 24 22 21 21 20 1F 1E 1D 1C 1C 1B 1A 1A
C2/CC45:	40 3E 3C 3A 39 37 35 34 32 31 30 2E 2D 2B 2A 29
C2/CC55:	28 26 26 24 24 22 21 21 20 1F 1E 1D 1C 1C 1B 1A
C2/CC65:	40 3E 3C 3B 39 37 36 35 33 32 30 2F 2E 2C 2B 2A
C2/CC75:	29 27 26 25 24 23 22 21 21 20 1F 1E 1D 1C 1C 1B
C2/CC85:	40 3E 3C 3B 3A 38 37 35 33 32 30 30 2E 2D 2B 2B
C2/CC95:	29 28 27 26 25 24 23 22 21 21 20 1F 1E 1D 1C 1C
C2/CCA5:	40 3E 3C 3B 3A 38 37 35 34 32 31 30 2F 2E 2C 2B
C2/CCB5:	2A 29 28 26 26 25 24 23 22 21 21 20 1F 1E 1D 1D
C2/CCC5:	40 3E 3C 3B 3A 38 37 35 35 33 32 30 2F 2E 2D 2B
C2/CCD5:	2B 29 29 27 26 26 24 24 23 22 21 21 20 1F 1F 1E
C2/CCE5:	40 3F 3D 3C 3A 39 37 36 35 33 32 31 30 2E 2E 2C
C2/CCF5:	2B 2A 29 28 27 26 25 24 24 23 22 21 21 20 1F 1F
C2/CD05:	40 3F 3D 3C 3A 39 37 36 35 33 32 31 30 2E 2E 2C
C2/CD15:	2B 2A 29 28 27 26 25 24 24 23 22 21 21 20 1F 1F
C2/CD25:	40 3F 3D 3C 3A 39 38 37 35 34 33 32 30 30 2E 2E
C2/CD35:	2C 2B 2A 29 29 27 26 26 25 24 24 22 21 21 20 20

(C2/CD45-C2/CE2A is compressed data.)
C2/CD45:	E6 00		(Size: 230 bytes)

C2/CD47:	BB		(First byte of each of these blocks you will see is always the "control byte"; comments will explain. Take note: the bits of this control are 10111011.)
C2/CD48:	00		(XXXXXXX1: Single tile 00. The 1 is actually the LSB of the control byte. 1 means a single tile, while 0 means several tiles copied from another place in the decompression array; see later for details. The X means we don't care about that bit for this tile or group of tiles.)
C2/CD49:	08		(XXXXXX1X: Single tile 08)
C2/CD4A:	DF E7		(XXXXX0XX: Copy 31 tiles starting at $FFDF; FFDFh = F800 OR [E7DF AND 07FF]. Decompression array population always starts at $FFDE and cycles through $F800-$FFFF which means $FFDF = #$08 currently. Thus, this will add 31 more 08-tiles. To get the number 31, we take #$1F = #$E0 DIV 8 + 3.)
C2/CD4C:	03		(XXXX1XXX: Single tile 03)
C2/CD4D:	07		(XXX1XXXX: Single tile 07)
C2/CD4E:	07		(XX1XXXXX: Single tile 07)
C2/CD4F:	DF CF		(X0XXXXXX: Copy 28 tiles starting at $FFDF; #$08 times 28.)
C2/CD51:	10		(1XXXXXXX: Single tile 10)

C2/CD52:	77
C2/CD53:	02
C2/CD54:	05
C2/CD55:	06
C2/CD56:	00 C8
C2/CD58:	18
C2/CD59:	01
C2/CD5A:	04
C2/CD5B:	20 08

C2/CD5D:	8E
C2/CD5E:	00 B0
C2/CD60:	20
C2/CD61:	01
C2/CD62:	03
C2/CD63:	40 00
C2/CD65:	42 10
C2/CD67:	01 90
C2/CD69:	28

C2/CD6A:	CF
C2/CD6B:	01
C2/CD6C:	02
C2/CD6D:	04
C2/CD6E:	05
C2/CD6F:	62 28
C2/CD71:	01 80
C2/CD73:	30
C2/CD74:	01

C2/CD75:	11
C2/CD76:	02
C2/CD77:	60 00
C2/CD79:	83 30
C2/CD7B:	00 70
C2/CD7D:	38
C2/CD7E:	9F 08
C2/CD80:	81 10
C2/CD82:	A6 30

C2/CD84:	46
C2/CD85:	01 50
C2/CD87:	40
C2/CD88:	00
C2/CD89:	9F 18
C2/CD8B:	C5 50
C2/CD8D:	00 40
C2/CD8F:	48
C2/CD90:	DF 10

C2/CD92:	84
C2/CD93:	E3 20
C2/CD95:	E9 80
C2/CD97:	50
C2/CD98:	DF 08
C2/CD9A:	C1 28
C2/CD9C:	E8 50
C2/CD9E:	00 18
C2/CDA0:	58

C2/CDA1:	10
C2/CDA2:	DF 00
C2/CDA4:	01 41
C2/CDA6:	2C 59
C2/CDA8:	00 00
C2/CDAA:	60
C2/CDAB:	3F 11
C2/CDAD:	43 11
C2/CDAF:	4D 61

C2/CDB1:	39
C2/CDB2:	68
C2/CDB3:	5F 29
C2/CDB5:	66 A1
C2/CDB7:	70
C2/CDB8:	00
C2/CDB9:	01
C2/CDBA:	80 71
C2/CDBC:	E9 48

C2/CDBE:	49
C2/CDBF:	78
C2/CDC0:	9F 51
C2/CDC2:	AB 79
C2/CDC4:	80
C2/CDC5:	9F 21
C2/CDC7:	C5 A9
C2/CDC9:	88
C2/CDCA:	9F 11

C2/CDCC:	88
C2/CDCD:	82 19
C2/CDCF:	C8 49
C2/CDD1:	A6 28
C2/CDD3:	90
C2/CDD4:	FF 29
C2/CDD6:	C5 29
C2/CDD8:	0E 62
C2/CDDA:	98

C2/CDDB:	88
C2/CDDC:	9F 01
C2/CDDE:	E1 31
C2/CDE0:	2A 82
C2/CDE2:	A0
C2/CDE3:	3F 1A
C2/CDE5:	44 92
C2/CDE7:	42 08
C2/CDE9:	A8

C2/CDEA:	64
C2/CDEB:	5F 82
C2/CDED:	71 4A
C2/CDEF:	B0
C2/CDF0:	5F 3A
C2/CDF2:	88 8A
C2/CDF4:	06
C2/CDF5:	B8
C2/CDF6:	5F 22

C2/CDF8:	4C
C2/CDF9:	44 2A
C2/CDFB:	8C 6A
C2/CDFD:	C0
C2/CDFE:	00
C2/CDFF:	9F 92
C2/CE01:	0E 32
C2/CE03:	C8
C2/CE04:	DF 6A

C2/CE06:	6A
C2/CE07:	92 EE
C2/CE09:	62
C2/CE0A:	D0 DF
C2/CE0C:	2A
C2/CE0D:	06 A3
C2/CE0F:	D8
C2/CE10:	1F
C2/CE11:	27 19

C2/CE13:	E0
C2/CE14:	44 1F
C2/CE16:	53 4B
C2/CE18:	7B E8
C2/CE1A:	DF 12
C2/CE1C:	23 5B
C2/CE1E:	EE
C2/CE1F:	4A
C2/CE20:	F0

C2/CE21:	7F
C2/CE22:	5B
C2/CE23:	02
C2/CE24:	4B
C2/CE25:	73
C2/CE26:	F8
C2/CE27:	9F
C2/CE28:	8B
C2/CE29:	50 43

(Battle character palettes.)
C2/CE2B:	02		(Terra)
C2/CE2C:	01		(Locke)
C2/CE2D:	04		(Cyan)
C2/CE2E:	04		(Shadow)
C2/CE2F:	00		(Edgar)
C2/CE30:	00		(Sabin)
C2/CE31:	00		(Celes)
C2/CE32:	03		(Strago)
C2/CE33:	03		(Relm)
C2/CE34:	04		(Setzer)
C2/CE35:	05		(Mog)
C2/CE36:	03		(Gau)
C2/CE37:	03		(Gogo)
C2/CE38:	05		(Umaro)
C2/CE39:	01		(Vicks & Wedge)
C2/CE3A:	00		(Imp)
C2/CE3B:	00		(Leo)
C2/CE3C:	03		(Banon)
C2/CE3D:	06		(Esper Terra)
C2/CE3E:	01		(Merchant)
C2/CE3F:	00		(Ghost)
C2/CE40:	03		(Kefka)
C2/CE41:	03		(Gestahl)
C2/CE42:	00		(Imperial Soldier)

(24-bit pointers to character sprite data.)
C2/CE43:	00 00 D5	(Terra)
C2/CE46:	A0 16 D5	(Locke)
C2/CE49:	40 2D D5	(Cyan)
C2/CE4C:	E0 43 D5	(Shadow)
C2/CE4F:	80 5A D5	(Edgar)
C2/CE52:	20 71 D5	(Sabin)
C2/CE55:	C0 87 D5	(Celes)
C2/CE58:	60 9E D5	(Strago)
C2/CE5B:	00 B5 D5	(Relm)
C2/CE5E:	A0 CB D5	(Setzer)
C2/CE61:	40 E2 D5	(Mog)
C2/CE64:	E0 F8 D5	(Gau)
C2/CE67:	80 0F D6	(Gogo)
C2/CE6A:	20 26 D6	(Umaro)
C2/CE6D:	C0 3C D6	(Vicks & Wedge)
C2/CE70:	60 53 D6	(Imp)
C2/CE73:	00 6A D6	(Leo)
C2/CE76:	60 7F D6	(Banon)
C2/CE79:	C0 94 D6	(Esper Terra)
C2/CE7C:	20 AA D6	(Merchant)
C2/CE7F:	80 BF D6	(Ghost)
C2/CE82:	E0 D4 D6	(Kefka)
C2/CE85:	40 EA D6	(Gestahl)
C2/CE88:	C0 3C D6	(Imperial Soldier)

(Some kind of 16-bit data.)
C2/CE8B:	00 00
C2/CE8D:	80 00
C2/CE8F:	00 01
C2/CE91:	80 01
C2/CE93:	00 02
C2/CE95:	80 02
C2/CE97:	00 03
C2/CE99:	80 03
C2/CE9B:	00 04
C2/CE9D:	80 04
C2/CE9F:	00 05
C2/CEA1:	80 05

(32-bit data, used in the animation of character sprites.)
C2/CEA3:	00 F8 00 00
C2/CEA7:	00 08 02 00
C2/CEAB:	FC 08 00 00
C2/CEAF:	0C 08 02 00

C2/CEB3:	00 F8 00 40
C2/CEB7:	00 08 02 40
C2/CEBB:	04 08 00 40
C2/CEBF:	F4 08 02 40

C2/CEC3:	00 00 02 80
C2/CEC7:	00 10 00 80
C2/CECB:	FC 08 00 80
C2/CECF:	0C 08 02 80

C2/CED3:	00 00 02 C0
C2/CED7:	00 10 00 C0
C2/CEDB:	04 08 00 C0
C2/CEDF:	F4 08 02 C0

(C2/CEE3-C2/CF36 is data that is documented as having to do with different battle formations.)

(Data used at C1/3248.)
C2/CF37:	C0 30
C2/CF39:	C0 31
C2/CF3B:	C0 32
C2/CF3D:	C0 33
C2/CF3F:	C0 34
C2/CF41:	C0 35
C2/CF43:	C0 36
C2/CF45:	C0 37
C2/CF47:	C0 38
C2/CF49:	C0 39
C2/CF4B:	C0 3A
C2/CF4D:	C0 3B
C2/CF4F:	C0 3C
C2/CF51:	C0 3D
C2/CF53:	C0 3E
C2/CF55:	C0 3F

(Data used by C1/34E6.)
C2/CF57:	00 04 08 0C

(Data indexed by code in bank C1.)
C2/CF5B:	00 20 40 60

(Pointers of some sort. Used at C1/3223.)
C2/CF5F:	00 45 D8 00
C2/CF63:	00 48 D8 00
C2/CF67:	00 49 D8 00
C2/CF6B:	00 4C D8 00
C2/CF6F:	00 4D D8 00

(Indices for the above pointers.)
C2/CF73:	00
C2/CF74:	00
C2/CF75:	00
C2/CF76:	00
C2/CF77:	00
C2/CF78:	01
C2/CF79:	00
C2/CF7A:	02
C2/CF7B:	03
C2/CF7C:	03
C2/CF7D:	03
C2/CF7E:	03
C2/CF7F:	04
C2/CF80:	04
C2/CF81:	04
C2/CF82:	04

C2/CF83:	F7 FC 0C 01
C2/CF87:	F7 FC 4C 01
C2/CF8B:	F7 FC 8C 01
C2/CF8F:	F7 FC CC 01

C2/CF93:	03
C2/CF94:	06
C2/CF95:	08
C2/CF96:	0A
C2/CF97:	0B
C2/CF98:	0D
C2/CF99:	0E
C2/CF9A:	0F
C2/CF9B:	0F
C2/CF9C:	10
C2/CF9D:	10
C2/CF9E:	10
C2/CF9F:	10
C2/CFA0:	10
C2/CFA1:	0F
C2/CFA2:	0F
C2/CFA3:	0E
C2/CFA4:	0D
C2/CFA5:	0B
C2/CFA6:	0A
C2/CFA7:	08
C2/CFA8:	06
C2/CFA9:	03
C2/CFAA:	00

C2/CFAB:	03
C2/CFAC:	04
C2/CFAD:	05
C2/CFAE:	06
C2/CFAF:	07
C2/CFB0:	07
C2/CFB1:	08
C2/CFB2:	08
C2/CFB3:	07
C2/CFB4:	07
C2/CFB5:	06
C2/CFB6:	05
C2/CFB7:	04
C2/CFB8:	03

C2/CFB9:	00 (x27)

(C2/CFD4-C2/D0F3 is data that is well-documented in Assassin's C2 disassembly.)

(Don't know where this data is used, what it's for, or even if this is the correct structure.)
C2/D0F4:	64 7B 89 33 7B 89 49 7F 89 00 04 87 89 60 8B 89
C2/D104:	33 8B 89 44 8F 89 05 87 89 00 64 7B 89 33 7B 89
C2/D114:	0C 7F 89 30 83 89 0D 7F 89 00 64 6F 89 33 6F 89
C2/D124:	0C 73 89 30 77 89 0D 73 89 00 64 6F 89 33 6F 89

(And here's a bit more stuff I can't wrap my head around.)

(16-bit data.)
C2/D150:	BD D1
C2/D152:	C4 D1
C2/D154:	CB D1
C2/D156:	F2 D1
C2/D158:	25 D2
C2/D15A:	4B D2
C2/D15C:	D2 D1
C2/D15E:	38 D2
C2/D160:	E5 D1
C2/D162:	80 D1
C2/D164:	12 D2
C2/D166:	FF D1
C2/D168:	BD D1
C2/D16A:	C4 D1
C2/D16C:	58 D2
C2/D16E:	F2 D1
C2/D170:	25 D2
C2/D172:	81 D2
C2/D174:	D2 D1
C2/D176:	68 D2
C2/D178:	E5 D1
C2/D17A:	80 D1
C2/D17C:	12 D2
C2/D17E:	FF D1

(This looks like 24-bit data.)
C2/D180:	08 F5 43
C2/D183:	08 F9 43
C2/D186:	08 FD 43
C2/D189:	08 01 44
C2/D18C:	08 05 44
C2/D18F:	08 09 44
C2/D192:	08 0D 44
C2/D195:	08 11 44
C2/D198:	08 15 44
C2/D19B:	08 19 44
C2/D19E:	08 1D 44
C2/D1A1:	08 21 44
C2/D1A4:	08 25 44
C2/D1A7:	08 29 44
C2/D1AA:	08 2D 44
C2/D1AD:	08 31 44
C2/D1B0:	08 35 44
C2/D1B3:	08 39 44
C2/D1B6:	08 3D 44

(Several blocks of data here, well explained in Assassin's document, except these four, called in a function located at C1/09DE:)
C2/D2C4:	00 A0
C2/D2C6:	80 A0
C2/D2C8:	00 A1
C2/D2CA:	80 A1

C2/D2CC:	00 A2
C2/D2CE:	80 A2
C2/D2D0:	00 A3
C2/D2D2:	80 A3

C2/D2D4:	00 20
C2/D2D6:	40 20
C2/D2D8:	80 20
C2/D2DA:	C0 20

C2/D2DC:	00 21
C2/D2DE:	40 21
C2/D2E0:	80 21
C2/D2E2:	C0 21

(16-bit data called from a few places in bank C1.)
C2/D39F:	01 01
C2/D3A1:	01 01
C2/D3A3:	01 02
C2/D3A5:	01 02
C2/D3A7:	01 02
C2/D3A9:	02 03
C2/D3AB:	02 03
C2/D3AD:	03 03
C2/D3AF:	04 03
C2/D3B1:	04 04
C2/D3B3:	04 05
C2/D3B5:	04 05
C2/D3B7:	05 05
C2/D3B9:	05 05
C2/D3BB:	05 05
C2/D3BD:	05 04
C2/D3BF:	05 04
C2/D3C1:	04 04
C2/D3C3:	03 04
C2/D3C5:	03 03
C2/D3C7:	03 02
C2/D3C9:	03 02
C2/D3CB:	02 01
C2/D3CD:	02 01
C2/D3CF:	02 01
C2/D3D1:	01 01
C2/D3D3:	01 01

C2/D3D5:	A9 00		LDA #$00	(0)
C2/D3D7:	48		PHA
C2/D3D8:	AB		PLB			(Data bank register now points to bank $00)
C2/D3D9:	8D 00 42	STA $4200	($004200)
C2/D3DC:	A2 00 00	LDX #$0000	(0)
C2/D3DF:	DA		PHX			(PEA would've worked...)
C2/D3E0:	2B		PLD			(Direct page register now points to bank $00, page $00)
C2/D3E1:	A9 80		LDA #$80	(-128)
C2/D3E3:	8D 00 21	STA $2100	($002100)
C2/D3E6:	A9 61		LDA #$61	(97)
C2/D3E8:	8D 01 21	STA $2101	($002101)
C2/D3EB:	A9 80		LDA #$80	(-128)
C2/D3ED:	8D 15 21	STA $2115	($002115)
C2/D3F0:	A9 00		LDA #$00
C2/D3F2:	AA		TAX
C2/D3F3:	8D 13 21	STA $2113	($002113)
C2/D3F6:	8D 13 21	STA $2113
C2/D3F9:	8D 14 21	STA $2114	($002114)
C2/D3FC:	8D 14 21	STA $2114
C2/D3FF:	8D 2E 21	STA $212E	($00212E)
C2/D402:	8D 2F 21	STA $212F	($00212F)
C2/D405:	8D 0B 42	STA $420B	($00420B)
C2/D408:	8D 0C 42	STA $420C	($00420C)
C2/D40B:	8D 31 21	STA $2131	($002131)
C2/D40E:	8D 33 21	STA $2133	($002133)
C2/D411:	8D 30 21	STA $2130	($002130)
C2/D414:	8D 28 21	STA $2128	($002128)
C2/D417:	8D 29 21	STA $2129	($002129)
C2/D41A:	A9 C1		LDA #$C1	(-63)
C2/D41C:	8D 03 15	STA $1503	($001503)
C2/D41F:	A9 C1		LDA #$C1	(-63)	(A = -63 already!)
C2/D421:	8D 07 15	STA $1507	($001507)
C2/D424:	A2 A7 0B	LDX #$0BA7	(2,983)
C2/D427:	8E 01 15	STX $1501	($001501)
C2/D42A:	A2 4A 0D	LDX #$0D4A	(3,402)
C2/D42D:	8E 05 15	STX $1505	($001505)
C2/D430:	A9 5C		LDA #$5C	(92)
C2/D432:	8D 00 15	STA $1500	($001500)
C2/D435:	8D 04 15	STA $1504	($001504)
C2/D438:	A9 01		LDA #$01	(1)
C2/D43A:	8F0D4200	STA $00420D	(Do we really need a 24-bit address?)
C2/D43E:	A9 33		LDA #$33	(51)
C2/D440:	8D 23 21	STA $2123	($002123)
C2/D443:	8D 24 21	STA $2124	($002124)
C2/D446:	8D 25 21	STA $2125	($002125)
C2/D449:	A9 7E		LDA #$7E
C2/D44B:	48		PHA
C2/D44C:	AB		PLB			(Data bank register now points to bank $7E)
C2/D44D:	A2 00 00	LDX #$0000
C2/D450:	9E 00 00	STZ $0000,X
C2/D453:	E8		INX
C2/D454:	E0 9C 00	CPX #$009C	(156)
C2/D457:	D0 F7		BNE $D450	(-9)
C2/D459:	A2 78 61	LDX #$6178	(24,952)
C2/D45C:	9E 00 00	STZ $0000,X
C2/D45F:	E8		INX
C2/D460:	E0 13 8D	CPX #$8D13	(36,115)
C2/D463:	D0 F7		BNE $D45C	(-9)
C2/D465:	7B		TDC			(A = 0)
C2/D466:	AA		TAX			(X = 0)
C2/D467:	9D 00 7E	STA $7E00,X
C2/D46A:	E8		INX
C2/D46B:	E0 00 02	CPX #$0200	(512)
C2/D46E:	D0 F7		BNE $D467	(-9)
C2/D470:	6B		RTL

(Some 32-bit data called from C1/24B6 and C1/24BB.)
C2/D471:	3F AE 00 24
C2/D475:	3F B0 00 25
C2/D479:	3F B2 00 26
C2/D47D:	3F B4 00 27
C2/D481:	3F B6 00 28
C2/D485:	3F B8 00 29
C2/D489:	3F BA 00 2A
C2/D48D:	3F BC 00 2B
C2/D491:	3F BE 00 2C
C2/D495:	3F C4 00 2D

(RAM palette 8 data.)
C2/D499:	29 25
C2/D49B:	43 08
C2/D49D:	FE 7F
C2/D49F:	32 7F
C2/D4A1:	2A 5A
C2/D4A3:	44 45
C2/D4A5:	A2 30
C2/D4A7:	F2 56
C2/D4A9:	0A 2A
C2/D4AB:	21 11
C2/D4AD:	D9 19
C2/D4AF:	D2 10
C2/D4B1:	8A 0C
C2/D4B3:	BD 0E
C2/D4B5:	F1 09
C2/D4B7:	0A 05

C2/D4B9:	6B 2D
C2/D4BB:	43 08
C2/D4BD:	2A 5A
C2/D4BF:	FE 7F
C2/D4C1:	32 7F
C2/D4C3:	2A 5A
C2/D4C5:	44 45
C2/D4C7:	F2 56
C2/D4C9:	0A 2A
C2/D4CB:	21 11
C2/D4CD:	D9 19
C2/D4CF:	D2 10
C2/D4D1:	8A 0C
C2/D4D3:	BD 0E
C2/D4D5:	F1 09
C2/D4D7:	0A 05

C2/D4D9:	6B 2D
C2/D4DB:	43 08
C2/D4DD:	44 45
C2/D4DF:	2A 5A
C2/D4E1:	FE 7F
C2/D4E3:	32 7F
C2/D4E5:	2A 5A
C2/D4E7:	F2 56
C2/D4E9:	0A 2A
C2/D4EB:	21 11
C2/D4ED:	D9 19
C2/D4EF:	D2 10
C2/D4F1:	8A 0C
C2/D4F3:	BD 0E
C2/D4F5:	F1 09
C2/D4F7:	0A 05

C2/D4F9:	6B 2D
C2/D4FB:	43 08
C2/D4FD:	2A 5A
C2/D4FF:	44 45
C2/D501:	2A 5A
C2/D503:	FE 7F
C2/D505:	32 7F
C2/D507:	F2 56
C2/D509:	0A 2A
C2/D50B:	21 11
C2/D50D:	D9 19
C2/D50F:	D2 10
C2/D511:	8A 0C
C2/D513:	BD 0E
C2/D515:	F1 09
C2/D517:	0A 05

C2/D519:	6B 2D
C2/D51B:	43 08
C2/D51D:	F1 6E
C2/D51F:	2A 5A
C2/D521:	44 45
C2/D523:	2A 5A
C2/D525:	FE 7F
C2/D527:	F2 56
C2/D529:	0A 2A
C2/D52B:	21 11
C2/D52D:	D9 19
C2/D52F:	D2 10
C2/D531:	8A 0C
C2/D533:	BD 0E
C2/D535:	F1 09
C2/D537:	0A 05

(Clip plane dynamics function.)
C2/D539:	AD 1B 96	LDA $961B		(Load clip plane shape)
C2/D53C:	0A		ASL
C2/D53D:	AA		TAX
C2/D53E:	7C 41 D5	JMP ($D541,X)

(Pointers chosen based on clip plane shape.)
C2/D541:	77 D7		(Null - square?)
C2/D543:	AD D7		(Circle)
C2/D545:	12 D8		(Wavy)
C2/D547:	CD D6		(Pillar)
C2/D549:	27 D6		(Tall oval)
C2/D54B:	18 D8		(Wavy in)
C2/D54D:	ED D6		(Wide oval)
C2/D54F:	53 D5		(Dome)
C2/D551:	0C D8		(Wavy out)

(Called if clip plane shape is a dome.)
C2/D553:	A2 FE		LDX #$FE	(-2)
C2/D555:	64 22		STZ $22
C2/D557:	64 26		STZ $26
C2/D559:	A5 26		LDA $26		(TDC?)
C2/D55B:	29 01		AND #$01
C2/D55D:	D0 2E		BNE $D58D	(+46)
C2/D55F:	A5 16		LDA $16
C2/D561:	38		SEC
C2/D562:	F9 1F 9E	SBC $9E1F,Y
C2/D565:	90 04		BCC $D56B	(+4)
C2/D567:	C9 08		CMP #$08	(8)
C2/D569:	B0 02		BCS $D56D	(+2)
C2/D56B:	A9 08		LDA #$08	(8)
C2/D56D:	8F802100	STA $002180
C2/D571:	9D 1F 96	STA $961F,X
C2/D574:	B9 1F 9E	LDA $9E1F,Y
C2/D577:	18		CLC
C2/D578:	65 18		ADC $18
C2/D57A:	B0 04		BCS $D580	(+4)
C2/D57C:	C9 F7		CMP #$F7	(-9)
C2/D57E:	90 02		BCC $D582	(+2)
C2/D580:	A9 F7		LDA #$F7	(-9)
C2/D582:	8F802100	STA $002180
C2/D586:	9D 20 96	STA $9620,X
C2/D589:	CA CA		DEX x2
C2/D58B:	80 24		BRA $D5B1	(+36)

C2/D58D:	A5 16		LDA $16
C2/D58F:	38		SEC
C2/D590:	F9 1F 9E	SBC $9E1F,Y
C2/D593:	90 04		BCC $D599	(+4)
C2/D595:	C9 08		CMP #$08	(8)
C2/D597:	B0 02		BCS $D59B	(+2)
C2/D599:	A9 08		LDA #$08	(8)
C2/D59B:	9D 1F 96	STA $961F,X
C2/D59E:	B9 1F 9E	LDA $9E1F,Y
C2/D5A1:	18		CLC
C2/D5A2:	65 18		ADC $18
C2/D5A4:	B0 04		BCS $D5AA	(+4)
C2/D5A6:	C9 F7		CMP #$F7	(-9)
C2/D5A8:	90 02		BCC $D5AC	(+2)
C2/D5AA:	A9 F7		LDA #$F7	(-9)
C2/D5AC:	9D 20 96	STA $9620,X
C2/D5AF:	CA CA		DEX x2
C2/D5B1:	E6 26		INC $26
C2/D5B3:	C8		INY
C2/D5B4:	C4 12		CPY $12
C2/D5B6:	D0 A1		BNE $D559	(-95)
C2/D5B8:	7B		TDC
C2/D5B9:	99 1F 9E	STA $9E1F,Y
C2/D5BC:	88		DEY
C2/D5BD:	B9 1F 9E	LDA $9E1F,Y
C2/D5C0:	3A		DEC
C2/D5C1:	85 12		STA $12
C2/D5C3:	B9 1F 9E	LDA $9E1F,Y
C2/D5C6:	D9 1E 9E	CMP $9E1E,Y
C2/D5C9:	F0 56		BEQ $D621	(+86)
C2/D5CB:	A5 26		LDA $26
C2/D5CD:	29 01		AND #$01
C2/D5CF:	D0 2C		BNE $D5FD	(+44)
C2/D5D1:	A5 16		LDA $16
C2/D5D3:	38		SEC
C2/D5D4:	E5 12		SBC $12
C2/D5D6:	90 04		BCC $D5DC	(+4)
C2/D5D8:	C9 08		CMP #$08	(8)
C2/D5DA:	B0 02		BCS $D5DE	(+2)
C2/D5DC:	A9 08		LDA #$08	(8)
C2/D5DE:	8F802100	STA $002180
C2/D5E2:	9D 1F 96	STA $961F,X
C2/D5E5:	A5 12		LDA $12
C2/D5E7:	18		CLC
C2/D5E8:	65 18		ADC $18
C2/D5EA:	B0 04		BCS $D5F0	(+4)
C2/D5EC:	C9 F7		CMP #$F7	(-9)
C2/D5EE:	90 02		BCC $D5F2	(+2)
C2/D5F0:	A9 F7		LDA #$F7	(-9)
C2/D5F2:	8F802100	STA $002180
C2/D5F6:	9D 20 96	STA $9620,X
C2/D5F9:	CA CA		DEX x2
C2/D5FB:	80 22		BRA $D61F	(+34)

C2/D5FD:	A5 16		LDA $16
C2/D5FF:	38		SEC
C2/D600:	E5 12		SBC $12
C2/D602:	90 04		BCC $D608	(+4)
C2/D604:	C9 08		CMP #$08	(8)
C2/D606:	B0 02		BCS $D60A	(+2)
C2/D608:	A9 08		LDA #$08	(8)
C2/D60A:	9D 1F 96	STA $961F,X
C2/D60D:	A5 12		LDA $12
C2/D60F:	18		CLC
C2/D610:	65 18		ADC $18
C2/D612:	B0 04		BCS $D618	(+4)
C2/D614:	C9 F7		CMP #$F7	(-9)
C2/D616:	90 02		BCC $D61A	(+2)
C2/D618:	A9 F7		LDA #$F7	(-9)
C2/D61A:	9D 20 96	STA $9620,X
C2/D61D:	CA CA		DEX x2
C2/D61F:	E6 26		INC $26
C2/D621:	C6 12		DEC $12
C2/D623:	88		DEY
C2/D624:	D0 9D		BNE $D5C3	(-99)
C2/D626:	60		RTS

(Called if clip plane shape is a tall oval.)
C2/D627:	A2 FC		LDX #$FC	(-4)
C2/D629:	A5 16		LDA $16
C2/D62B:	38		SEC
C2/D62C:	F9 1F 9E	SBC $9E1F,Y
C2/D62F:	90 04		BCC $D635	(+4)
C2/D631:	C9 08		CMP #$08	(8)
C2/D633:	B0 02		BCS $D637	(+2)
C2/D635:	A9 08		LDA #$08	(8)
C2/D637:	8F802100	STA $002180
C2/D63B:	85 22		STA $22
C2/D63D:	9D 1F 96	STA $961F,X
C2/D640:	9D 21 96	STA $9621,X
C2/D643:	B9 1F 9E	LDA $9E1F,Y
C2/D646:	18		CLC
C2/D647:	65 18		ADC $18
C2/D649:	B0 04		BCS $D64F	(+4)
C2/D64B:	C9 F7		CMP #$F7	(-9)
C2/D64D:	90 02		BCC $D651	(+2)
C2/D64F:	A9 F7		LDA #$F7	(-9)
C2/D651:	8F802100	STA $002180
C2/D655:	85 23		STA $23
C2/D657:	9D 20 96	STA $9620,X
C2/D65A:	9D 22 96	STA $9622,X
C2/D65D:	A5 22		LDA $22
C2/D65F:	8F802100	STA $002180
C2/D663:	A5 23		LDA $23
C2/D665:	8F802100	STA $002180
C2/D669:	CA (x4)	DEX x4
C2/D66D:	C8		INY
C2/D66E:	C4 12		CPY $12
C2/D670:	D0 B7		BNE $D629	(-73)
C2/D672:	7B		TDC
C2/D673:	99 1F 9E	STA $9E1F,Y
C2/D676:	88		DEY
C2/D677:	B9 1F 9E	LDA $9E1F,Y
C2/D67A:	3A		SEC
C2/D67B:	85 12		STA $12
C2/D67D:	B9 1F 9E	LDA $9E1F,Y
C2/D680:	D9 1E 9E	CMP $9E1E,Y
C2/D683:	F0 42		BEQ $D6C7	(+66)
C2/D685:	A5 16		LDA $16
C2/D687:	38		SEC
C2/D688:	E5 12		SBC $12
C2/D68A:	90 04		BCC $D690	(+4)
C2/D68C:	C9 08		CMP #$08	(8)
C2/D68E:	B0 02		BCS $D692	(+2)
C2/D690:	A9 08		LDA #$08	(8)
C2/D692:	8F802100	STA $002180
C2/D696:	85 22		STA $22
C2/D698:	9D 1F 96	STA $961F,X
C2/D69B:	9D 21 96	STA $9621,X
C2/D69E:	A5 12		LDA $12
C2/D6A0:	18		CLC
C2/D6A1:	65 18		ADC $18
C2/D6A3:	B0 04		BCS $D6A9	(+4)
C2/D6A5:	C9 F7		CMP #$F7	(-9)
C2/D6A7:	90 02		BCC $D6AB	(+2)
C2/D6A9:	A9 F7		LDA #$F7	(-9)
C2/D6AB:	8F802100	STA $002180
C2/D6AF:	85 23		STA $23
C2/D6B1:	9D 20 96	STA $9620,X
C2/D6B4:	9D 22 96	STA $9622,X
C2/D6B7:	A5 22		LDA $22
C2/D6B9:	8F802100	STA $002180
C2/D6BD:	A5 23		LDA $23
C2/D6BF:	8F802100	STA $002180
C2/D6C3:	CA (x4)	DEX x4
C2/D6C7:	C6 12		DEC $12
C2/D6C9:	88		DEY
C2/D6CA:	D0 B1		BNE $D67D	(-79)
C2/D6CC:	60		RTS

(Called if clip plane shape is a pillar.)
C2/D6CD:	20 77 D7	JSR $D777
C2/D6D0:	C2 20		REP #$20		(16-bit A)
C2/D6D2:	7B		TDC			(A = 0)
C2/D6D3:	AA		TAX			(X = 0)
C2/D6D4:	AD 1F 97	LDA $971F
C2/D6D7:	9D 1F 96	STA $961F,X
C2/D6DA:	9D 5F 96	STA $965F,X
C2/D6DD:	9D 9F 96	STA $969F,X
C2/D6E0:	9D DF 96	STA $96DF,X
C2/D6E3:	E8 E8		INX x2
C2/D6E5:	E0 40		CPX #$40	(64)
C2/D6E7:	D0 EE		BNE $D6D7	(-18)
C2/D6E9:	7B		TDC
C2/D6EA:	E2 20		SEP #$20		(8-bit A)
C2/D6EC:	60		RTS

(Called if clip plane shape is a wide oval.)
C2/D6ED:	A2 FE		LDX #$FE	(-2)
C2/D6EF:	64 22		STZ $22
C2/D6F1:	64 26		STZ $26
C2/D6F3:	A5 26		LDA $26
C2/D6F5:	29 01		AND #$01
C2/D6F7:	D0 2C		BNE $D725	(+44)
C2/D6F9:	A5 16		LDA $16
C2/D6FB:	38 		SEC
C2/D6FC:	F9 1F 9E	SBC $9E1F,Y
C2/D6FF:	90 04		BCC $D705	(+4)
C2/D701:	C9 08		CMP #$08	(8)
C2/D703:	B0 02		BCS $D707	(+2)
C2/D705:	A9 08		LDA #$08	(8)
C2/D707:	8F802100	STA $002180
C2/D70B:	9D 1F 96	STA $961F,X
C2/D70E:	B9 1F 9E	LDA $9E1F,Y
C2/D711:	18		CLC
C2/D712:	65 18		ADC $18
C2/D714:	B0 04		BCS $D71A	(+4)
C2/D716:	C9 F7		CMP #$F7	(-9)
C2/D718:	90 02		BCC $D71C	(+2)
C2/D71A:	A9 F7		LDA #$F7	(-9)
C2/D71C:	8F802100	STA $002180
C2/D720:	9D 20 96	STA $9620,X
C2/D723:	CA CA		DEX x2
C2/D725:	E6 26		INC $26
C2/D727:	C8		INY
C2/D728:	C4 12		CPY $12
C2/D72A:	D0 C7		BNE $D6F3	(-57)
C2/D72C:	7B		TDC
C2/D72D:	99 1F 9E	STA $9E1F,Y
C2/D730:	88		DEY
C2/D731:	B9 1F 9E	LDA $9E1F,Y
C2/D734:	3A		DEC
C2/D735:	85 12		STA $12
C2/D737:	B9 1F 9E	LDA $9E1F,Y	(INC would've worked...)
C2/D73A:	D9 1E 9E	CMP $9E1E,Y
C2/D73D:	F0 32		BEQ $D771	(+50)
C2/D73F:	A5 26		LDA $26
C2/D741:	29 01		AND #$01
C2/D743:	D0 2A		BNE $D76F	(+42)
C2/D745:	A5 16		LDA $16
C2/D747:	38		SEC
C2/D748:	E5 12		SBC $12
C2/D74A:	90 04		BCC $D750	(+4)
C2/D74C:	C9 08		CMP #$08	(8)
C2/D74E:	B0 02		BCS $D752	(+2)
C2/D750:	A9 08		LDA #$08	(8)
C2/D752:	8F802100	STA $002180
C2/D756:	9D 1F 96	STA $961F,X
C2/D759:	A5 12		LDA $12
C2/D75B:	18		CLC
C2/D75C:	65 18		ADC $18
C2/D75E:	B0 04		BCS $D764	(+4)
C2/D760:	C9 F7		CMP #$F7	(-9)
C2/D762:	90 02		BCC $D766	(+2)
C2/D764:	A9 F7		LDA #$F7	(-9)
C2/D766:	8F802100	STA $002180
C2/D76A:	9D 20 96	STA $9620,X
C2/D76D:	CA CA		DEX x2
C2/D76F:	E6 26		INC $26
C2/D771:	C6 12		DEC $12
C2/D773:	88		DEY
C2/D774:	D0 C1		BNE $D737	(-63)
C2/D776:	60		RTS

(Called if clip plane shape has been reset.)
C2/D777:	A2 FE		LDX #$FE	(-2)
C2/D779:	A5 16		LDA $16
C2/D77B:	38		SEC
C2/D77C:	F9 1F 9E	SBC $9E1F,Y
C2/D77F:	90 04		BCC $D785	(+4)
C2/D781:	C9 08		CMP #$08	(8)
C2/D783:	B0 02		BCS $D787	(+2)
C2/D785:	A9 08		LDA #$08	(8)
C2/D787:	8F802100	STA $002180
C2/D78B:	9D 1F 96	STA $961F,X
C2/D78E:	B9 1F 9E	LDA $9E1F,Y
C2/D791:	18		CLC
C2/D792:	65 18		ADC $18
C2/D794:	B0 04		BCS $D79A	(+4)
C2/D796:	C9 F7		CMP #$F7	(-9)
C2/D798:	90 02		BCC $D79C	(+2)
C2/D79A:	A9 F7		LDA #$F7	(-9)
C2/D79C:	8F802100	STA $002180
C2/D7A0:	9D 20 96	STA $9620,X
C2/D7A3:	CA CA		DEX x2
C2/D7A5:	C8		INY
C2/D7A6:	C4 12		CPY $12
C2/D7A8:	D0 CF		BNE $D779	(-49)
C2/D7AA:	4C 6E D8	JMP $D86E

(Called if clip plane shape is a circle.)
C2/D7AD:	A2 FE		LDX #$FE	(-2)
C2/D7AF:	AD 1A 96	LDA $961A
C2/D7B2:	18		CLC
C2/D7B3:	69 02		ADC #$02	(2)	(Why not INC x2?)
C2/D7B5:	85 26		STA $26
C2/D7B7:	8D 1A 96	STA $961A
C2/D7BA:	A5 26		LDA $26
C2/D7BC:	18		CLC
C2/D7BD:	69 04		ADC #$04	(4)
C2/D7BF:	85 26		STA $26
C2/D7C1:	DA		PHX
C2/D7C2:	20 1D DD	JSR $DD1D
C2/D7C5:	85 18		STA $18
C2/D7C7:	85 16		STA $16
C2/D7C9:	A5 1A		LDA $1A
C2/D7CB:	18		CLC
C2/D7CC:	65 18		ADC $18
C2/D7CE:	85 18		STA $18
C2/D7D0:	A5 1A		LDA $1A
C2/D7D2:	18		CLC
C2/D7D3:	65 16		ADC $16
C2/D7D5:	85 16		STA $16
C2/D7D7:	FA		PLX
C2/D7D8:	A5 16		LDA $16
C2/D7DA:	38		SEC
C2/D7DB:	F9 1F 9E	SBC $9E1F,Y
C2/D7DE:	90 04		BCC $D7E4	(+4)
C2/D7E0:	C9 08		CMP #$08	(8)
C2/D7E2:	B0 02		BCS $D7E6	(+2)
C2/D7E4:	A9 08		LDA #$08	(8)
C2/D7E6:	8F802100	STA $002180
C2/D7EA:	9D 1F 96	STA $961F,X
C2/D7ED:	B9 1F 9E	LDA $9E1F,Y
C2/D7F0:	18		CLC
C2/D7F1:	65 18		ADC $18
C2/D7F3:	B0 04		BCS $D7F9	(+4)
C2/D7F5:	C9 F7		CMP #$F7	(-9)
C2/D7F7:	90 02		BCC $D7FB	(+2)
C2/D7F9:	A9 F7		LDA #$F7	(-9)
C2/D7FB:	8F802100	STA $002180
C2/D7FF:	9D 20 96	STA $9620,X
C2/D802:	CA CA		DEX x2
C2/D804:	C8		INY
C2/D805:	C4 12		CPY $12
C2/D807:	D0 B1		BNE $D7BA
C2/D809:	4C 6E D8	JMP $D86E		(BRA would've worked...)

(Called if clip plane shape is wavy out.)
C2/D80C:	20 1E D8	JSR $D81E
C2/D80F:	4C DE D9	JMP $D9DE

(Called if clip plane shape is wavy.)
C2/D812:	20 1E D8	JSR $D81E
C2/D815:	4C 04 DA	JMP $DA04

(Called if clip plane shape is wavy in.)
C2/D818:	20 1E D8	JSR $D81E
C2/D81B:	4C F1 D9	JMP $D9F1

(Called from C2/D80C, C2/D812 and C2/D818.)
C2/D81E:	A2 FE		LDX #$FE	(-2)
C2/D820:	A9 00		LDA #$00	(0)
C2/D822:	38		SEC
C2/D823:	F9 1F 9E	SBC $9E1F,Y
C2/D826:	8F802100	STA $002180
C2/D82A:	9D 1F 96	STA $961F,X
C2/D82D:	B9 1F 9E	LDA $9E1F,Y
C2/D830:	8F802100	STA $002180
C2/D834:	9D 20 96	STA $9620,X
C2/D837:	CA CA		DEX x2
C2/D839:	C8		INY
C2/D83A:	C4 12		CPY $12
C2/D83C:	D0 E2		BNE $D820	(-30)
C2/D83E:	7B		TDC
C2/D83F:	99 1F 9E	STA $9E1F,Y
C2/D842:	88		DEY
C2/D843:	B9 1F 9E	LDA $9E1F,Y
C2/D846:	3A		DEC
C2/D847:	85 12		STA $12
C2/D849:	B9 1F 9E	LDA $9E1F,Y
C2/D84C:	D9 1E 9E	CMP $9E1E,Y
C2/D84F:	F0 17		BEQ $D868	(+23)
C2/D851:	A9 00		LDA #$00	(0)
C2/D853:	38		SEC
C2/D854:	E5 12		SBC $12
C2/D856:	8F802100	STA $002180
C2/D85A:	9D 1F 96	STA $961F,X
C2/D85D:	A5 12		LDA $12
C2/D85F:	8F802100	STA $002180
C2/D863:	9D 20 96	STA $9620,X
C2/D866:	CA CA		DEX x2
C2/D868:	C6 12		DEC $12
C2/D86A:	88		DEY
C2/D86B:	D0 DC		BNE $D849	(-36)
C2/D86D:	60		RTS

C2/D86E:	7B		TDC			(A = 0)
C2/D86F:	99 1F 9E	STA $9E1F,Y
C2/D872:	88		DEY
C2/D873:	B9 1F 9E	LDA $9E1F,Y
C2/D876:	3A		DEC
C2/D877:	85 12		STA $12
C2/D879:	B9 1F 9E	LDA $9E1F,Y	(INC would've worked...)
C2/D87C:	D9 1E 9E	CMP $9E1E,Y
C2/D87F:	F0 2A		BEQ $D8AB	(+42)
C2/D881:	A5 16		LDA $16
C2/D883:	38		SEC
C2/D884:	E5 12		SBC $12
C2/D886:	90 04		BCC $D88C	(+4)
C2/D888:	C9 08		CMP #$08	(8)
C2/D88A:	B0 02		BCS $D88E	(+2)
C2/D88C:	A9 08		LDA #$08	(8)
C2/D88E:	8F802100	STA $002180
C2/D892:	9D 1F 96	STA $961F,X
C2/D895:	A5 12		LDA $12
C2/D897:	18		CLC
C2/D898:	65 18		ADC $18
C2/D89A:	B0 04		BCS $D8A0	(+4)
C2/D89C:	C9 F7		CMP #$F7	(-9)
C2/D89E:	90 02		BCC $D8A2	(+2)
C2/D8A0:	A9 F7		LDA #$F7	(-9)
C2/D8A2:	8F802100	STA $002180
C2/D8A6:	9D 20 96	STA $9620,X
C2/D8A9:	CA CA		DEX x2
C2/D8AB:	C6 12		DEC $12
C2/D8AD:	88		DEY
C2/D8AE:	D0 C9		BNE $D879	(-55)
C2/D8B0:	60		RTS

C2/D8B1:	7B		TDC			(A = 0)
C2/D8B2:	AA		TAX			(X = 0)
C2/D8B3:	C2 20		REP #$20		(16-bit A)
C2/D8B5:	E2 10		SEP #$10		(8-bit X & Y)
C2/D8B7:	A9 FF 00	LDA #$00FF
C2/D8BA:	9D 1F 96	STA $961F,X
C2/D8BD:	9D 5F 96	STA $965F,X
C2/D8C0:	9D 9F 96	STA $969F,X
C2/D8C3:	9D DF 96	STA $96DF,X
C2/D8C6:	9D 1F 97	STA $971F,X
C2/D8C9:	9D 5F 97	STA $975F,X
C2/D8CC:	9D 9F 97	STA $979F,X
C2/D8CF:	9D DF 97	STA $97DF,X
C2/D8D2:	E8 E8		INX x2
C2/D8D4:	E0 40		CPX #$40
C2/D8D6:	D0 E2		BNE $D8BA	(-30)
C2/D8D8:	C2 10		REP #$10		(16-bit X & Y)
C2/D8DA:	E2 20		SEP #$20		(8-bit A)
C2/D8DC:	60		RTS

C2/D8DD:	20 E1 D8	JSR $D8E1
C2/D8E0:	6B		RTL

C2/D8E1:	20 B1 D8	JSR $D8B1
C2/D8E4:	AD 13 96	LDA $9613		(Clip plane width)
C2/D8E7:	29 7F		AND #$7F
C2/D8E9:	D0 01		BNE $D8EC	(+1)
C2/D8EB:	60		RTS

C2/D8EC:	E2 10		SEP #$10		(8-bit X & Y)
C2/D8EE:	85 14		STA $14
C2/D8F0:	85 1E		STA $1E
C2/D8F2:	AD 14 96	LDA $9614		(Clip plane X-coordinate)
C2/D8F5:	85 1A		STA $1A
C2/D8F7:	64 20		STZ $20
C2/D8F9:	AD 19 96	LDA $9619
C2/D8FC:	85 24		STA $24
C2/D8FE:	AD 1B 96	LDA $961B		(Load clip plane shape)
C2/D901:	C9 08		CMP #$08	(8)	(Branch if not a dome...)
C2/D903:	F0 08		BEQ $D90D	(+8)
C2/D905:	C9 05		CMP #$05	(5)	(...wavy in...)
C2/D907:	F0 04		BEQ $D90D	(+4)
C2/D909:	C9 02		CMP #$02	(2)	(...or wavy)
C2/D90B:	D0 15		BNE $D922	(+21)
C2/D90D:	A5 14		LDA $14
C2/D90F:	85 24		STA $24
C2/D911:	AD 1A 96	LDA $961A
C2/D914:	20 1D DD	JSR $DD1D
C2/D917:	85 24		STA $24
C2/D919:	A5 14		LDA $14
C2/D91B:	18		CLC
C2/D91C:	65 24		ADC $24
C2/D91E:	85 14		STA $14
C2/D920:	85 1E		STA $1E
C2/D922:	7B		TDC			(A = 0)
C2/D923:	A8		TAY			(Y = 0)
C2/D924:	3A		DEC A			(A = -1)
C2/D925:	85 12		STA $12
C2/D927:	A5 1E		LDA $1E
C2/D929:	C5 20		CMP $20
C2/D92B:	90 23		BCC $D950	(+35)
C2/D92D:	99 1F 9E	STA $9E1F,Y
C2/D930:	A5 20		LDA $20
C2/D932:	0A		ASL A
C2/D933:	3A		DEC A
C2/D934:	85 10		STA $10
C2/D936:	C8		INY
C2/D937:	E6 20		INC $20
C2/D939:	A5 14		LDA $14
C2/D93B:	38		SEC
C2/D93C:	E5 10		SBC $10
C2/D93E:	85 14		STA $14
C2/D940:	C5 12		CMP $12
C2/D942:	90 E1		BCC $D925	(-31)
C2/D944:	C6 1E		DEC $1E
C2/D946:	A5 1E		LDA $1E
C2/D948:	0A		ASL
C2/D949:	18		CLC
C2/D94A:	65 14		ADC $14
C2/D94C:	85 14		STA $14
C2/D94E:	80 D5		BRA $D925	(-43)
C2/D950:	84 12		STY $14
C2/D952:	A9 1F		LDA #$1F	(31)
C2/D954:	8F812100	STA $002181
C2/D958:	A9 97		LDA #$97	(-105)
C2/D95A:	8F822100	STA $002182
C2/D95E:	A9 7E		LDA #$7E	(126)
C2/D960:	8F832100	STA $002183
C2/D964:	7B		TDC			(A = 0)
C2/D965:	A8		TAY			(Y = 0)
C2/D966:	A5 1A		LDA $1A
C2/D968:	85 16		STA $16
C2/D96A:	85 18		STA $18
C2/D96C:	20 39 D5	JSR $D539
C2/D96F:	C2 10		REP #$10		(16-bit X & Y)
C2/D971:	AD 15 96	LDA $9615		(Clip plane Y-coordinate)
C2/D974:	C9 81		CMP #$81	(129)
C2/D976:	90 2B		BCC $D9A3	(+43)
C2/D978:	38		SEC			(Carry bit already set...)
C2/D979:	E9 80		SBC #$80	(128)
C2/D97B:	F0 26		BEQ $D9A3	(+38)
C2/D97D:	C2 20		REP #$20		(16-bit A)
C2/D97F:	0A 0A		ASL x2
C2/D981:	85 22		STA $22
C2/D983:	7B		TDC			(A = 0)
C2/D984:	AA		TAX			(X = 0)
C2/D985:	AD 1B 96	LDA $961B		(Load clip plane shape)
C2/D988:	29 FF 00	AND #$00FF
C2/D98B:	C9 03 00	CMP #$0003	(3)	(Branch if not a pillar)
C2/D98E:	D0 05		BNE $D995	(+5)
C2/D990:	AD 1F 96	LDA $961F
C2/D993:	80 03		BRA $D998	(+3)
C2/D995:	A9 FF 00	LDA #$00FF
C2/D998:	9D 21 9A	STA $9A21,X
C2/D99B:	E8 (x4)	INX
C2/D99F:	E4 22		CPX $22
C2/D9A1:	D0 F5		BNE $D998	(-11)
C2/D9A3:	AD 15 96	LDA $9615		(Clip plane Y-coordinate)
C2/D9A6:	C2 20		REP #$20		(16-bit A)
C2/D9A8:	29 FF 00	AND #$00FF
C2/D9AB:	0A 0A		ASL x2
C2/D9AD:	AA		TAX
C2/D9AE:	7B		TDC			(A = 0)
C2/D9AF:	A8		TAY			(Y = 0)
C2/D9B0:	B9 1F 96	LDA $961F,Y
C2/D9B3:	9D 21 98	STA $9821,X
C2/D9B6:	C8 C8		INY x2
C2/D9B8:	C0 00 02	CPY #$0200	(512)
C2/D9BB:	D0 11		BNE $D9CE	(+17)
C2/D9BD:	A9 FF 00	LDA #$00FF
C2/D9C0:	9D 21 98	STA $9821,X
C2/D9C3:	E8 (x4)	INX x4
C2/D9C7:	E0 5C 04	CPX #$045C	(1,116)
C2/D9CA:	D0 F4		BNE $D9C0	(-12)
C2/D9CC:	80 09		BRA $D9D7	(+9)
C2/D9CE:	E8 (x4)	INX x4
C2/D9D2:	E0 5C 04	CPX #$045C	(1,116)
C2/D9D5:	D0 D9		BNE $D9B0	(-39)
C2/D9D7:	7B		TDC
C2/D9D8:	E2 20		SEP #$20		(8-bit A)
C2/D9DA:	EE 97 61	INC $6197
C2/D9DD:	60		RTS

(Called from C2/D80F.)
C2/D9DE:	C2 10		REP #$10		(16-bit X & Y)
C2/D9E0:	A9 08		LDA #$08	(8)
C2/D9E2:	8D 1C 96	STA $961C
C2/D9E5:	A9 10		LDA #$10	(16)	(Wouldn't ASL also work?)
C2/D9E7:	8D 1E 96	STA $961E
C2/D9EA:	A9 04		LDA #$04	(4)
C2/D9EC:	8D 1D 96	STA $961D
C2/D9EF:	80 24		BRA $DA15	(+36)

(Called from C2/D81B.)
C2/D9F1:	C2 10		REP #$10		(16-bit X & Y)
C2/D9F3:	A9 04		LDA #$04	(4)
C2/D9F5:	8D 1C 96	STA $961C
C2/D9F8:	A9 0A		LDA #$0A	(10)
C2/D9FA:	8D 1E 96	STA $961E
C2/D9FD:	A9 08		LDA #$08	(8)
C2/D9FF:	8D 1D 96	STA $961D
C2/DA02:	80 11		BRA $DA15	(+17)

(Called from C2/D815.)
C2/DA04:	C2 10		REP #$10
C2/DA06:	A9 08		LDA #$08	(8)
C2/DA08:	8D 1C 96	STA $961C
C2/DA0B:	A9 20		LDA #$20	(32)
C2/DA0D:	8D 1E 96	STA $961E
C2/DA10:	A9 04		LDA #$04	(4)
C2/DA12:	8D 1D 96	STA $961D
C2/DA15:	AD 1A 96	LDA $961A
C2/DA18:	18		CLC
C2/DA19:	6D 1C 96	ADC $961C
C2/DA1C:	8D 1A 96	STA $961A
C2/DA1F:	85 26		STA $26
C2/DA21:	AD 1E 96	LDA $961E
C2/DA24:	85 24		STA $24
C2/DA26:	AD 1D 96	LDA $961D
C2/DA29:	85 28		STA $28
C2/DA2B:	7B		TDC			(A = 0)
C2/DA2C:	A8		TAY			(Y = 0)
C2/DA2D:	A5 26		LDA $26
C2/DA2F:	18		CLC
C2/DA30:	65 28		ADC $28
C2/DA32:	85 26		STA $26
C2/DA34:	B9 20 96	LDA $9620,Y
C2/DA37:	F0 2C		BEQ $DA65
C2/DA39:	A5 26		LDA $26
C2/DA3B:	20 1D DD	JSR $DD1D
C2/DA3E:	18		CLC
C2/DA3F:	65 16		ADC $16
C2/DA41:	85 22		STA $22
C2/DA43:	B9 1F 96	LDA $961F,Y
C2/DA46:	18		CLC
C2/DA47:	65 22		ADC $22		(Could've used ADC $961F,Y instead...)
C2/DA49:	90 04		BCC $DA4F	(+4)
C2/DA4B:	C9 08		CMP #$08	(8)
C2/DA4D:	B0 02		BCS $DA51	(+2)
C2/DA4F:	A9 08		LDA #$08	(8)
C2/DA51:	99 1F 96	STA $961F,Y
C2/DA54:	B9 20 96	LDA $9620,Y
C2/DA57:	18		CLC
C2/DA58:	65 22		ADC $22
C2/DA5A:	B0 04		BCS $DA60	(+4)
C2/DA5C:	C9 F7		CMP #$F7
C2/DA5E:	90 02		BCS $DA62	(+2)
C2/DA60:	A9 F7		LDA #$F7
C2/DA62:	99 20 96	STA $9620,Y
C2/DA65:	C8 C8		INY x2
C2/DA67:	C0 00 02	CPY #$0200	(512)
C2/DA6A:	D0 C1		BNE $DA2D	(-63)
C2/DA6C:	60		RTS

C2/DA6D:	20 71 DA	JSR $DA71
C2/DA70:	6B		RTL

C2/DA71:	20 B1 D8	JSR $D8B1
C2/DA74:	AD 5C 61	LDA $615C
C2/DA77:	CD 5E 61	CMP $615E
C2/DA7A:	F0 20		BEQ $DA9C	(+32)
C2/DA7C:	90 1E		BCC $DA9C	(+30)
C2/DA7E:	AD 60 61	LDA $6160
C2/DA81:	CD 5E 61	CMP $615E
C2/DA84:	F0 1D		BEQ $DAA3	(+29)
C2/DA86:	90 1B		BCC $DAA3	(+27)
C2/DA88:	AE 5B 61	LDX $615B
C2/DA8B:	8E 65 61	STX $6165
C2/DA8E:	AE 5D 61	LDX $615D
C2/DA91:	8E 61 61	STX $6161
C2/DA94:	AE 5F 61	LDX $615F
C2/DA97:	8E 63 61	STX $6163
C2/DA9A:	80 2D		BRA $DAB9	(+45)
C2/DA9C:	CD 60 61	CMP $6160
C2/DA9F:	F0 16		BEQ $DAB7	(+22)
C2/DAA1:	90 14		BCC $DAB7	(+20)
C2/DAA3:	AE 5F 61	LDX $615F
C2/DAA6:	8E 61 61	STX $6161
C2/DAA9:	AE 5B 61	LDX $615B
C2/DAAC:	8E 63 61	STX $6163
C2/DAAF:	AE 5D 61	LDX $615D
C2/DAB2:	8E 65 61	STX $6165
C2/DAB5:	80 12		BRA $DAC9	(+18)
C2/DAB7:	AE 5B 61	LDX $615B
C2/DABA:	8E 61 61	STX $6161
C2/DABD:	AE 5D 61	LDX $615D
C2/DAC0:	8E 63 61	STX $6163
C2/DAC3:	AE 5F 61	LDX $615F
C2/DAC6:	8E 65 61	STX $6165
C2/DAC9:	AD 63 61	LDA $6163
C2/DACC:	CD 65 61	CMP $6165
C2/DACF:	F0 10		BEQ $DAE1	(+16)
C2/DAD1:	90 0E		BCC $DAE1	(+14)
C2/DAD3:	AE 63 61	LDX $6163
C2/DAD6:	DA		PHX
C2/DAD7:	AE 65 61	LDX $6165
C2/DADA:	8E 63 61	STX $6163
C2/DADD:	FA		PLX
C2/DADE:	8E 65 61	STX $6165
C2/DAE1:	AE 61 61	LDX $6161
C2/DAE4:	8E 4C 61	STX $614C
C2/DAE7:	AE 63 61	LDX $6163
C2/DAEA:	8E 4E 61	STX $614E
C2/DAED:	22C8DCC2	JSL $C2DCC8
C2/DAF1:	AD 61 61	LDA $6161
C2/DAF4:	85 1E		STA $1E
C2/DAF6:	AD 62 61	LDA $6162
C2/DAF9:	85 20		STA $20
C2/DAFB:	20 6A DB	JSR $DB6A
C2/DAFE:	AE 61 61	LDX $6161
C2/DB01:	8E 4C 61	STX $614C
C2/DB04:	AE 65 61	LDX $6165
C2/DB07:	8E 4E 61	STX $614E
C2/DB0A:	22C8DCC2	JSL $C2DCC8
C2/DB0E:	AD 61 61	LDA $6161
C2/DB11:	85 1E		STA $1E
C2/DB13:	AD 62 61	LDA $6162
C2/DB16:	85 20		STA $20
C2/DB18:	20 19 DC	JSR $DC19
C2/DB1B:	AD 64 61	LDA $6164
C2/DB1E:	CD 66 61	CMP $6166
C2/DB21:	F0 21		BEQ $DB44	(+33)
C2/DB23:	90 1F		BCC $DB44	(+31)
C2/DB25:	AE 65 61	LDX $6165
C2/DB28:	8E 4C 61	STX $614C
C2/DB2B:	AE 63 61	LDX $6163
C2/DB2E:	8E 4E 61	STX $614E
C2/DB31:	22C8DCC2	JSL $C2DCC8
C2/DB35:	AD 65 61	LDA $6165
C2/DB38:	85 1E		STA $1E
C2/DB3A:	AD 66 61	LDA $6166
C2/DB3D:	85 20		STA $20
C2/DB3F:	20 19 DC	JSR $DC19
C2/DB42:	80 1D		BDA $DB61	(+29)
C2/DB44:	AE 63 61	LDX $6163
C2/DB47:	8E 4C 61	STX $614C
C2/DB4A:	AE 65 61	LDX $6165
C2/DB4D:	8E 4E 61	STX $614E
C2/DB50:	22C8DCC2	JSL $C2DCC8
C2/DB54:	AD 63 61	LDA $6163
C2/DB57:	85 1E		STA $1E
C2/DB59:	AD 64 61	LDA $6164
C2/DB5C:	85 20		STA $20
C2/DB5E:	20 6A DB	JSR $DB6A
C2/DB61:	AD 55 61	LDA $6155		(Animation Y-coordinate in Mode 7)
C2/DB64:	8D 15 96	STA $9615		(Clip plane Y-coordinate)
C2/DB67:	4C 6F D9	JMP $D96F

C2/DB6A:	AD 54 61	LDA $6154		(Animation X-coordinate in Mode 7)
C2/DB6D:	85 10		STA $10
C2/DB6F:	30 04		BMI $DB75	(+4)
C2/DB71:	A9 08		LDA #$08
C2/DB73:	80 02		BRA $DB77	(+2)
C2/DB75:	A9 F7		LDA #$F7
C2/DB77:	85 14		STA $14
C2/DB79:	64 11		STZ $11
C2/DB7B:	64 15		STZ $15
C2/DB7D:	64 1F		STZ $1F
C2/DB7F:	A5 20		LDA $20
C2/DB81:	C2 20		REP #$20		(16-bit A)
C2/DB83:	0A		ASL
C2/DB84:	A8		TAY
C2/DB85:	A5 10		LDA $10
C2/DB87:	38		SEC
C2/DB88:	E9 80 00	SBC #$0080	(128)
C2/DB8B:	85 10		STA $10
C2/DB8D:	7B		TDC
C2/DB8E:	E2 20		SEP #$20		(8-bit A)
C2/DB90:	AE 52 61	LDX $6152
C2/DB93:	86 22		STX $22
C2/DB95:	86 24		STX $24
C2/DB97:	A5 23		LDA $23
C2/DB99:	D0 01		BNE $DB9C	(+1)
C2/DB9B:	60		RTS

C2/DB9C:	AD 50 61	LDA $6150
C2/DB9F:	30 3C		BMI $DBDD	(+60)
C2/DBA1:	A5 24		LDA $24
C2/DBA3:	C5 23		CMP $23
C2/DBA5:	90 07		BCC $DBAE	(+7)
C2/DBA7:	38		SEC			(Carry bit should be set already...)
C2/DBA8:	E5 23		SBC $23
C2/DBAA:	E6 1E		INC $1E
C2/DBAC:	80 F5		BRA $DBA3	(-11)
C2/DBAE:	18		CLC
C2/DBAF:	65 22		ADC $22
C2/DBB1:	85 24		STA $24
C2/DBB3:	C2 20		REP #$20		(16-bit A)
C2/DBB5:	A5 1E		LDA $1E
C2/DBB7:	18		CLC
C2/DBB8:	65 10		ADC $10
C2/DBBA:	C9 09 00	CMP #$0009	(9)
C2/DBBD:	90 05		BCC $DBC4	(+5)
C2/DBBF:	C9 F8 00	CMP #$00F8	(248)
C2/DBC2:	90 02		BCC $DBC6	(+2)
C2/DBC4:	A5 14		LDA $14
C2/DBC6:	85 12		STA $12
C2/DBC8:	7B		TDC
C2/DBC9:	E2 20		SEP #$20		(8-bit A)
C2/DBCB:	A5 12		LDA $12
C2/DBCD:	D9 20 96	CMP $9620,Y
C2/DBD0:	D0 01		BNE $DBD3	(+1)
C2/DBD2:	1A		INC
C2/DBD3:	99 1F 96	STA $961F,Y
C2/DBD6:	C8 C8		INY x2
C2/DBD8:	C6 25		DEC $25
C2/DBDA:	D0 C5		BNE $DBA1	(-59)
C2/DBDC:	60		RTS

C2/DBDD:	A5 24		LDA $24
C2/DBDF:	C5 23		CMP $23
C2/DBE1:	90 07		BCC $DBEA	(+7)
C2/DBE3:	38		SEC
C2/DBE4:	E5 23		SBC $23
C2/DBE6:	C6 1E		DEC $1E
C2/DBE8:	80 F5		BRA $DBDF	(-11)
C2/DBEA:	18		CLC
C2/DBEB:	65 22		ADC $22
C2/DBED:	85 24		STA $24
C2/DBEF:	C2 20		REP #$20		(16-bit A)
C2/DBF1:	A5 1E		LDA $1E
C2/DBF3:	18		CLC
C2/DBF4:	65 10		ADC $10
C2/DBF6:	C9 09 00	CMP #$0009	(9)
C2/DBF9:	90 05		BCC $DC00	(+5)
C2/DBFB:	C9 F8 00	CMP #$00F8	(248)
C2/DBFE:	90 02		BCC $DC02	(+2)
C2/DC00:	A5 14		LDA $14
C2/DC02:	85 12		STA $12
C2/DC04:	7B		TDC
C2/DC05:	E2 20		SEP #$20		(8-bit A)
C2/DC07:	A5 12		LDA $12
C2/DC09:	D9 20 96	CMP $9620,Y
C2/DC0C:	D0 01		BNE $DC0F	(+1)
C2/DC0E:	1A		INC
C2/DC0F:	99 1F 96	STA $961F,Y
C2/DC12:	C8 C8		INY x2
C2/DC14:	C6 25		DEC $25
C2/DC16:	D0 C5		BNE $DBDD	(-59)
C2/DC18:	60		RTS

C2/DC19:	AD 54 61	LDA $6154		(Animation X-coordinate in Mode 7)
C2/DC1C:	85 10		STA $10
C2/DC1E:	30 04		BMI $DC24	(+4)
C2/DC20:	A9 08		LDA #$08
C2/DC22:	80 02		BRA $DC26	(+2)
C2/DC24:	A9 F7		LDA #$F7
C2/DC26:	85 14		STA $14
C2/DC28:	64 15		STZ $15
C2/DC2A:	64 11		STZ $11
C2/DC2C:	64 1F		STZ $1F
C2/DC2E:	A5 20		LDA $20
C2/DC30:	C2 20		REP #$20		(16-bit A)
C2/DC32:	0A		ASL
C2/DC33:	A8		TAY
C2/DC34:	A5 10		LDA $10
C2/DC36:	38		SEC
C2/DC37:	E9 80 00	SBC #$0080	(128)
C2/DC3A:	85 10		STA $10
C2/DC3C:	7B		TDC
C2/DC3D:	E2 20		SEP #$20		(8-bit A)
C2/DC3F:	AE 52 61	LDX $6152
C2/DC42:	86 22		STX $22
C2/DC44:	86 24		STX $24
C2/DC46:	A5 23		LDA $23
C2/DC48:	D0 01		BNE $DC4B	(+1)
C2/DC4A:	60		RTS

C2/DC4B:	AD 50 61	LDA $6150
C2/DC4E:	30 3C		BMI $DC8C	(+60)
C2/DC50:	A5 24		LDA $24
C2/DC52:	C5 23		CMP $23
C2/DC54:	90 07		BCC $DC5D	(+7)
C2/DC56:	38		SEC			(Carry bit should be set already...)
C2/DC57:	E5 23		SBC $23
C2/DC59:	E6 1E		INC $1E
C2/DC5B:	80 F5		BRA $DC52	(-11)
C2/DC5D:	18		CLC
C2/DC5E:	65 22		ADC $22
C2/DC60:	85 24		STA $24
C2/DC62:	C2 20		REP #$20		(16-bit A)
C2/DC64:	A5 1E		LDA $1E
C2/DC66:	18		CLC
C2/DC67:	65 10		ADC $10
C2/DC69:	C9 09 00	CMP #$0009	(9)
C2/DC6C:	90 05		BCC $DBC4	(+5)
C2/DC6E:	C9 F8 00	CMP #$00F8	(248)
C2/DC71:	90 02		BCC $DBC6	(+2)
C2/DC73:	A5 14		LDA $14
C2/DC75:	85 12		STA $12
C2/DC77:	7B		TDC
C2/DC78:	E2 20		SEP #$20		(8-bit A)
C2/DC7A:	A5 12		LDA $12
C2/DC7C:	D9 1F 96	CMP $961F,Y
C2/DC7F:	D0 01		BNE $DC82	(+1)
C2/DC81:	3A		DEC
C2/DC82:	99 20 96	STA $9620,Y
C2/DC85:	C8 C8		INY x2
C2/DC87:	C6 25		DEC $25
C2/DC89:	D0 C5		BNE $DC50	(-59)
C2/DC8B:	60		RTS

C2/DC8C:	A5 24		LDA $24
C2/DC8E:	C5 23		CMP $23
C2/DC90:	90 07		BCC $DC99	(+7)
C2/DC92:	38		SEC
C2/DC93:	E5 23		SBC $23
C2/DC95:	C6 1E		DEC $1E
C2/DC97:	80 F5		BRA $DC8E	(-11)
C2/DC99:	18		CLC
C2/DC9A:	65 22		ADC $22
C2/DC9C:	85 24		STA $24
C2/DC9E:	C2 20		REP #$20		(16-bit A)
C2/DCA0:	A5 1E		LDA $1E
C2/DCA2:	18		CLC
C2/DCA3:	65 10		ADC $10
C2/DCA5:	C9 09 00	CMP #$0009	(9)
C2/DCA8:	90 05		BCC $DC00	(+5)
C2/DCAA:	C9 F8 00	CMP #$00F8	(248)
C2/DCAD:	90 02		BCC $DC02	(+2)
C2/DCAF:	A5 14		LDA $14
C2/DCB1:	85 12		STA $12
C2/DCB3:	7B		TDC
C2/DCB4:	E2 20		SEP #$20		(8-bit A)
C2/DCB6:	A5 12		LDA $12
C2/DCB8:	D9 1F 96	CMP $961F,Y
C2/DCBB:	D0 01		BNE $DC0F	(+1)
C2/DCBD:	3A		DEC
C2/DCBE:	99 20 96	STA $9620,Y
C2/DCC1:	C8 C8		INY x2
C2/DCC3:	C6 25		DEC $25
C2/DCC5:	D0 C5		BNE $DBDD	(-59)
C2/DCC7:	60		RTS

C2/DCC8:	7B		TDC			(A = 0)
C2/DCC9:	AA		TAX			(X = 0)
C2/DCCA:	8E 50 61	STX $6150
C2/DCCD:	8E 52 61	STX $6152
C2/DCD0:	AD 4C 61	LDA $614C
C2/DCD3:	CD 4E 61	CMP $614E
C2/DCD6:	F0 1E		BEQ $DCF6	(+30)
C2/DCD8:	90 0F		BCC $DCE9	(+15)
C2/DCDA:	CE 50 61	DEC $6150
C2/DCDD:	AD 4C 61	LDA $614C
C2/DCE0:	38		SEC
C2/DCE1:	ED 4E 61	SBC $614E
C2/DCE4:	8D 52 61	STA $6152
C2/DCE7:	80 0D		BRA $DCF6	(+13)
C2/DCE9:	EE 50 61	INC $6150
C2/DCEC:	AD 4E 61	LDA $614E
C2/DCEF:	38		SEC
C2/DCF0:	ED 4C 61	SBC $614C
C2/DCF3:	8D 52 61	STA $6152
C2/DCF6:	AD 4D 61	LDA $614D
C2/DCF9:	CD 4F 61	CMP $614F
C2/DCFC:	F0 1E		BEQ $DD1C	(+30)
C2/DCFE:	90 0F		BCC $DD0F	(+15)
C2/DD00:	CE 51 61	DEC $6151
C2/DD03:	AD 4D 61	LDA $614D
C2/DD06:	38		SEC
C2/DD07:	ED 4F 61	SBC $614F
C2/DD0A:	8D 53 61	STA $6153
C2/DD0D:	80 0D		BRA $DD1C	(+13)
C2/DD0F:	EE 51 61	INC $6151
C2/DD12:	AD 4F 61	LDA $614F
C2/DD15:	38		SEC
C2/DD16:	ED 4D 61	SBC $614D
C2/DD19:	8D 53 61	STA $6153
C2/DD1C:	6B		RTL

C2/DD1D:	AA		TAX
C2/DD1E:	BF6DFEC2	LDA $C2FE6D,X
C2/DD22:	10 1A		BPL $DD3E	(+26)
C2/DD24:	49 FF		EOR #$FF
C2/DD26:	8F024200	STA $004202
C2/DD2A:	A5 24		LDA $24
C2/DD2C:	8F034200	STA $004203
C2/DD30:	A9 FF		LDA #$FF	(-1)
C2/DD32:	85 67		STA $67
C2/DD34:	85 67		STA $67
C2/DD36:	AF174200	LDA $004217
C2/DD3A:	49 FF		EOR #$FF
C2/DD3C:	1A		INC
C2/DD3D:	60		RTS

C2/DD3E:	8F024200	STA $004202
C2/DD42:	A5 24		LDA $24
C2/DD44:	8F034200	STA $004203
C2/DD48:	A9 00		LDA #$00	(0)
C2/DD4A:	85 67		STA $67
C2/DD4C:	85 67		STA $67
C2/DD4E:	AF174200	LDA $004217
C2/DD52:	60		RTS

(Animation script command 80 70.)
C2/DD53:	C2 20		REP #$20		(16-bit A)
C2/DD55:	7B		TDC			(A = 0)
C2/DD56:	AA		TAX			(X = 0)
C2/DD57:	E2 10		SEP #$10		(8-bit X & Y)
C2/DD59:	AD 24 7B	LDA $7B24
C2/DD5C:	38		SEC
C2/DD5D:	ED 2B 7B	SBC $7B2B
C2/DD60:	9D F7 4A	STA $4AF7,X
C2/DD63:	E8 (x4)	INX x4
C2/DD67:	E0 80		CPX #$80
C2/DD69:	D0 F5		BNE $DD60	(-11)
C2/DD6B:	7B		TDC
C2/DD6C:	E2 20		SEP #$20		(8-bit A)
C2/DD6E:	C2 10		REP #$10		(16-bit X & Y)
C2/DD70:	6B		RTL

(Animation script command 80 6E.)
C2/DD71:	7B		TDC			(A = 0)
C2/DD72:	AA		TAX			(X = 0)
C2/DD73:	64 22		STZ $22
C2/DD75:	BD B0 63	LDA $63B0,X
C2/DD78:	18		CLC
C2/DD79:	65 23		ADC $23
C2/DD7B:	9D B0 63	STA $63B0,X
C2/DD7E:	A5 22		LDA $22
C2/DD80:	18		CLC
C2/DD81:	65 26		ADC $26
C2/DD83:	85 22		STA $22
C2/DD85:	E8 (x4)	INX x4
C2/DD89:	D0 EA		BNE $DD75	(-22)
C2/DD8B:	6B		RTL

(16-bit data called from C1/5377.)
C2/DD8C:	00 70
C2/DD8E:	40 71
C2/DD90:	00 76
C2/DD92:	00 73
C2/DD94:	00 74
C2/DD96:	00 75
C2/DD98:	00 77
C2/DD9A:	00 68
C2/DD9C:	00 69

(32-bit data called from C1/53AC.)
C2/DD9E:	0C 08 15 8D
C2/DDA2:	12 08 2D 8D
C2/DDA6:	0A 08 17 8D
C2/DDAA:	1E 08 15 8D
C2/DDAE:	1E 08 15 8D
C2/DDB2:	09 08 3F 8D
C2/DDB6:	1E 05 15 8D
C2/DDBA:	15 08 15 8D
C2/DDBE:	1E 04 15 8D
C2/DDC2:	07 04 13 8D
C2/DDC6:	0C 05 13 8D
C2/DDCA:	1E 04 C1 A9
C2/DDCE:	12 04 CD A9
C2/DDD2:	12 07 17 8D
C2/DDD6:	0C 08 17 8D

(64-bit data?! This is called from a few places in a function located at C1/5165.)
C2/DDDA:	75 4E 51 4D 08 00 00 00
C2/DDE2:	75 4F 51 4D 08 00 00 00
C2/DDEA:	D5 51 61 4D 08 00 00 00
C2/DDF2:	D5 53 61 4D 05 00 00 00
C2/DDFA:	75 54 61 4D 06 00 00 00
C2/DE02:	75 4F 51 4D 05 00 00 00
C2/DE0A:	95 4F 71 4D 05 00 00 00
C2/DE12:	C5 4F A1 4D 05 00 00 00
C2/DE1A:	F5 4F D1 4D 05 00 00 00
C2/DE22:	75 4F 51 4D 06 00 00 00
C2/DE2A:	95 50 71 4D 08 00 00 00

(Back to 32-bit data... This is called from a few places in a function located at C1/50FB.)
C2/DE32:	5C 02 08 00
C2/DE36:	5C 02 08 00
C2/DE3A:	6C 02 08 00
C2/DE3E:	6C 02 08 00
C2/DE42:	6C 02 08 00
C2/DE46:	7C 02 05 00
C2/DE4A:	6C 02 08 00
C2/DE4E:	7C 02 05 00
C2/DE52:	7C 02 04 00
C2/DE56:	7C 02 04 00
C2/DE5A:	5C 02 04 00
C2/DE5E:	8C 02 04 00
C2/DE62:	BC 02 04 00
C2/DE66:	EC 02 04 00
C2/DE6A:	5C 02 04 00
C2/DE6E:	8C 02 04 00
C2/DE72:	BC 02 04 00
C2/DE76:	EC 02 04 00
C2/DE7A:	6C 02 05 00
C2/DE7E:	6C 02 05 00
C2/DE82:	6C 02 08 00
C2/DE86:	6C 02 08 00
C2/DE8A:	5C 02 07 00
C2/DE8E:	5C 02 04 00
C2/DE92:	5C 02 04 00
C2/DE96:	7C 02 08 00
C2/DE9A:	7C 02 08 00
C2/DE9E:	7C 02 08 00

C2/DEA2:	00 00 68 00
C2/DEA6:	00 00 B8 00
C2/DEAA:	00 01 E4 00
C2/DEAE:	00 00 24 01
C2/DEB2:	00 01 64 00
C2/DEB6:	00 01 A0 00
C2/DEBA:	00 00 B8 00
C2/DEBE:	00 00 24 01
C2/DEC2:	00 01 20 01
C2/DEC6:	00 01 64 00
C2/DECA:	F8 FF 68 FF
C2/DECE:	F8 FF 5C FF
C2/DED2:	F8 FF 50 FF
C2/DED6:	F8 FF 44 FF
C2/DEDA:	00 00 00 00
C2/DEDE:	00 00 00 00
C2/DEE2:	00 00 00 00
C2/DEE6:	00 00 00 00
C2/DEEA:	F0 FF A4 FF
C2/DEEE:	00 00 00 00
C2/DEF2:	00 00 24 01
C2/DEF6:	00 00 68 00
C2/DEFA:	00 00 B8 00
C2/DEFE:	F0 FF 68 FF
C2/DF02:	00 00 00 00
C2/DF06:	00 00 60 00
C2/DF0A:	00 00 24 01
C2/DF0E:	00 01 64 00

(This 32-bit data is used at C1/4E7E. The rightmost byte in each line is unused. Appears to be location data for drawing battle menus.)
C2/DF12:	D5 5A 0C 00
C2/DF16:	95 5B 07 00
C2/DF1A:	05 5C 04 00
C2/DF1E:	45 5C 06 00
C2/DF22:	59 58 20 00
C2/DF26:	61 8D 20 00
C2/DF2A:	4D 5E 20 00
C2/DF2E:	A5 5C 07 00
C2/DF32:	3F 5D 07 00
C2/DF36:	85 5D 07 00
C2/DF3A:	A5 5C 07 00
C2/DF3E:	C1 5C 07 00
C2/DF42:	DD 5C 07 00
C2/DF46:	F9 5C 07 00
C2/DF4A:	05 5C 04 00
C2/DF4E:	15 5C 04 00
C2/DF52:	25 5C 04 00
C2/DF56:	35 5C 04 00
C2/DF5A:	45 5C 06 00
C2/DF5E:	5D 5C 06 00
C2/DF62:	75 5C 06 00
C2/DF66:	8D 5C 06 00
C2/DF6A:	45 5C 06 00
C2/DF6E:	5D 5C 06 00
C2/DF72:	75 5C 06 00
C2/DF76:	8D 5C 06 00
C2/DF7A:	45 5C 06 00
C2/DF7E:	5D 5C 06 00
C2/DF82:	75 5C 06 00
C2/DF86:	8D 5C 06 00
C2/DF8A:	BD 5D 0C 00
C2/DF8E:	59 58 20 00
C2/DF92:	59 58 20 00
C2/DF96:	CD 5E 0A 00
C2/DF9A:	57 8D 20 00

(64-bit data used at C1/470B.)
C2/DF9E:	D5 5A 59 58 18 00 08 00
C2/DFA6:	95 5B 71 58 0E 00 08 00
C2/DFAE:	05 5C 7F 58 08 00 08 00
C2/DFB6:	45 5C 87 58 0C 00 08 00
C2/DFBE:	31 5D 15 8D 0E 00 05 00
C2/DFC6:	31 5D 95 8D 0E 00 05 00
C2/DFCE:	31 5D 15 8E 0E 00 05 00
C2/DFD6:	31 5D 95 8E 0E 00 05 00
C2/DFDE:	77 5D 21 8D 0E 00 05 00
C2/DFE6:	77 5D A1 8D 0E 00 05 00
C2/DFEE:	77 5D 21 8E 0E 00 05 00
C2/DFF6:	77 5D A1 8E 0E 00 05 00
C2/DFFE:	05 5C 7D 8D 08 00 08 00
C2/E006:	45 5C 85 8D 0C 00 08 00
C2/E00E:	BD 5D 57 8D 18 00 06 00
C2/E016:	31 5D 17 8D 0E 00 05 00
C2/E01E:	77 5D 2F 8D 0E 00 05 00
C2/E026:	CD 5E 57 8D 14 00 08 00
C2/E02E:	95 5B 6F 8D 0E 00 08 00

(Magic menu drawing script.)
C2/E036:	05 03		(Draw 3 spaces)
C2/E038:	04 21		(Change tile palette to #$21)
C2/E03A:	0F 00		(Draw spell name)
C2/E03C:	FF FF		(Draw 2 spaces)
C2/E03E:	04 21		(Change tile palette to #$21)
C2/E040:	0F 00		(Draw spell name)
C2/E042:	05 0A		(Draw 10 spaces)
C2/E044:	00		(End script)

(Lore menu drawing script.)
C2/E045:	FF FF FF	(Draw 3 spaces - why not 05 03?!)
C2/E048:	04 21		(Change tile palette to #$21)
C2/E04A:	19 00		(Draw Lore name)
C2/E04C:	00		(End script)

(Magitek menu drawing script.)
C2/E04D:	05 04		(Draw 4 spaces)
C2/E04F:	04 21		(Change tile palette to #$21)
C2/E051:	06 00		(Draw Magitek attack name)
C2/E053:	05 03		(Draw 3 spaces)
C2/E055:	04 21		(Change tile palette to #$21)
C2/E057:	06 00		(Draw Magitek attack name)
C2/E059:	00		(End script)

(Dance menu drawing script.)
C2/E05A:	05 04		(Draw 4 spaces)
C2/E05C:	04 21		(Change tile palette to #$21)
C2/E05E:	17 00		(Draw Dance name)
C2/E060:	05 02		(Draw 2 spaces)
C2/E062:	04 21		(Change tile palette to #$21)
C2/E064:	17 00		(Draw Dance name)
C2/E066:	00		(End script)

(Rage menu drawing script.)
C2/E067:	05 04		(Draw 4 spaces)
C2/E069:	04 21		(Change tile palette to #$21)
C2/E06B:	18 00		(Draw enemy name)
C2/E06D:	05 02		(Draw 2 spaces)
C2/E06F:	04 21		(Change tile palette to #$21)
C2/E071:	18 00		(Draw enemy name)
C2/E073:	00		(End script)

(Item menu drawing script.)
C2/E074:	05 04		(Draw 4 spaces)
C2/E076:	04 21		(Change tile palette to #$21)
C2/E078:	0E 00		(Draw Item name)
C2/E07A:	C1		(Draw ':')
C2/E07B:	02 00		(Draw quantity)
C2/E07D:	FF FF		(Draw 2 spaces)
C2/E07F:	12 00		(Draw Item type)
C2/E081:	FF		(Draw a space, for some reason)
C2/E082:	00		(End script)

(Esper menu drawing script.)
C2/E083:	FF FF		(Draw 2 spaces)
C2/E085:	84ACA99E	(Draw "Espe")
C2/E089:	AB FF FF	(Draw "r  ")
C2/E08C:	04 21		(Change tile palette to #$21)
C2/E08E:	1A 00		(Draw Esper name)
C2/E090:	05 04		(Draw 4 spaces)
C2/E092:	03 2C		(Draw 'M', except that's the wrong value)
C2/E094:	03 2F		(Draw 'P', except that's the wrong value)
C2/E096:	FF		(Draw ' ')
C2/E097:	16 00		(Display MP cost)
C2/E099:	00		(End script)

(Menu drawing pointers used at C1/4E63.)
C2/E09A:	C9 E1
C2/E09C:	D9 E1
C2/E09E:	E9 E1
C2/E0A0:	F5 E1
C2/E0A2:	48 E2
C2/E0A4:	68 E2
C2/E0A6:	72 E1
C2/E0A8:	85 E1
C2/E0AA:	65 E1
C2/E0AC:	6B E1
C2/E0AE:	A1 E1
C2/E0B0:	A8 E1
C2/E0B2:	AF E1
C2/E0B4:	B6 E1
C2/E0B6:	25 E1
C2/E0B8:	28 E1
C2/E0BA:	2B E1
C2/E0BC:	2E E1
C2/E0BE:	31 E1
C2/E0C0:	34 E1
C2/E0C2:	37 E1
C2/E0C4:	3A E1
C2/E0C6:	3D E1
C2/E0C8:	42 E1
C2/E0CA:	47 E1
C2/E0CC:	4C E1
C2/E0CE:	51 E1
C2/E0D0:	56 E1
C2/E0D2:	5B E1
C2/E0D4:	60 E1
C2/E0D6:	EC E0
C2/E0D8:	01 E2
C2/E0DA:	28 E2
C2/E0DC:	BD E1
C2/E0DE:	E0 E0

(Menu drawing scripts. Maximum length is 64 bytes, apparently.)
C2/E0E0:	05 12		(Draw 18 spaces)
C2/E0E2:	01		(New line)
C2/E0E3:	05 12		(Draw 18 spaces)
C2/E0E5:	01		(New line)
C2/E0E6:	05 12		(Draw 18 spaces)
C2/E0E8:	01		(New line)
C2/E0E9:	05 12		(Draw 18 spaces)
C2/E0EB:	00		(End script)

(SwdTech menu drawing script.)
C2/E0EC:	FF FF		(Draw 2 spaces)
C2/E0EE:	04 21		(Change tile palette to #$21)
C2/E0F0:	B5		(Draw '1')
C2/E0F1:	04 21		(Change tile palette to #$21)
C2/E0F3:	B6		(Draw '2')
C2/E0F4:	04 21		(Change tile palette to #$21)
C2/E0F6:	B7		(Draw '3')
C2/E0F7:	04 21		(Change tile palette to #$21)
C2/E0F9:	B8		(Draw '4')
C2/E0FA:	04 21		(Change tile palette to #$21)
C2/E0FC:	B9		(Draw '5')
C2/E0FD:	04 21		(Change tile palette to #$21)
C2/E0FF:	BA		(Draw '6')
C2/E100:	04 21		(Change tile palette to #$21)
C2/E102:	BB		(Draw '7')
C2/E103:	04 21		(Change tile palette to #$21)
C2/E105:	BC		(Draw '8')
C2/E106:	FF FF		(Draw 2 spaces)
C2/E108:	01		(New line)
C2/E109:	04 35		(Change tile palette to #$35)
C2/E10B:	FF		(Draw ' ')
C2/E10C:	03 F9		(Draw left end of timer)
C2/E10E:	03 F0		(Draw empty section of timer)
C2/E110:	03 F0		(Draw empty section of timer)
C2/E112:	03 F0		(Draw empty section of timer)
C2/E114:	03 F0		(Draw empty section of timer)
C2/E116:	03 F0		(Draw empty section of timer)
C2/E118:	03 F0		(Draw empty section of timer)
C2/E11A:	03 F0		(Draw empty section of timer)
C2/E11C:	03 F0		(Draw empty section of timer)
C2/E11E:	03 FA		(Draw right end of timer)
C2/E120:	FF		(Draw ' ')
C2/E121:	01		(New line)
C2/E122:	05 0C		(Draw 12 spaces)
C2/E124:	00		(End script)

C2/E125:	07 01		(Draw party member 1's current HP)
C2/E127:	00		(End script)

C2/E128:	08 01		(Draw party member 2's current HP)
C2/E12A:	00		(End script)

C2/E12B:	09 01		(Draw party member 3's current HP)
C2/E12D:	00		(End script)

C2/E12E:	0A 01		(Draw party member 4's current HP)
C2/E130:	00		(End script)

C2/E131:	07 02		(Draw party member 1's ATB gauge or max HP)
C2/E133:	00		(End script)

C2/E134:	08 02		(Draw party member 2's ATB gauge or max HP)
C2/E136:	00		(End script)

C2/E137:	09 02		(Draw party member 3's ATB gauge or max HP)
C2/E139:	00		(End script)

C2/E13A:	0A 02		(Draw party member 4's ATB gauge or max HP)
C2/E13C:	00		(End script)

C2/E13D:	04 39		(Change tile palette to #$39)
C2/E13F:	07 05		(Draw party member 1's Morph gauge)
C2/E141:	00		(End script)

C2/E142:	04 39		(Change tile palette to #$39)
C2/E144:	08 05		(Draw party member 2's Morph gauge)
C2/E146:	00		(End script)

C2/E147:	04 39		(Change tile palette to #$39)
C2/E149:	09 05		(Draw party member 3's Morph gauge)
C2/E14B:	00		(End script)

C2/E14C:	04 39		(Change tile palette to #$39)
C2/E14E:	0A 05		(Draw party member 4's Morph gauge)
C2/E150:	00		(End script)

(There's a Condemned gauge?! How come I've never seen it?)
C2/E151:	04 3D		(Change tile palette to #$39)
C2/E153:	07 06		(Draw party member 1's Condemned gauge)
C2/E155:	00		(End script)

C2/E156:	04 3D		(Change tile palette to #$39)
C2/E158:	08 06		(Draw party member 2's Condemned gauge)
C2/E15A:	00		(End script)

C2/E15B:	04 3D		(Change tile palette to #$39)
C2/E15D:	09 06		(Draw party member 3's Condemned gauge)
C2/E15F:	00		(End script)

C2/E160:	04 3D		(Change tile palette to #$39)
C2/E162:	0A 06		(Draw party member 4's Condemned gauge)
C2/E164:	00		(End script)

C2/E165:	FF FF		(Draw 2 spaces)
C2/E167:	91 A8 B0	(Draw "Row")
C2/E16A:	00		(End script)

C2/E16B:	FF FF		(Draw 2 spaces)
C2/E16D:	839E9FC5	(Draw "Def.")
C2/E171:	00		(End script)

C2/E172:	05 03		(Draw 3 spaces)
C2/E174:	91 C4 87	(Draw "R-H")
C2/E177:	9A A7 9D	(Draw "and")
C2/E17A:	05 09		(Draw 9 spaces)
C2/E17C:	8B C4 87	(Draw "L-H")
C2/E17F:	9A A7 9D	(Draw "and")
C2/E182:	05 07		(Draw 7 spaces)
C2/E184:	00		(End script)

(When are these used?!)
C2/E185:	07 03		(Draw party member 1's current MP)
C2/E187:	03 15		(Draw ' ')
C2/E189:	07 04		(Draw party member 1's max MP)
C2/E18B:	01		(New line)
C2/E18C:	08 03		(Draw party member 2's current MP)
C2/E18E:	03 15		(Draw ' ')
C2/E190:	08 04		(Draw party member 2's max MP)
C2/E192:	01		(New line)
C2/E193:	09 03		(Draw party member 3's current MP)
C2/E195:	03 15		(Draw ' ')
C2/E197:	09 04		(Draw party member 3's max MP)
C2/E199:	01		(New line)
C2/E19A:	0A 03		(Draw party member 4's current MP)
C2/E19C:	03 15		(Draw ' ')
C2/E19E:	0A 04		(Draw party member 4's max MP)
C2/E1A0:	00		(End script)

C2/E1A1:	07 03		(Draw party member 1's current MP)
C2/E1A3:	03 15		(Draw ' ')
C2/E1A5:	07 04		(Draw party member 1's max MP)
C2/E1A7:	00		(End script)

C2/E1A8:	08 03		(Draw party member 2's current MP)
C2/E1AA:	03 15		(Draw ' ')
C2/E1AC:	08 04		(Draw party member 2's max MP)
C2/E1AE:	00		(End script)

C2/E1AF:	09 03		(Draw party member 3's current MP)
C2/E1B1:	03 15		(Draw ' ')
C2/E1B3:	09 04		(Draw party member 3's max MP)
C2/E1B5:	00		(End script)

C2/E1B6:	0A 03		(Draw party member 4's current MP)
C2/E1B8:	03 15		(Draw ' ')
C2/E1BA:	0A 04		(Draw party member 4's max MP)
C2/E1BC:	00		(End script)

C2/E1BD:	10 1F		(Draw blank status)
C2/E1BF:	01		(New line)
C2/E1C0:	10 1F		(Draw blank status)
C2/E1C2:	01		(New line)
C2/E1C3:	10 1F		(Draw blank status)
C2/E1C5:	01		(New line)
C2/E1C6:	10 1F		(Draw blank status)
C2/E1C8:	00		(End script)

C2/E1C9:	0B 00		(Draw enemy name #1)
C2/E1CB:	FF		(Draw ' ')
C2/E1CC:	01		(New line)
C2/E1CD:	0B 01		(Draw enemy name #2)
C2/E1CF:	FF		(Draw ' ')
C2/E1D0:	01		(New line)
C2/E1D1:	0B 02		(Draw enemy name #3)
C2/E1D3:	FF		(Draw ' ')
C2/E1D4:	01		(New line)
C2/E1D5:	0B 03		(Draw enemy name #4)
C2/E1D7:	FF		(Draw ' ')
C2/E1D8:	00		(End script)

C2/E1D9:	07 00		(Draw party member 1's name)
C2/E1DB:	FF		(Draw ' ')
C2/E1DC:	01		(New line)
C2/E1DD:	08 00		(Draw party member 2's name)
C2/E1DF:	FF		(Draw ' ')
C2/E1E0:	01		(New line)
C2/E1E1:	09 00		(Draw party member 3's name)
C2/E1E3:	FF		(Draw ' ')
C2/E1E4:	01		(New line)
C2/E1E5:	0A 00		(Draw party member 4's name)
C2/E1E7:	FF		(Draw ' ')
C2/E1E8:	00		(End script)

C2/E1E9:	07 01		(Draw party member 1's current HP)
C2/E1EB:	01		(New line)
C2/E1EC:	08 01		(Draw party member 2's current HP)
C2/E1EE:	01		(New line)
C2/E1EF:	09 01		(Draw party member 3's current HP)
C2/E1F1:	01		(New line)
C2/E1F2:	0A 01		(Draw party member 4's current HP)
C2/E1F4:	00		(End script)

C2/E1F5:	07 02		(Draw party member 1's ATB gauge or max HP)
C2/E1F7:	01		(New line)
C2/E1F8:	08 02		(Draw party member 2's ATB gauge or max HP)
C2/E1FA:	01		(New line)
C2/E1FB:	09 02		(Draw party member 3's ATB gauge or max HP)
C2/E1FD:	01		(New line)
C2/E1FE:	0A 02		(Draw party member 4's ATB gauge or max HP)
C2/E200:	00		(End script)

(This script draws the battle command names in the "Short" selection window. What's weird is that it looks like it's just drawing "Fight" four times. My guess is that the command 0D parameters get overwritten in the loaded script in RAM.)
C2/E201:	05 06		(Draw 6 spaces)
C2/E203:	04 21		(Change tile palette to #$21)
C2/E205:	0D 00		(Draw command name)
C2/E207:	05 05		(Draw 5 spaces)
C2/E209:	01		(New line)
C2/E20A:	FF FF		(Draw 2 spaces)
C2/E20C:	04 21		(Change tile palette to #$21)
C2/E20E:	0D 00		(Draw command name)
C2/E210:	16 16 16	(NOP x3...)
C2/E213:	FF FF		(Draw 2 spaces)
C2/E215:	04 21		(Change tile palette to #$21)
C2/E217:	0D 00		(Draw command name)
C2/E219:	FF		(Draw ' ')
C2/E21A:	01		(New line)
C2/E21B:	16		(NOP)
C2/E21C:	05 06		(Draw 6 spaces)
C2/E21E:	04 21		(Change tile palette to #$21)
C2/E220:	0D 00		(Draw command name)
C2/E222:	05 05		(Draw 5 spaces)
C2/E224:	01		(New line)
C2/E225:	05 13		(Draw 19 spaces)
C2/E227:	00		(End script)

(Display four spell names? Could this be the Control menu?)
C2/E228:	FF		(Draw ' ')
C2/E229:	04 21		(Change tile palette to #$21)
C2/E22B:	11 00		(Draw spell name followed by 3 spaces)
C2/E22D:	FF		(Draw ' ')
C2/E22E:	16		(NOP)
C2/E22F:	01		(New line)
C2/E230:	FF		(Draw ' ')
C2/E231:	04 21		(Change tile palette to #$21)
C2/E233:	11 00		(Draw spell name followed by 3 spaces)
C2/E235:	FF		(Draw ' ')
C2/E236:	16		(NOP)
C2/E237:	01		(New line)
C2/E238:	FF		(Draw ' ')
C2/E239:	04 21		(Change tile palette to #$21)
C2/E23B:	11 00		(Draw spell name followed by 3 spaces)
C2/E23D:	FF		(Draw ' ')
C2/E23E:	16		(NOP)
C2/E23F:	01		(New line)
C2/E240:	FF		(Draw ' ')
C2/E241:	04 21		(Change tile palette to #$21)
C2/E243:	11 00		(Draw spell name followed by 3 spaces)
C2/E245:	FF		(Draw ' ')
C2/E246:	16		(NOP)
C2/E247:	00		(End script)

C2/E248:	FF FF		(Draw 2 spaces)
C2/E24A:	04 21		(Change tile palette to #$21)
C2/E24C:	0D 00		(Draw command name)
C2/E24E:	FF		(Draw ' ')
C2/E24F:	01		(New line)
C2/E250:	FF FF		(Draw 2 spaces)
C2/E252:	04 21		(Change tile palette to #$21)
C2/E254:	0D 00		(Draw command name)
C2/E256:	FF		(Draw ' ')
C2/E257:	01		(New line)
C2/E258:	FF FF		(Draw 2 spaces)
C2/E25A:	04 21		(Change tile palette to #$21)
C2/E25C:	0D 00		(Draw command name)
C2/E25E:	FF		(Draw ' ')
C2/E25F:	01		(New line)
C2/E260:	FF FF		(Draw 2 spaces)
C2/E262:	04 21		(Change tile palette to #$21)
C2/E264:	0D 00		(Draw command name)
C2/E266:	FF		(Draw ' ')
C2/E267:	00		(End script)

C2/E268:	FF FF		(Draw 2 spaces)
C2/E26A:	04 21		(Change tile palette to #$21)
C2/E26C:	1B 00		(NOP...)
C2/E26E:	FF		(Draw ' ')
C2/E26F:	01		(New line)
C2/E270:	FF FF		(Draw 2 spaces)
C2/E272:	04 21		(Change tile palette to #$21)
C2/E274:	1B 00		(NOP...)
C2/E276:	FF		(Draw ' ')
C2/E277:	01		(New line)
C2/E278:	FF FF		(Draw 2 spaces)
C2/E27A:	04 21		(Change tile palette to #$21)
C2/E27C:	1B 00		(NOP...)
C2/E27E:	FF		(Draw ' ')
C2/E27F:	01		(New line)
C2/E280:	FF FF		(Draw 2 spaces)
C2/E282:	04 21		(Change tile palette to #$21)
C2/E284:	1B 00		(NOP...)
C2/E286:	FF		(Draw ' ')
C2/E287:	00		(End script)
C2/E288:	00		(End script)
C2/E289:	00		(End script)

(C2/E28A-C2/E347: Probably includes a bunch of data, but I can't make sense of it. C2/E348 data is called from C1/5A31.)
C2/E348:	01 05 00 00
C2/E34C:	01 32 39 08
C2/E350:	01 0A 00 00
C2/E354:	01 0C 00 00
C2/E358:	01 0E 00 00
C2/E35C:	01 10 00 00
C2/E360:	01 16 00 00
C2/E364:	01 1B 00 00
C2/E368:	01 0A 00 00
C2/E36C:	01 1E 00 00
C2/E370:	01 21 00 00
C2/E374:	01 24 00 00
C2/E378:	01 27 00 00
C2/E37C:	01 2A 00 00
C2/E380:	01 2D 00 00
C2/E384:	01 30 00 00
C2/E388:	01 37 00 00
C2/E38C:	01 00 00 00
C2/E390:	01 41 00 00

(Other data sets called from various places.)
C2/E394:	C0
C2/E395:	C4
C2/E396:	C8
C2/E397:	CC

C2/E398:	60
C2/E399:	64
C2/E39A:	68
C2/E39B:	6C

C2/E39C:	80
C2/E39D:	84
C2/E39E:	88
C2/E39F:	8C

C2/E3A0:	A0
C2/E3A1:	A4

C2/E3A2:	FB
C2/E3A3:	FA
C2/E3A4:	F9
C2/E3A5:	F8
C2/E3A6:	F8
C2/E3A7:	F9
C2/E3A8:	FA
C2/E3A9:	FB

(Data needed for status-related outline color changes.)
C2/E3AA:	00
C2/E3AB:	08
C2/E3AC:	10
C2/E3AD:	18

(Data needed for status-related skin color changes.)
C2/E3AE:	DB 7E D3 4D
C2/E3B2:	F5 3A 10 32
C2/E3B6:	3F 01 1F 00

(Also seems to be part of the outline color function.)
C2/E3BA:	60 6A
C2/E3BC:	1F 03
C2/E3BE:	64 0B
C2/E3C0:	1A 00

C2/E3C2:	FF 7F
C2/E3C4:	FF 7F
C2/E3C6:	1A 00
C2/E3C8:	1F 7C

(Seems to have something to do with the animations over characters' heads with certain statuses, e.g. Poison bubbles.)
C2/E3CA:	00 00
C2/E3CC:	00 00
C2/E3CE:	00 00
C2/E3D0:	02 00
C2/E3D2:	00 00
C2/E3D4:	10 00
C2/E3D6:	20 00
C2/E3D8:	00 00

(Some more status-related 32-bit data.)
C2/E3DA:	00 F8 20 0A
C2/E3DE:	00 F8 22 0A
C2/E3E2:	FF F8 24 08
C2/E3E6:	00 F8 26 0C
C2/E3EA:	F8 F8 28 08
C2/E3EE:	F0 F8 2A 08
C2/E3F2:	00 10 2C 0C
C2/E3F6:	00 FD 20 0A
C2/E3FA:	00 FD 22 0A
C2/E3FE:	FF FF 24 08
C2/E402:	00 FD 26 0C
C2/E406:	F8 FD 28 08
C2/E40A:	F0 FD 2A 08
C2/E40E:	00 10 2C 0C

(VRAM data for each party member.)
C2/E412:	00 80
C2/E414:	00 60
C2/E416:	00 40
C2/E418:	00 20

C2/E41A:	00 A0
C2/E41C:	80 A0
C2/E41E:	00 A1
C2/E420:	80 A1

(Assassin's document does an OK job documenting C2/E422-C2/E45D.)

C2/E45E:	08
C2/E45F:	0A
C2/E460:	0C
C2/E461:	0E

(Something related to Dance animations. Indexed by backgrounds.)
C2/E462:	00
C2/E463:	00
C2/E464:	00
C2/E465:	00
C2/E466:	00
C2/E467:	00
C2/E468:	00
C2/E469:	01
C2/E46A:	00
C2/E46B:	00
C2/E46C:	00
C2/E46D:	00
C2/E46E:	00
C2/E46F:	01
C2/E470:	00
C2/E471:	01
C2/E472:	00
C2/E473:	00
C2/E474:	00
C2/E475:	00
C2/E476:	00
C2/E477:	00
C2/E478:	00
C2/E479:	00
C2/E47A:	00
C2/E47B:	00
C2/E47C:	00
C2/E47D:	00
C2/E47E:	00
C2/E47F:	00
C2/E480:	00
C2/E481:	01
C2/E482:	01
C2/E483:	01
C2/E484:	00
C2/E485:	00
C2/E486:	00
C2/E487:	01
C2/E488:	00
C2/E489:	00
C2/E48A:	00
C2/E48B:	01
C2/E48C:	00
C2/E48D:	00
C2/E48E:	01
C2/E48F:	00
C2/E490:	00
C2/E491:	00
C2/E492:	00
C2/E493:	00
C2/E494:	01
C2/E495:	01
C2/E496:	01
C2/E497:	01
C2/E498:	01
C2/E499:	01

C2/E49A:	0B
C2/E49B:	0B
C2/E49C:	09
C2/E49D:	0B
C2/E49E:	0B
C2/E49F:	0B
C2/E4A0:	0B
C2/E4A1:	0B
C2/E4A2:	0B
C2/E4A3:	0B
C2/E4A4:	0B
C2/E4A5:	0B
C2/E4A6:	0B
C2/E4A7:	0B
C2/E4A8:	0B
C2/E4A9:	0B
C2/E4AA:	0B
C2/E4AB:	0B
C2/E4AC:	0B
C2/E4AD:	0B
C2/E4AE:	0B
C2/E4AF:	0B
C2/E4B0:	0B
C2/E4B1:	0B
C2/E4B2:	0B
C2/E4B3:	09
C2/E4B4:	09
C2/E4B5:	0B
C2/E4B6:	0B
C2/E4B7:	00
C2/E4B8:	0B
C2/E4B9:	0B
C2/E4BA:	0B
C2/E4BB:	0B
C2/E4BC:	0B
C2/E4BD:	0B
C2/E4BE:	0B
C2/E4BF:	0B
C2/E4C0:	0B
C2/E4C1:	0B
C2/E4C2:	0B

C2/E4C3:	00 3C
C2/E4C5:	00 38
C2/E4C7:	00 34
C2/E4C9:	00 30

C2/E4CB:	00 0C
C2/E4CD:	00 08
C2/E4CF:	00 04
C2/E4D1:	00 00

C2/E4D3:	3F C6
C2/E4D5:	3F BE
C2/E4D7:	3F B6
C2/E4D9:	3F AE

C2/E4DB:	00 DC
C2/E4DD:	00 D4
C2/E4DF:	00 CC
C2/E4E1:	00 C4

C2/E4E3:	7E
C2/E4E4:	7E
C2/E4E5:	7E
C2/E4E6:	7E
C2/E4E7:	7F
C2/E4E8:	7F
C2/E4E9:	7F
C2/E4EA:	7F

(Pointers.)
C2/E4EB:	3F E5
C2/E4ED:	46 E5
C2/E4EF:	52 E5
C2/E4F1:	5E E5
C2/E4F3:	6A E5
C2/E4F5:	76 E5
C2/E4F7:	82 E5
C2/E4F9:	C7 E5
C2/E4FB:	8E E5
C2/E4FD:	9A E5
C2/E4FF:	A6 E5
C2/E501:	B2 E5
C2/E503:	B8 E5
C2/E505:	3F E5
C2/E507:	39 E5
C2/E509:	3F E5
C2/E50B:	3F E5
C2/E50D:	3F E5

C2/E50F:	3F E5
C2/E511:	40 E5
C2/E513:	4C E5
C2/E515:	58 E5
C2/E517:	64 E5
C2/E519:	70 E5
C2/E51B:	7C E5
C2/E51D:	C1 E5
C2/E51F:	88 E5
C2/E521:	94 E5
C2/E523:	A0 E5
C2/E525:	AC E5
C2/E527:	3F E5
C2/E529:	3F E5
C2/E52B:	33 E5
C2/E52D:	CD E5
C2/E52F:	3F E5
C2/E531:	3F E5

C2/E533:	00 04 9A 15 01 FF
C2/E539:	00 03 8C 15 01 FF
C2/E53F:	FF
C2/E540:	00 04 B0 13 01 FF
C2/E546:	00 03 54 15 01 FF
C2/E54C:	00 04 CC 13 01 FF
C2/E552:	00 03 BE 13 01 FF
C2/E558:	00 04 E8 13 01 FF
C2/E55E:	00 03 DA 13 01 FF
C2/E564:	00 04 04 14 01 FF
C2/E56A:	00 03 F6 13 01 FF
C2/E570:	00 04 20 14 01 FF
C2/E576:	00 03 12 14 01 FF
C2/E57C:	00 04 3C 14 01 FF
C2/E582:	00 03 2E 14 01 FF
C2/E588:	00 04 58 14 01 FF
C2/E58E:	00 03 4A 14 01 FF
C2/E594:	00 04 74 14 01 FF
C2/E59A:	00 03 66 14 01 FF
C2/E5A0:	00 04 90 14 01 FF
C2/E5A6:	00 03 82 14 01 FF
C2/E5AC:	00 04 AC 14 01 FF
C2/E5B2:	00 03 9E 14 01 FF
C2/E5B8:	00 03 62 15 01 FF
C2/E5BE:	00 E0 FF
C2/E5C1:	00 04 B6 15 01 FF
C2/E5C7:	00 03 A8 15 01 FF
C2/E5CD:	00 04 C4 15 01 FF

C2/E5D3:	13 E6
C2/E5D5:	19 E6
C2/E5D7:	1F E6
C2/E5D9:	25 E6
C2/E5DB:	2B E6
C2/E5DD:	07 E6
C2/E5DF:	0D E6
C2/E5E1:	31 E6
C2/E5E3:	37 E6
C2/E5E5:	13 E6
C2/E5E7:	01 E6
C2/E5E9:	FB E5
C2/E5EB:	F5 E5
C2/E5ED:	EF E5

C2/E5EF:	00 04 0A 16 01 FF
C2/E5F5:	00 04 EE 15 01 FF
C2/E5FB:	00 04 E0 15 01 FF
C2/E601:	00 04 D2 15 01 FF
C2/E607:	00 05 46 15 01 FE
C2/E60D:	00 05 38 15 01 FE
C2/E613:	00 04 FC 0E 01 FF
C2/E619:	00 04 EE 0E 01 FF
C2/E61F:	00 04 E0 0E 01 FF
C2/E625:	00 04 F2 14 01 FF
C2/E62B:	00 04 E4 14 01 FF
C2/E631:	00 04 7E 15 01 FF
C2/E637:	00 04 70 15 01 FF

C2/E63D:	A0 02 00	LDY #$0002	(2)
C2/E640:	B1 76		LDA ($76),Y
C2/E642:	8D FC E9	STA $E9FC
C2/E645:	88		DEY
C2/E646:	B1 76		LDA ($76),Y
C2/E648:	C9 09		CMP #$09	(9)
C2/E64A:	D0 0D		BNE $E659	(+13)
C2/E64C:	C8		INY
C2/E64D:	B1 76		LDA ($76),Y
C2/E64F:	85 10		STA $10
C2/E651:	C8		INY
C2/E652:	B1 76		LDA ($76),Y
C2/E654:	22EB17C1	JSL $C117EB	(Why not JML?)
C2/E658:	6B		RTL

C2/E659:	C2 20		REP #$20		(16-bit A)
C2/E65B:	0A		ASL
C2/E65C:	AA		TAX
C2/E65D:	BFD3E5C2	LDA $C2E5D3,X
C2/E661:	85 8F		STA $8F
C2/E663:	7B		TDC
C2/E664:	E2 20		SEP #$20		(8-bit A)
C2/E666:	80 49		BRA $E6B1	(+73)
C2/E668:	20 54 EA	JSR $EA54
C2/E66B:	A0 01 00	LDY #$0001	(1)
C2/E66E:	B1 76		LDA ($76),Y
C2/E670:	C9 0D		CMP #$0D	(13)
C2/E672:	D0 06		BNE $E67A	(+6)
C2/E674:	20 06 E8	JSR $E806
C2/E677:	4C 8E E8	JMP $E88E

C2/E67A:	C9 11		CMP #$11	(17)
C2/E67C:	D0 13		BNE $E691	(+19)
C2/E67E:	20 06 E8	JSR $E806
C2/E681:	22D191C1	JSL $C191D1
C2/E685:	A9 FF		LDA #$FF	(-1)
C2/E687:	8D 91 61	STA $6191
C2/E68A:	AD 2F 2F	LDA $2F2F
C2/E68D:	8D 1E 20	STA $201E
C2/E690:	6B		RTL

C2/E691:	48		PHA
C2/E692:	20 06 E8	JSR $E806
C2/E695:	68		PLA
C2/E696:	C2 20		REP #$20		(16-bit A)
C2/E698:	0A		ASL
C2/E699:	AA		TAX
C2/E69A:	AD FB E9	LDA $E9FB
C2/E69D:	29 FF 00	AND #$00FF
C2/E6A0:	F0 06		BEQ $E6A8	(+6)
C2/E6A2:	BFEBE4C2	LDA $C2E4EB,X
C2/E6A6:	80 04		BRA $E6AC	(+4)
C2/E6A8:	BF0FE5C2	LDA $C2E50F,X
C2/E6AC:	85 8F		STA $8F
C2/E6AE:	7B		TDC
C2/E6AF:	E2 20		SEP #$20		(8-bit A)
C2/E6B1:	A9 C2		LDA #$C2	(-62)
C2/E6B3:	85 91		STA $91
C2/E6B5:	A7 8F		LDA [$8F]
C2/E6B7:	C9 FF		CMP #$FF	(-1)
C2/E6B9:	F0 10		BEQ $E6CB	(+16)
C2/E6BB:	C9 FE		CMP #$FE	(-2)
C2/E6BD:	F0 11		BEQ $E6D0	(+17)
C2/E6BF:	0A		ASL
C2/E6C0:	AA		TAX
C2/E6C1:	FC D7 E6	JSR ($E6D7,X)
C2/E6C4:	A4 8F		LDY $8F
C2/E6C6:	C8		INY
C2/E6C7:	84 8F		STY $8F
C2/E6C9:	80 EA		BRA $E6B5	(-22)
C2/E6CB:	A9 FF		LDA #$FF	(-1)
C2/E6CD:	8D 91 61	STA $6191
C2/E6D0:	AD 2F 2F	LDA $2F2F
C2/E6D3:	8D 1E 20	STA $201E
C2/E6D6:	6B		RTL

(Pointers.)
C2/E6D7:	FC E7
C2/E6D9:	01 E8
C2/E6DB:	A7 E7
C2/E6DD:	F4 E6
C2/E6DF:	33 E7
C2/E6E1:	72 E7

C2/E6E3:	A6 00		LDX $00
C2/E6E5:	4A		LSR
C2/E6E6:	B0 08		BCS $E6F0	(+8)
C2/E6E8:	E8		INX
C2/E6E9:	E0 08 00	CPX #$0008	(8)
C2/E6EC:	D0 F7		BNE $E6E5	(-9)
C2/E6EE:	7B		TDC
C2/E6EF:	60		RTS

C2/E6F0:	8A		TXA
C2/E6F1:	29 07		AND #$07
C2/E6F3:	60		RTS

C2/E6F4:	2221FEC1	JSL $C1FE21
C2/E6F8:	A0 01 00	LDY #$0001	(1)
C2/E6FB:	C2 20		REP #$20		(16-bit A)
C2/E6FD:	B7 8F		LDA [$8F],Y
C2/E6FF:	85 1E		STA $1E
C2/E701:	E6 8F		INC $8F
C2/E703:	E6 8F		INC $8F
C2/E705:	7B		TDC
C2/E706:	E2 20		SEP #$20
C2/E708:	AD FB E9	LDA $E9FB
C2/E70B:	20 E3 E6	JSR $E6E3
C2/E70E:	18		CLC
C2/E70F:	69 04		ADC #$04	(4)
C2/E711:	8D 6F 2C	STA $2C6F
C2/E714:	AD FB E9	LDA $E9FB
C2/E717:	8D 71 2C	STA $2C71
C2/E71A:	8D 73 2C	STA $2C73
C2/E71D:	8D 3E 61	STA $613E
C2/E720:	9C 3D 61	STZ $613D
C2/E723:	9C 70 2C	STZ $2C70
C2/E726:	9C 72 2C	STZ $2C72
C2/E729:	A9 C0		LDA #$C0	(-64)
C2/E72B:	8D 6E 2C	STA $2C6E
C2/E72E:	2280B8C1	JSL $C1B880
C2/E732:	60		RTS

C2/E733:	2221FEC1	JSL $C1FE21
C2/E737:	A0 01 00	LDY #$0001	(1)
C2/E73A:	C2 20		REP #$20		(16-bit A)
C2/E73C:	B7 8F		LDA [$8F],Y
C2/E73E:	85 1E		STA $1E
C2/E740:	E6 8F		INC $8F
C2/E742:	E6 8F		INC $8F
C2/E744:	7B		TDC
C2/E745:	E2 20		SEP #$20		(8-bit A)
C2/E747:	AD FC E9	LDA $E9FC
C2/E74A:	20 E3 E6	JSR $E6E3
C2/E74D:	18		CLC
C2/E74E:	69 04		ADC #$04	(4)
C2/E750:	8D 6F 2C	STA $2C6F
C2/E753:	AD FC E9	LDA $E9FC
C2/E756:	8D 71 2C	STA $2C71
C2/E759:	8D 73 2C	STA $2C73
C2/E75C:	8D 3E 61	STA $613E
C2/E75F:	9C 3D 61	STZ $613D
C2/E762:	9C 70 2C	STZ $2C70
C2/E765:	9C 72 2C	STZ $2C72
C2/E768:	A9 C0		LDA #$C0	(-64)
C2/E76A:	8D 6E 2C	STA $2C6E
C2/E76D:	2280B8C1	JSL $C1B880
C2/E771:	60		RTS

C2/E772:	2221FEC1	JSL $C1FE21
C2/E776:	A0 01 00	LDY #$0001	(1)
C2/E779:	C2 20		REP #$20		(16-bit A)
C2/E77B:	B7 8F		LDA [$8F],Y
C2/E77D:	85 1E		STA $1E
C2/E77F:	E6 8F		INC $8F
C2/E781:	E6 8F		INC $8F
C2/E783:	7B		TDC
C2/E784:	E2 20		SEP #$20		(8-bit A)
C2/E786:	9C 6F 2C	STZ $2C6F
C2/E789:	A9 0F		LDA #$0F	(15)
C2/E78B:	8D 70 2C	STA $2C70
C2/E78E:	8D 72 2C	STA $2C72
C2/E791:	8D 3D 61	STA $613D
C2/E794:	9C 3E 61	STZ $613E
C2/E797:	9C 71 2C	STZ $2C71
C2/E79A:	9C 73 2C	STZ $2C73
C2/E79D:	A9 00		LDA #$00	(0)	(Could've used TDC)
C2/E79F:	8D 6E 2C	STA $2C6E
C2/E7A2:	2280B8C1	JSL $C1B880
C2/E7A6:	60		RTS

C2/E7A7:	AD FB E9	LDA $E9FB
C2/E7AA:	8D 71 2C	STA $2C71
C2/E7AD:	8D 73 2C	STA $2C73
C2/E7B0:	8D 3E 61	STA $613E
C2/E7B3:	9C 3D 61	STZ $613D
C2/E7B6:	9C 70 2C	STZ $2C70
C2/E7B9:	9C 72 2C	STZ $2C72
C2/E7BC:	20 E3 E6	JSR $E6E3
C2/E7BF:	48		PHA
C2/E7C0:	18		CLC
C2/E7C1:	69 04		ADC #$04	(4)
C2/E7C3:	85 10		STA $10
C2/E7C5:	09 80		ORA #$80
C2/E7C7:	8D 6F 2C	STA $2C6F
C2/E7CA:	8D 3F 61	STA $613F
C2/E7CD:	A9 C0		LDA #$C0
C2/E7CF:	8D 6E 2C	STA $2C6E
C2/E7D2:	68		PLA
C2/E7D3:	C2 20		REP #$20		(16-bit A)
C2/E7D5:	0A (x7)	ASL x7
C2/E7DC:	AA		TAX
C2/E7DD:	A9 01 01	LDA #$0101
C2/E7E0:	85 22		STA $22
C2/E7E2:	E6 8F		INC $8F
C2/E7E4:	A7 8F		LDA [$8F]
C2/E7E6:	85 24		STA $24
C2/E7E8:	E6 8F		INC $8F
C2/E7EA:	7B		TDC
C2/E7EB:	E2 20		SEP #$20		(8-bit A)
C2/E7ED:	A5 10		LDA $10
C2/E7EF:	09 80		ORA #$80
C2/E7F1:	85 10		STA $10		(Could've used TSB...)
C2/E7F3:	A9 C2		LDA #$C2	(-62)
C2/E7F5:	85 26		STA $26
C2/E7F7:	22C0B1C1	JSL $C1B1C0
C2/E7FB:	60		RTS

C2/E7FC:	2243FFC1	JSL $C1FF43
C2/E800:	60		RTS

C2/E801:	2251FFC1	JSL $C1FF51
C2/E805:	60		RTS

C2/E806:	AD 1E 20	LDA $201E
C2/E809:	8D FA E9	STA $E9FA
C2/E80C:	A0 02 00	LDY #$0002	(2)
C2/E80F:	B1 76		LDA ($76),Y
C2/E811:	8D FB E9	STA $E9FB
C2/E814:	49 FF		EOR #$FF
C2/E816:	85 10		STA $10
C2/E818:	C8		INY
C2/E819:	B1 76		LDA ($76),Y
C2/E81B:	8D FC E9	STA $E9FC
C2/E81E:	AD 1E 20	LDA $201E
C2/E821:	25 10		AND $10
C2/E823:	0D FC E9	ORA $E9FC
C2/E826:	8D FD E9	STA $E9FD
C2/E829:	AD FB E9	LDA $E9FB
C2/E82C:	D0 1D		BNE $E84B	(+29)
C2/E82E:	AD FA E9	LDA $E9FA
C2/E831:	49 FF		EOR #$FF
C2/E833:	85 10		STA $10
C2/E835:	AD FC E9	LDA $E9FC
C2/E838:	25 10		AND $10
C2/E83A:	8D FC E9	STA $E9FC
C2/E83D:	49 FF		EOR #$FF
C2/E83F:	8D 91 61	STA $6191
C2/E842:	AD FD E9	LDA $E9FD
C2/E845:	8D 1E 20	STA $201E
C2/E848:	8D AB 61	STA $61AB
C2/E84B:	60		RTS

(Data of some sort.)
C2/E84C:	0C 0B
C2/E84E:	0A 09
C2/E850:	08 07
C2/E852:	06 07
C2/E854:	04 03
C2/E856:	02 02
C2/E858:	02 02
C2/E85A:	02 02
C2/E85C:	02 02
C2/E85E:	02 02
C2/E860:	02 02
C2/E862:	02 02
C2/E864:	02 02
C2/E866:	02 02
C2/E868:	02 02
C2/E86A:	02 02

C2/E86C:	02 02
C2/E86E:	02 02
C2/E870:	02 02
C2/E872:	02 02
C2/E874:	02 02
C2/E876:	02 02
C2/E878:	02 02
C2/E87A:	02 02
C2/E87C:	02 02
C2/E87E:	02 02
C2/E880:	02 02
C2/E882:	02 02
C2/E884:	03 04
C2/E886:	05 06
C2/E888:	07 08
C2/E88A:	09 0A
C2/E88C:	0B 0C

C2/E88E:	9C B3 EC	STZ $ECB3
C2/E891:	A9 FF		LDA #$FF	(-1)
C2/E893:	8D 91 61	STA $6191
C2/E896:	AD FA E9	LDA $E9FA
C2/E899:	8D 1E 20	STA $201E
C2/E89C:	AD B3 EC	LDA $ECB3
C2/E89F:	AA		TAX
C2/E8A0:	BF4CE8C2	LDA $C2E84C,X
C2/E8A4:	22B29BC1	JSL $C19BB2
C2/E8A8:	AD FC E9	LDA $E9FC
C2/E8AB:	8D 1E 20	STA $201E
C2/E8AE:	AD B3 EC	LDA $ECB3
C2/E8B1:	AA		TAX
C2/E8B2:	BF6CE8C2	LDA $C2E86C,X
C2/E8B6:	22B29BC1	JSL $C19BB2
C2/E8BA:	EE B3 EC	INC $ECB3
C2/E8BD:	AD B3 EC	LDA $ECB3
C2/E8C0:	C9 20		CMP #$20	(32)
C2/E8C2:	D0 D2		BNE $E896	(-46)
C2/E8C4:	A9 FF		LDA #$FF	(-1)
C2/E8C6:	8D 91 61	STA $6191
C2/E8C9:	AD 2F 2F	LDA $2F2F
C2/E8CC:	8D 1E 20	STA $201E
C2/E8CF:	6B		RTL

(C2/E8D0-C2/E8D7 is a function that is adequately documented in Assassin's C2 disassembly and C2/E8D8-C2/E9D5 are pointers to functions called by that function.)

C2/E9D6:	60		RTS			(Unnecessary...)

C2/E9D7:	EE AC 60	INC $60AC
C2/E9DA:	7B		TDC			(A = 0)
C2/E9DB:	AA		TAX			(X = 0)
C2/E9DC:	A8		TAY			(Y = 0)
C2/E9DD:	BD C6 2E	LDA $2EC6,X
C2/E9E0:	C9 0D		CMP #$0D	(13)
C2/E9E2:	F0 0C		BEQ $E9F0	(+12)
C2/E9E4:	C8		INY
C2/E9E5:	8A		TXA
C2/E9E6:	18		CLC
C2/E9E7:	69 20		ADC #$20	(32)
C2/E9E9:	AA		TAX
C2/E9EA:	E0 80 00	CPX #$0080	(128)
C2/E9ED:	D0 EE		BNE $E9DD	(-18)
C2/E9EF:	60		RTS

C2/E9F0:	84 10		STY $10
C2/E9F2:	98		TYA
C2/E9F3:	0A		ASL
C2/E9F4:	A8		TAY
C2/E9F5:	C2 20		REP #$20		(16-bit A)
C2/E9F7:	B9 33 80	LDA $8033,Y
C2/E9FA:	38		SEC
C2/E9FB:	E9 08 00	SBC #$0008	(8)
C2/E9FE:	85 14		STA $14
C2/EA00:	B9 3B 80	LDA $803B,Y
C2/EA03:	38		SEC
C2/EA04:	E9 08 00	SBC #$0008	(8)
C2/EA07:	85 16		STA $16
C2/EA09:	7B		TDC			(A = 0)
C2/EA0A:	E2 20		SEP #$20		(8-bit A)
C2/EA0C:	7B		TDC			(What?! What the hell do you need another one for?!)
C2/EA0D:	AA		TAX			(X = 0)
C2/EA0E:	BD 38 6A	LDA $6A38,X	(Caster's ID in battle sprite listing...)
C2/EA11:	9D 39 6A	STA $6A39,X	(...is now target's ID)
C2/EA14:	A5 10		LDA $10
C2/EA16:	9D 38 6A	STA $6A38,X
C2/EA19:	C2 20		REP #$20		(16-bit A)
C2/EA1B:	BD 7E 6F	LDA $6F7E,X
C2/EA1E:	9D 82 6F	STA $6F82,X	(Original X position of spell animation)
C2/EA21:	BD 80 6F	LDA $6F80,X
C2/EA24:	9D 84 6F	STA $6F84,X	(Original Y position of spell animation)
C2/EA27:	A5 14		LDA $14
C2/EA29:	9D 7E 6F	STA $6F7E,X
C2/EA2C:	A5 16		LDA $16
C2/EA2E:	9D 80 6F	STA $6F80,X
C2/EA31:	8A		TXA
C2/EA32:	18		CLC
C2/EA33:	69 80 00	ADC #$0080	(128)
C2/EA36:	AA		TAX
C2/EA37:	7B		TDC
C2/EA38:	E2 20		SEP #$20		(8-bit A)
C2/EA3A:	E0 00 05	CPX #$0500	(1,280)	(Loop 10 times)
C2/EA3D:	D0 CF		BNE $EA0E	(-49)
C2/EA3F:	EE EE E9	INC $E9EE
C2/EA42:	60		RTS

C2/EA43:	A9 05		LDA #$05	(5)
C2/EA45:	85 26		STA $26
C2/EA47:	A9 02		LDA #$02	(2)	(LSR?)
C2/EA49:	20 F8 F4	JSR $F4F8
C2/EA4C:	A9 03		LDA #$03	(3)
C2/EA4E:	20 E6 F6	JSR $F6E6
C2/EA51:	4C EB F9	JMP $F9EB

C2/EA54:	AF3F2100	LDA $00213F
C2/EA58:	AF372100	LDA $002137
C2/EA5C:	AF3D2100	LDA $00213D
C2/EA60:	C9 A0		CMP #$A0	(160)
C2/EA62:	90 F0		BCC $EA54	(-16)
C2/EA64:	60		RTS

C2/EA65:	20 CA F8	JSR $F8CA
C2/EA68:	AD 6F 89	LDA $896F
C2/EA6B:	09 08		ORA #$08
C2/EA6D:	8D 6F 89	STA $896F
C2/EA70:	60		RTS

C2/EA71:	20 54 EA	JSR $EA54
C2/EA74:	AD 8D 89	LDA $898D
C2/EA77:	29 FE		AND #$FE
C2/EA79:	8D 8D 89	STA $898D
C2/EA7C:	20 CA F8	JSR $F8CA
C2/EA7F:	AD 6F 89	LDA $896F
C2/EA82:	09 08		ORA #$08
C2/EA84:	8D 6F 89	STA $896F
C2/EA87:	60		RTS

C2/EA88:	20 E9 F3	JSR $F3E9
C2/EA8B:	A9 04		LDA #$04	(4)
C2/EA8D:	85 26		STA $26
C2/EA8F:	A9 07		LDA #$07	(7)
C2/EA91:	20 F8 F4	JSR $F4F8
C2/EA94:	A9 08		LDA #$08	(8)
C2/EA96:	20 E6 F6	JSR $F6E6
C2/EA99:	EE AD 60	INC $60AD
C2/EA9C:	60		RTS

(Pointers)
C2/EA9D:	82 01
C2/EA9F:	91 01
C2/EAA1:	87 01
C2/EAA3:	93 01
C2/EAA5:	84 01

C2/EAA7:	AD E7 E9	LDA $E9E7		(Animation sound effect)
C2/EAAA:	0A		ASL
C2/EAAB:	AA		TAX
C2/EAAC:	C2 20		REP #$20		(16-bit A)
C2/EAAE:	BF9DEAC2	LDA $C2EA9D,X
C2/EAB2:	AA		TAX
C2/EAB3:	7B		TDC			(A = 0)
C2/EAB4:	E2 20		SEP #$20		(8-bit A)
C2/EAB6:	225224C1	JSL $C12452
C2/EABA:	4C 70 FA	JMP $FA70

C2/EABD:	A9 03		LDA #$03	(3)
C2/EABF:	85 26		STA $26
C2/EAC1:	A9 03		LDA #$03	(3)	(This is needless)
C2/EAC3:	20 F8 F4	JSR $F4F8
C2/EAC6:	A9 04		LDA #$04	(4)
C2/EAC8:	4C E6 F6	JMP $F6E6

C2/EACB:	9C 67 7B	STZ $7B67
C2/EACE:	2286C3C1	JSL $C1C386
C2/EAD2:	222602C1	JSL $C10226
C2/EAD6:	227EB0C1	JSL $C1B07E
C2/EADA:	229E9AC1	JSL $C19A9E
C2/EADE:	48		PHA
C2/EADF:	AD 8D 89	LDA $898D
C2/EAE2:	48		PHA
C2/EAE3:	29 FE		AND #$FE
C2/EAE5:	8D 8D 89	STA $898D
C2/EAE8:	AD 6F 89	LDA $896F
C2/EAEB:	29 E7		AND #$E7
C2/EAED:	09 50		ORA #$50
C2/EAEF:	8D 6F 89	STA $896F
C2/EAF2:	22551EC1	JSL $C11E55
C2/EAF6:	68		PLA
C2/EAF7:	8D 8D 89	STA $898D
C2/EAFA:	68		PLA
C2/EAFB:	29 03		AND #$03
C2/EAFD:	0A (x5)	ASL x5
C2/EB02:	AA		TAX
C2/EB03:	7B		TDC			(A = 0)
C2/EB04:	A8		TAY			(Y = 0)
C2/EB05:	BD 80 7F	LDA $7F80,X
C2/EB08:	99 60 7E	STA $7E60,Y
C2/EB0B:	C8		INY
C2/EB0C:	E8		INX
C2/EB0D:	C0 20 00	CPY #$0020	(32)
C2/EB10:	D0 F3		BNE $EB05
C2/EB12:	AD 7D 62	LDA $627D
C2/EB15:	29 7F		AND #$7F
C2/EB17:	8D 7D 62	STA $627D
C2/EB1A:	4C 0F FA	JMP $FA0F

C2/EB1D:	20 4F FA	JSR $FA4F
C2/EB20:	A9 3C		LDA #$3C	(60)
C2/EB22:	8F232100	STA $002123
C2/EB26:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EB29:	4C 1B FA	JMP $FA1B

C2/EB2C:	20 C1 F5	JSR $F5C1
C2/EB2F:	9C AC 60	STZ $60AC
C2/EB32:	4C 99 F2	JMP $F299

C2/EB35:	20 2D F0	JSR $F02D
C2/EB38:	A2 3F BE	LDX #$BE3F	(-16,833)
C2/EB3B:	A0 00 08	LDY #$0800	(2,048)
C2/EB3E:	20 61 EC	JSR $EC61
C2/EB41:	A9 03		LDA #$03	(3)
C2/EB43:	85 26		STA $26
C2/EB45:	A9 02		LDA #$02	(2)	(DEC acceptable)
C2/EB47:	20 F8 F4	JSR $F4F8
C2/EB4A:	A9 03		LDA #$03	(3)
C2/EB4C:	4C E6 F6	JMP $F6E6

C2/EB4F:	20 2D F0	JSR $F02D
C2/EB52:	A2 8F 01	LDX #$018F	(399)
C2/EB55:	DA		PHX
C2/EB56:	220A24C1	JSL $C1240A
C2/EB5A:	20 70 FA	JSR $FA70
C2/EB5D:	22C69EC1	JSL $C19EC6
C2/EB61:	FA		PLX
C2/EB62:	228024C1	JSL $C12480
C2/EB66:	20 87 FA	JSR $FA87
C2/EB69:	A2 9C 01	LDX #$019C	(412)
C2/EB6C:	228024C1	JSL $C12480
C2/EB70:	20 87 FA	JSR $FA87
C2/EB73:	20 CA F1	JSR $F1CA
C2/EB76:	20 4F FA	JSR $FA4F
C2/EB79:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EB7C:	A9 CC		LDA #$CC	(-52)
C2/EB7E:	8F242100	STA $002124
C2/EB82:	A9 01		LDA #$01	(1)
C2/EB84:	4C E6 F6	JMP $F6E6

C2/EB87:	20 47 F8	JSR $F847
C2/EB8A:	7B		TDC			(A = 0)
C2/EB8B:	EE AC 60	INC $60AC
C2/EB8E:	4C 11 F0	JMP $F011

C2/EB91:	20 EB F9	JSR $F9EB
C2/EB94:	4C FE EE	JMP $EEFE

C2/EB97:	20 C1 F5	JSR $F5C1
C2/EB9A:	20 CA F8	JSR $F8CA
C2/EB9D:	9C AC 60	STZ $60AC
C2/EBA0:	22A1AAC1	JSL $C1AAA1
C2/EBA4:	A5 12		LDA $12
C2/EBA6:	20 13		BMI $EBBB	(+19)
C2/EBA8:	29 03		AND #$03
C2/EBAA:	0A (x5)	ASL x5
C2/EBAF:	AA		TAX
C2/EBB0:	BD C1 2E	LDA $2EC1,X
C2/EBB3:	10 06		BPL $EBBB	(+6)
C2/EBB5:	9C 2E 6F	STZ $6F2E
C2/EBB8:	9C 3E 6F	STZ $6F3E
C2/EBBB:	60		RTS

C2/EBBC:	20 0F F0	JSR $F00F
C2/EBBF:	4C CA F8	JMP $F8CA
C2/EBC2:	A2 9B 01	LDX #$019B	(411)
C2/EBC5:	228024C1	JSL $C12480
C2/EBC9:	7B		TDC			(A = 0)
C2/EBCA:	AA		TAX			(X = 0)
C2/EBCB:	BF0063ED	LDA $ED6300,X	(Battle/menu character sprite palette)
C2/EBCF:	9D 60 7F	STA $7F60,X
C2/EBD2:	9D 60 7D	STA $7D60,X
C2/EBD5:	E8		INX
C2/EBD6:	E0 20 00	CPX #$0020	(32)
C2/EBD9:	D0 F0		BNE $EBCB	(-16)
C2/EBDB:	20 8B F9	JSR $F98B
C2/EBDE:	4C 09 F8	JMP $F809

C2/EBE1:	A2 94 01	LDX #$0194	(404)
C2/EBE4:	225224C1	JSL $C12452
C2/EBE8:	20 70 FA	JSR $FA70
C2/EBEB:	4C EF F7	JMP $F7EF
C2/EBEE:	A2 8A 01	LDX #$018A	(394)
C2/EBF1:	228024C1	JSL $C12480
C2/EBF5:	20 87 FA	JSR $FA87
C2/EBF8:	20 C7 F9	JSR $F9C7
C2/EBFB:	4C 09 F8	JMP $F809

C2/EBFE:	20 2D F0	JSR $F02D
C2/EC01:	A2 8C 01	LDX #$018C	(396)
C2/EC04:	DA		PHX
C2/EC05:	220024C1	JSL $C12400
C2/EC09:	20 70 FA	JSR $FA70
C2/EC0C:	22C69EC1	JSL $C19EC6
C2/EC10:	FA		PLX
C2/EC11:	228024C1	JSL $C12480
C2/EC15:	20 87 FA	JSR $FA87
C2/EC18:	EE B0 62	INC $62B0
C2/EC1B:	60		RTS

C2/EC1C:	A2 90 01	LDA #$0190	(400)
C2/EC1F:	225224C1	JSL $C12452
C2/EC23:	20 70 FA	JSR $FA70
C2/EC26:	4C 09 F8	JMP $F809

C2/EC29:	A2 96 01	LDX #$0196	(406)
C2/EC2C:	225224C1	JSL $C12452
C2/EC30:	20 70 FA	JSR $FA70
C2/EC33:	4C 90 F5	JMP $F590

C2/EC36:	A2 88 01	LDX #$0188	(392)
C2/EC39:	225224C1	JSL $C12452
C2/EC3D:	20 70 FA	JSR $FA70
C2/EC40:	4C 3E F6	JMP $F63E

C2/EC43:	A9 08		LDA #$08	(8)
C2/EC45:	20 11 F0	JSR $F011
C2/EC48:	4C D3 F9	JMP $F9D3

C2/EC4B:	20 CA F8	JSR $F8CA
C2/EC4E:	EE AC 60	INC $60AC
C2/EC51:	60		RTS

C2/EC52:	20 4F FA	JSR $FA4F
C2/EC55:	A9 06		LDA #$06	(6)
C2/EC57:	8D 1B 96	STA $961B		(Set clip plane to a wide oval)
C2/EC5A:	A9 CC		LDA #$CC	(-52)
C2/EC5C:	8F242100	STA $002124
C2/EC60:	60		RTS

C2/EC61:	DA		PHX
C2/EC62:	5A		PHY
C2/EC63:	A9 D8		LDA #$D8	(-40)
C2/EC65:	85 F5		STA $F5
C2/EC67:	A2 00 D0	LDX #$D000	(-12,288)
C2/EC6A:	86 F3		STX $F3
C2/EC6C:	A9 7E		LDA #$7E	(126)
C2/EC6E:	85 F8		STA $F8
C2/EC70:	A2 3F AE	LDX #$AE3F	(-20,929)
C2/EC73:	86 F6		STZ $F6
C2/EC75:	226DFFC2	JSL $C2FF6D
C2/EC79:	7A		PLY
C2/EC7A:	FA		PLX
C2/EC7B:	5A		PHY
C2/EC7C:	9C F0 E9	STZ $E9F0
C2/EC7F:	CE F0 E9	DEC $E9F0
C2/EC82:	AD 8D 89	LDA $898D
C2/EC85:	29 12		AND #$12
C2/EC87:	8D 8D 89	STA $898D
C2/EC8A:	A9 3F		LDA #$3F	(63)
C2/EC8C:	85 14		STA $14
C2/EC8E:	A9 7E		LDA #$7E	(126)	(ASL acceptable)
C2/EC90:	2227C0C2	JSL $C2C027
C2/EC94:	DA		PHX
C2/EC95:	5A		PHY
C2/EC96:	A9 D8		LDA #$D8
C2/EC98:	85 F5		STA $F5
C2/EC9A:	A2 F2 DA	LDX #$DAF2
C2/EC9D:	86 F3		STA $F3
C2/EC9F:	A9 7E		LDA #$7E
C2/ECA1:	85 F8		STA $F8
C2/ECA3:	A2 3F AE	LDA #$AE3F
C2/ECA6:	86 F6		STA $F6
C2/ECA8:	226DFFC2	JSL $C2FF6D
C2/ECAC:	7A		PLY
C2/ECAD:	FA FA		PLX x2
C2/ECAF:	8B		PHB
C2/ECB0:	A9 7F		LDA #$7F
C2/ECB2:	48		PHA
C2/ECB3:	AB		PLB			(Data bank register now points to bank $7F)
C2/ECB4:	A0 00 C4	LDY #$C400
C2/ECB7:	84 10		STY $10
C2/ECB9:	A9 20		LDA #$20
C2/ECBB:	85 12		STA $12
C2/ECBD:	7B		TDC			(A = 0)
C2/ECBE:	A8		TAY			(Y = 0)
C2/ECBF:	BF3FAE7E	LDA $7EAE3F,X
C2/ECC3:	91 10		STA ($10),Y
C2/ECC5:	E8		INX
C2/ECC6:	C8 C8		INY x2
C2/ECC8:	C0 40 00	CPY #$0040	(64)
C2/ECCB:	D0 F2		BNE $ECBF	(-14)
C2/ECCD:	C2 20		REP #$20		(16-bit A)
C2/ECCF:	A5 10		LDA $10
C2/ECD1:	18		CLC
C2/ECD2:	69 00 01	ADC #$0100	(256)
C2/ECD5:	85 10		STA $10
C2/ECD7:	7B		TDC
C2/ECD8:	E2 20		SEP #$20		(8-bit A)
C2/ECDA:	C6 12		DEC $12
C2/ECDC:	D0 DF		BNE $ECBD	(-33)
C2/ECDE:	AB		PLB
C2/ECDF:	A2 00 20	LDX #$2000
C2/ECE2:	86 10		STA $10
C2/ECE4:	A2 00 C4	LDX #$C400
C2/ECE7:	A0 00 00	LDY #$0000
C2/ECEA:	A9 7F		LDA #$7F
C2/ECEC:	228919C1	JSL $C11989
C2/ECF0:	EE EE E9	INC $E9EE
C2/ECF3:	4C 09 F8	JMP $F809

C2/ECF6:	20 2D F0	JSR $F02D
C2/ECF9:	A2 3F B6	LDX #$B63F
C2/ECFC:	A0 00 00	LDY #$0000
C2/ECFF:	20 61 EC	JSR $EC61
C2/ED02:	C2 20		REP #$20		(16-bit A)
C2/ED04:	7B		TDC			(A = 0)
C2/ED05:	AA		TAX			(X = 0)
C2/ED06:	7B		TDC			(A = 0 already, but this is needed later)
C2/ED07:	A8		TAY			(Y = 0)
C2/ED08:	B9 4E 6F	LDA $6F4E,Y
C2/ED0B:	9D 2E 6A	STA $6A2E,X
C2/ED0E:	9D 3E 6A	STA $6A3E,X
C2/ED11:	B9 9E 74	LDA $749E,Y
C2/ED14:	9D 7E 6F	STA $6F7E,X
C2/ED17:	9D 8E 6F	STA $6F8E,X
C2/ED1A:	B9 EE 79	LDA $79EE,Y
C2/ED1D:	9D CE 74	STA $74CE,X	(Animation X-offset)
C2/ED20:	9D DE 74	STA $74DE,X
C2/ED23:	E8 E8		INX x2
C2/ED25:	C8 C8		INY x2
C2/ED27:	C0 10 00	CPY #$0010
C2/ED2A:	D0 DC		BNE $ED08	(-36)
C2/ED2C:	8A		TXA
C2/ED2D:	18		CLC
C2/ED2E:	69 70 00	ADC #$0070
C2/ED31:	AA		TAX
C2/ED32:	E0 00 03	CPX #$0300
C2/ED35:	D0 CF		BNE $ED06	(-49)
C2/ED37:	7B		TDC
C2/ED38:	E2 20		SEP #$20		(8-bit A)
C2/ED3A:	7B		TDC			(Inexcusable this time)
C2/ED3B:	AA		TAX			(X = 0)
C2/ED3C:	64 10		STZ $10
C2/ED3E:	A5 10		LDA $10
C2/ED40:	18		CLC
C2/ED41:	69 06		ADC #$06	(6)
C2/ED43:	9D 35 6A	STA $6A35,X
C2/ED46:	18		CLC
C2/ED47:	69 06		ADC #$06	(6)
C2/ED49:	9D 45 6A	STA $6A45,X
C2/ED4C:	85 10		STA $10
C2/ED4E:	FE 36 6A	INC $6A36,X
C2/ED51:	C2 20		REP #$20		(16-bit A)
C2/ED53:	8A		TXA
C2/ED54:	18		CLC
C2/ED55:	69 80 00	ADC #$0080
C2/ED58:	AA		TAX
C2/ED59:	7B		TDC
C2/ED5A:	E2 20		SEP #$20		(8-bit A)
C2/ED5C:	E0 00 03	CPX #$0300
C2/ED5F:	D0 DD		BNE $ED3E	(-35)
C2/ED61:	60		RTS

C2/ED62:	20 2D F0	JSR $F02D
C2/ED65:	A2 3F AE	LDX #$AE3F
C2/ED68:	A0 00 04	LDY #$0400
C2/ED6B:	4C 61 EC	JMP $EC61

C2/ED6E:	2286C3C1	JSL $C1C386
C2/ED72:	9C 67 7B	STZ $7B67
C2/ED75:	222602C1	JSL $C10226
C2/ED79:	22F1C3C1	JSL $C1C3F1
C2/ED7D:	AD 6F 89	LDA $896F
C2/ED80:	29 EF		AND #$EF		(TRB would've worked...)
C2/ED82:	8D 6F 89	STA $896F
C2/ED85:	229E9AC1	JSL $C19A9E
C2/ED89:	A5 10		LDA $10
C2/ED8B:	4C 22 F3	JMP $F322

C2/ED8E:	20 67 F9	JSR $F967
C2/ED91:	20 4F FA	JSR $FA4F
C2/ED94:	A9 3C		LDA #$3C
C2/ED96:	8F232100	STA $002123
C2/ED9A:	A9 CC		LDA #$CC
C2/ED9C:	8F244100	STA $002124
C2/EDA0:	4C 09 F8	JMP $F809

C2/EDA3:	20 4F FA	JSR $FA4F
C2/EDA6:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EDA9:	4C 09 F8	JMP $F809

C2/EDAC:	7B		TDC			(A = 0)
C2/EDAD:	AA		TAX			(X = 0)
C2/EDAE:	A9 08		LDA #$08
C2/EDB0:	85 10		STA $10
C2/EDB2:	BF11C47F	LDA $7FC411,X
C2/EDB6:	29 E3		AND #$E3		(Clear bits 2-4)
C2/EDB8:	09 10		ORA #$10		(Set bit 4)
C2/EDBA:	9F11C47F	STA $7FC411,X
C2/EDBE:	BFA1C47F	LDA $7FC4A1,X
C2/EDC2:	29 E3		AND #$E3
C2/EDC4:	09 10		ORA #$10
C2/EDC6:	9FA1C47F	STA $7FC4A1,X
C2/EDCA:	E8 E8		INX x2
C2/EDCC:	C6 10		DEC $10
C2/EDCE:	D0 E2		BNE $EDB2	(-30)
C2/EDD0:	C2 20		REP #$20		(16-bit A)
C2/EDD2:	8A		TXA
C2/EDD3:	18		CLC
C2/EDD4:	69 10 00	ADC #$0010
C2/EDD7:	AA		TAX
C2/EDD8:	7B		TDC
C2/EDD9:	E2 20		SEP #$20		(8-bit A)
C2/EDDB:	E0 A0 00	CPX #$00A0
C2/EDDE:	D0 CE		BNE $EDAE	(-50)
C2/EDE0:	20 CA F1	JSR $F1CA
C2/EDE3:	A9 08		LDA #$08
C2/EDE5:	8D 55 6F	STA $6F55
C2/EDE8:	A9 10		LDA #$10		(ASL acceptable)
C2/EDEA:	8D 65 6F	STA $6F65
C2/EDED:	A9 18		LDA #$18
C2/EDEF:	8D 75 6F	STA $6F75
C2/EDF2:	4C C7 F9	JMP $F9C7

C2/EDF5:	20 1B FA	JSR $FA1B
C2/EDF8:	A9 04		LDA #$04
C2/EDFA:	4C DA F6	JMP $F6DA

C2/EDFD:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EE00:	20 4F FA	JSR $FA4F
C2/EE03:	A9 CC		LDA #$CC
C2/EE05:	8F242100	STA $002124
C2/EE09:	4C C7 F9	JMP $F9C7

C2/EE0C:	20 4F FA	JSR $FA4F
C2/EE0F:	A9 3C		LDA #$3C
C2/EE11:	8F232100	STA $002123
C2/EE15:	A2 20 01	LDX #$0120
C2/EE18:	20 78 F1	JSR $F178
C2/EE1B:	20 CA F1	JSR $F1CA
C2/EE1E:	A9 08		LDA #$08
C2/EE20:	8D 55 6F	STA $6F55
C2/EE23:	A9 10		LDA #$10		(ASL acceptable)
C2/EE25:	8D 65 6F	STA $6F65
C2/EE28:	A9 18		LDA #$18
C2/EE2A:	8D 75 6F	STA $6F75
C2/EE2D:	4C 1B FA	JMP $FA1B

(This function appears to make your party members face the same direction when one group of enemies are left in a pincer attack.)
C2/EE30:	20 98 F0	JSR $F098
C2/EE33:	AD 1F 20	LDA $201F		(Encounter type)
C2/EE36:	C9 02		CMP #$02		(Pincer attack?)
C2/EE38:	D0 2E		BNE $EE68	(+46)	(Branch if not)
C2/EE3A:	AD 1E 20	LDA $201E		(Drawn enemies)
C2/EE3D:	2D AB 61	AND $61AB		(Visible enemies)
C2/EE40:	2D AC 2E	AND $2EAC		(Something to do with right side or left side because Pincer attack means enemies on both)
C2/EE43:	F0 03		BEQ $EE48	(+3)	(If any bits left...)
C2/EE45:	7B		TDC			(...animation faces left)
C2/EE46:	80 02		BRA $EE4A	(+2)	(Otherwise...)
C2/EE48:	A9 01		LDA #$01		(...animation faces right)
C2/EE4A:	8D 87 6F	STA $6F87		(Animation direction)
C2/EE4D:	8D 07 70	STA $7007		(Set for entire party)
C2/EE50:	8D 87 70	STA $7087
C2/EE53:	8D 07 71	STA $7107
C2/EE56:	6A 6A 6A	ROR x3
C2/EE59:	29 40		AND #$40		(Bit 6, originally bit 1)
C2/EE5B:	8D BE 61	STA $61BE		(Character face direction)
C2/EE5E:	8D DE 61	STA $61DE		(Set for entire party)
C2/EE61:	8D FE 61	STA $61FE
C2/EE64:	8D 1E 62	STA $621E
C2/EE67:	60		RTS

(This function makes the attack animations for party members 3 and 4 face right in a side attack.)
C2/EE68:	AD 1F 20	LDA $201F		(Encounter type)
C2/EE6B:	C9 03		CMP #$03		(Side attack?)
C2/EE6D:	D0 06		BNE $EE75	(+6)	(Exit if not)
C2/EE6F:	EE 87 70	INC $7087		(Party member 3's attacks face right)
C2/EE72:	EE 07 71	INC $7107		(Same for member 4)
C2/EE75:	60		RTS

C2/EE76:	20 CA F1	JSR $F1CA
C2/EE79:	A9 03		LDA #$03
C2/EE7B:	20 E6 F6	JSR $F6E6
C2/EE7E:	20 4F FA	JSR $FA4F
C2/EE81:	A9 3C		LDA #$3C
C2/EE83:	8F232100	STA $002123
C2/EE87:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EE8A:	4C 1B FA	JMP $FA1B

C2/EE8D:	20 C7 F7	JSR $F7C7
C2/EE90:	20 1B FA	JSR $FA1B
C2/EE93:	A9 08		LDA #$08
C2/EE95:	8D 1B 96	STA $961B		(Set clip plane to wavy out)
C2/EE98:	60		RTS

C2/EE99:	20 CA F8	JSR $F8CA
C2/EE9C:	AD 6F 89	LDA $896F
C2/EE9F:	09 08		ORA #$08		(TSB would've worked...)
C2/EEA1:	8D 6F 89	STA $896F
C2/EEA4:	4C 33 FA	JMP $FA33

C2/EEA7:	A9 10		LDA #$10
C2/EEA9:	4C 11 F0	JMP $F011

C2/EEAC:	A9 07		LDA #$07
C2/EEAE:	85 26		STA $26
C2/EEB0:	A9 02		LDA #$02
C2/EEB2:	20 F8 F4	JSR $F4F8
C2/EEB5:	A9 03		LDA #$03		(INC acceptable)
C2/EEB7:	20 E6 F6	JSR $F6E6
C2/EEBA:	4C 1B FA	JMP $FA1B

C2/EEBD:	20 CA F8	JSR $F8CA
C2/EEC0:	20 4F FA	JSR $FA4F
C2/EEC3:	A9 CC		LDA #$CC
C2/EEC5:	8F242100	STA $002124
C2/EEC9:	A9 03		LDA #$03
C2/EECB:	8D 1B 96	STA $961B		(Set clip plane to a pillar)
C2/EECE:	AD 6F 89	LDA $896F
C2/EED1:	09 08		ORA #$08		(TSB would've worked...)
C2/EED3:	8D 6F 89	STA $896F
C2/EED6:	A9 02		LDA #$02
C2/EED8:	20 FE EE	JSR $EEFE		(Why not JSR $EEFC?)
C2/EEDB:	4C 33 FA	JMP $FA33

C2/EEDE:	20 73 F9	JSR $F973
C2/EEE1:	20 4F FA	JSR $FA4F
C2/EEE4:	A9 CC		LDA #$CC
C2/EEE6:	8F242100	STA $002124
C2/EEEA:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/EEED:	AD 6F 89	LDA $896F
C2/EEF0:	29 EF		AND #$EF		(TRB would've worked...)
C2/EEF2:	8D 6F 89	STA $896F
C2/EEF5:	60		RTS

C2/EEF6:	20 D3 F9	JSR $F9D3
C2/EEF9:	EE AC 60	INC $60AC
C2/EEFC:	A9 02		LDA #$02
C2/EEFE:	85 26		STA $26
C2/EF00:	A9 05		LDA #$05
C2/EF02:	20 F8 F4	JSR $F4F8
C2/EF05:	A9 06		LDA #$06		(INC acceptable)
C2/EF07:	4C E6 F6	JMP $F6E6

C2/EF0A:	20 1B FA	JSR $FA1B
C2/EF0D:	20 4F FA	JSR $FA4F
C2/EF10:	A9 3C		LDA #$3C
C2/EF12:	8F232100	STA $002123
C2/EF16:	A9 01		LDA #$01
C2/EF18:	8D 1B 96	STA $961B		(Set clip plane to a circle)
C2/EF1B:	60		RTS

C2/EF1C:	4C C7 F9	JMP $F9C7		(Sigh...)

C2/EF1F:	20 8B F9	JSR $F98B
C2/EF22:	7B		TDC
C2/EF23:	AA		TAX
C2/EF24:	BF01C47F	LDA $7FC401,X
C2/EF28:	29 DF		AND #$DF
C2/EF2A:	9F01C47F	STA $7FC401,X
C2/EF2E:	E8 E8		INX x2
C2/EF30:	E0 40 00	CPX #$0040
C2/EF33:	D0 EF		BNE $EF24	(-17)
C2/EF35:	2286C3C1	JSL $C1C386
C2/EF39:	20 4F FA	JSR $FA4F
C2/EF3C:	A9 3C		LDA #$3C
C2/EF3E:	8F232100	STA $002123
C2/EF42:	A9 06		LDA #$06
C2/EF44:	8D 1B 96	STA $961B		(Set clip plane to a wide oval)
C2/EF47:	60		RTS

C2/EF48:	4C EB F9	JMP $F9EB

C2/EF4B:	EE 99 00	INC $0099		(Not INC $99?)
C2/EF4E:	EE AD 60	INC $60AD
C2/EF51:	20 C7 F9	JSR $F9C7
C2/EF54:	A9 08		LDA #$08
C2/EF56:	4C 5B EF	JMP $EF5B		(BRA would've worked...)

C2/EF59:	A9 10		LDA #$10
C2/EF5B:	85 26		STA $26
C2/EF5D:	A9 02		LDA #$02
C2/EF5F:	20 F8 F4	JSR $F4F8
C2/EF62:	A9 03		LDA #$03
C2/EF64:	4C E6 F6	JMP $F6E6

C2/EF67:	20 63 F7	JSR $F763
C2/EF6A:	A9 06		LDA #$06
C2/EF6C:	85 26		STA $26
C2/EF6E:	A9 07		LDA #$07		(INC acceptable)
C2/EF70:	20 F8 F4	JSR $F4F8
C2/EF73:	A9 08		LDA #$08
C2/EF75:	20 E6 F6	JSR $F6E6
C2/EF78:	4C 27 FA	JMP $FA27

C2/EF7B:	20 D2 EF	JSR $EFD2
C2/EF7E:	229E9AC1	JSL $C19A9E
C2/EF82:	7B		TDC			(A = 0)
C2/EF83:	AA		TAX			(X = 0)
C2/EF84:	A5 10		LDA $10
C2/EF86:	0A 0A		ASL x2
C2/EF88:	85 12		STA $12
C2/EF8A:	BF00C47F	LDA $7FC400,X
C2/EF8E:	C9 EE		CMP #$EE
C2/EF90:	F0 1F		BEQ $EFB1	(+31)
C2/EF92:	18		CLC
C2/EF93:	65 12		ADC $12
C2/EF95:	9F00C47F	STA $7FC400,X
C2/EF99:	9F00C67F	STA $7FC600,X
C2/EF9D:	BF01C47F	LDA $7FC401,X
C2/EFA1:	09 02		ORA #$02
C2/EFA3:	9F01C47F	STA $7FC401,X
C2/EFA7:	BF01C67F	LDA $7FC601,X
C2/EFAB:	09 02		ORA #$02
C2/EFAD:	9F01C67F	STA $7FC601,X
C2/EFB1:	E8 E8		INX x2
C2/EFB3:	E0 40 00	CPX #$0040
C2/EFB6:	D0 D2		BNE $EF8A	(-46)
C2/EFB8:	A5 10		LDA $10
C2/EFBA:	0A (x5)	ASL x5
C2/EFBF:	AA		TAX
C2/EFC0:	7B		TDC			(A = 0)
C2/EFC1:	A8		TAY			(Y = 0)
C2/EFC2:	BD 80 7F	LDA $7F80,X	(Copy from RAM palette...)
C2/EFC5:	99 60 7E	STA $7E60,Y	(...to RAM palette 3)
C2/EFC8:	E8		INX
C2/EFC9:	C8		INY
C2/EFCA:	C0 20 00	CPY #$0020
C2/EFCD:	D0 F3		BNE $EFC2	(-13)
C2/EFCF:	4C D3 F9	JMP $F9D3

C2/EFD2:	20 EB F9	JSR $F9EB
C2/EFD5:	A9 01		LDA #$01
C2/EFD7:	85 26		STA $26
C2/EFD9:	A9 07		LDA #$07
C2/EFDB:	20 F8 F4	JSR $F4F8
C2/EFDE:	A9 08		LDA #$08		(INC acceptable)
C2/EFE0:	4C E6 F6	JMP $F6E6

C2/EFE3:	20 8B F9	JSR $F98B
C2/EFE6:	7B		TDC			(A = 0)
C2/EFE7:	AA		TAX			(X = 0)
C2/EFE8:	BF01C47F	LDA $7FC401,X
C2/EFEC:	29 DF		AND #$DF
C2/EFEE:	9F01C47F	STA $7FC401,X
C2/EFF2:	E8 E8		INX x2
C2/EFF4:	E0 20 00	CPX #$0020
C2/EFF7:	D0 EF		BNE $EFE8	(-17)
C2/EFF9:	2286C3C1	JSL $C1C386
C2/EFFD:	60		RTS

C2/EFFE:	A9 10		LDA #$10
C2/F000:	20 6F F6	JSR $F66F
C2/F003:	2286C3C1	JSL $C1C386
C2/F007:	A2 60 00	LDX #$0060
C2/F00A:	22A7C3C1	JSL $C1C3A7
C2/F00E:	60		RTS

C2/F00F:	A9 03		LDA #$03
C2/F011:	85 26		STA $26
C2/F013:	A9 03		LDA #$03		(NOT unnecessary!)
C2/F015:	20 F8 F4	JSR $F4F8
C2/F018:	A9 04		LDA #$04		(INC acceptable)
C2/F01A:	20 E6 F6	JSR $F6E6
C2/F01D:	4C EB F9	JMP $F9EB

C2/F020:	A2 98 01	LDX #$0198
C2/F023:	225224C1	JSL $C12452
C2/F027:	20 70 FA	JSR $FA70
C2/F02A:	4C 09 F8	JMP $F809

C2/F02D:	8B		PHB
C2/F02E:	A9 7F		LDA #$7F
C2/F030:	48		PHA
C2/F031:	AB		PLB			(Data bank register now points to bank $7F)
C2/F032:	7B		TDC			(A = 0)
C2/F033:	AA		TAX			(X = 0)
C2/F034:	C2 20		REP #$20		(16-bit A)
C2/F036:	A9 3F 00	LDA #$003F
C2/F039:	9D 00 C4	STA $C400,X
C2/F03C:	9D 00 CC	STA $CC00,X
C2/F03F:	9D 00 D4	STA $D400,X
C2/F042:	9D 00 DC	STA $DC00,X
C2/F045:	E8 E8		INX x2
C2/F047:	E0 00 08	CPX #$0800
C2/F04A:	D0 ED		BNE $F039	(-19)
C2/F04C:	7B		TDC			(Don't really think this is necessary, it's used to clear the high byte before switching to 8-bit A, but it's already clear)
C2/F04D:	E2 20		SEP #$20		(8-bit A)
C2/F04F:	AB		PLB
C2/F050:	AD 8D 89	LDA $898D
C2/F053:	29 FE		AND #$FE		(TRB would've worked...)
C2/F055:	8D 8D 89	STA $898D
C2/F058:	A2 00 01	LDX #$0100
C2/F05B:	8E C4 E9	STX $E9C4
C2/F05E:	8E CA E9	STX $E9CA
C2/F061:	7B		TDC			(A = 0)
C2/F062:	AA		TAX			(X = 0)
C2/F063:	8E C6 E9	STX $E9C6
C2/F066:	8E C8 E9	STX $E9C8
C2/F069:	8E CC E9	STX $E9CC
C2/F06C:	8E CE E9	STX $E9CE
C2/F06F:	60		RTS

C2/F070:	20 2D F0	JSR $F02D
C2/F073:	A2 8B 01	LDX #$018B
C2/F076:	DA		PHX
C2/F077:	220024C1	JSL $C12400
C2/F07B:	20 70 FA	JSR $FA70
C2/F07E:	22C69EC1	JSL $C19EC6
C2/F082:	FA		PLX
C2/F083:	228024C1	JSL $C12480
C2/F087:	20 87 FA	JSR $FA87
C2/F08A:	EE B0 62	INC $62B0
C2/F08D:	60		RTS

C2/F08E:	A2 89 01	LDX #$0189
C2/F091:	225224C1	JSL $C12452
C2/F095:	20 70 FA	JSR $FA70
C2/F098:	7B		TDC			(A = 0)
C2/F099:	A8		TAY			(Y = 0)
C2/F09A:	AA		TAX			(X = 0)
C2/F09B:	BD 39 6A	LDA $6A39,X	(Caster ID = target ID)
C2/F09E:	9D 38 6A	STA $6A38,X
C2/F0A1:	C2 20		REP #$20		(16-bit A)
C2/F0A3:	BD 82 6F	LDA $6F82,X	(Animation X-origin)
C2/F0A6:	9D 7E 6F	STA $6F7E,X
C2/F0A9:	BD 84 6F	LDA $6F84,X	(Animation Y-origin)
C2/F0AC:	9D 80 6F	STA $6F80,X
C2/F0AF:	8A		TXA
C2/F0B0:	18		CLC
C2/F0B1:	69 80 00	ADC #$0080
C2/F0B4:	AA		TAX
C2/F0B5:	7B		TDC
C2/F0B6:	E2 20		SEP #$20
C2/F0B8:	C8		INY
C2/F0B9:	E0 00 02	CPX #$0200
C2/F0BC:	D0 DD		BNE $F09B	(-35)
C2/F0BE:	4C 09 F8	JMP $F809

C2/F0C1:	A2 86 01	LDX #$0186
C2/F0C4:	228024C1	JSL $C12480
C2/F0C8:	20 87 FA	JSR $FA87
C2/F0CB:	20 1B FA	JSR $FA1B
C2/F0CE:	20 4F FA	JSR $FA4F
C2/F0D1:	A9 CC		LDA #$CC
C2/F0D3:	8F242100	STA $002124
C2/F0D7:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F0DA:	4C 09 F8	JMP $F809

C2/F0DD:	A9 02		LDA #$02
C2/F0DF:	20 6F F6	JSR $F66F
C2/F0E2:	A2 8D 01	LDX #$018D
C2/F0E5:	225224C1	JSL $C12452
C2/F0E9:	20 70 FA	JSR $FA70
C2/F0EC:	20 4F FA	JSR $FA4F		(Well, this part doesn't seem familiar at all...)
C2/F0EF:	A9 CC		LDA #$CC
C2/F0F1:	8F242100	STA $002124
C2/F0F5:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F0F8:	60		RTS

C2/F0F9:	A2 99 01	LDX #$0199
C2/F0FC:	228024C1	JSL $C12480
C2/F100:	20 87 FA	JSR $FA87
C2/F103:	20 1B FA	JSR $FA1B
C2/F106:	4C 09 F8	JMP $F809

C2/F109:	A2 95 01	LDX #$0195
C2/F10C:	225224C1	JSL $C12452
C2/F110:	20 70 FA	JSR $FA70
C2/F113:	20 3E F6	JSR $F63E
C2/F116:	4C 33 FA	JMP $FA33

C2/F119:	A2 9A 01	LDX #$019A
C2/F11C:	228024C1	JSL $C12480
C2/F120:	20 87 FA	JSR $FA87
C2/F123:	20 A3 F9	JSR $F9A3
C2/F126:	4C 09 F8	JMP $F809

C2/F129:	A2 97 01	LDX #$0197
C2/F12C:	228024C1	JSL $C12480
C2/F130:	20 87 FA	JSR $FA87
C2/F133:	20 97 F9	JSR $F997
C2/F136:	20 4F FA	JSR $FA4F
C2/F139:	A9 3C		LDA #$3C
C2/F13B:	8F232100	STA $002123
C2/F13F:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F142:	AD 6F 89	LDA $896F
C2/F145:	29 F7		AND #$F7		(TRB would've worked...)
C2/F147:	8D 6F 89	STA $896F
C2/F14A:	4C 09 F8	JMP $F809

C2/F14D:	A2 91 01	LDX #$0191
C2/F150:	228024C1	JSL $C12480
C2/F154:	20 87 FA	JSR $FA87
C2/F157:	20 27 FA	JSR $FA27
C2/F15A:	20 4F FA	JSR $FA4F
C2/F15D:	A9 3C		LDA #$3C
C2/F15F:	8F232100	STA $002123
C2/F163:	A9 04		LDA #$04
C2/F165:	8D 1B 96	STA $961B		(Set clip plane to a tall oval)
C2/F168:	4C 09 F8	JMP $F809

C2/F16B:	A2 93 01	LDX #$0193
C2/F16E:	228024C1	JSL $C12480
C2/F172:	20 87 FA	JSR $FA87
C2/F175:	4C 09 F8	JMP $F809

C2/F178:	86 10		STX $10
C2/F17A:	7B		TDC			(A = 0)
C2/F17B:	AA		TAX			(X = 0)
C2/F17C:	C2 20		REP #$20		(16-bit A)
C2/F17E:	7B		TDC			(Why do you need this again?!)
C2/F17F:	AA		TAX			(...)
C2/F180:	A9 08 F7	LDA #$F708
C2/F183:	9D 21 9A	STA $9A21,X
C2/F186:	E8E8E8E8	INX x4
C2/F18A:	E4 10		CPX $10
C2/F18C:	D0 F5		BNE $F183	(-11)
C2/F18E:	7B		TDC			(A = 0)
C2/F18F:	E2 20		SEP #$20
C2/F191:	EE 97 61	INC $6197
C2/F194:	60		RTS

C2/F195:	A2 8E 01	LDX #$018E
C2/F198:	225224C1	JSL $C12452
C2/F19C:	20 70 FA	JSR $FA70
C2/F19F:	20 0F FA	JSR $FA0F
C2/F1A2:	2286C3C1	JSL $C1C386
C2/F1A6:	A2 81 00	LDX #$0081
C2/F1A9:	22A7C3C1	JSL $C1C3A7
C2/F1AD:	20 4F FA	JSR $FA4F
C2/F1B0:	A9 3C		LDA #$3C
C2/F1B2:	8F232100	STA $002123
C2/F1B6:	A2 00 02	LDX #$0200
C2/F1B9:	20 78 F1	JSR $F178
C2/F1BC:	20 CA F1	JSR $F1CA
C2/F1BF:	AD 6F 89	LDA $896F
C2/F1C2:	29 F7		AND #$F7		(TRB would've worked...)
C2/F1C4:	8D 6F 89	STA $896F
C2/F1C7:	4C 09 F8	JMP $F809

C2/F1CA:	9C 56 6F	STZ $6F56
C2/F1CD:	A2 20 05	LDX #$0520
C2/F1D0:	BD 2E 6A	LDA $6A2E,X
C2/F1D3:	9D 3E 6A	STA $6A3E,X
C2/F1D6:	9D 4E 6A	STA $6A4E,X
C2/F1D9:	BD 7E 6F	LDA $6F7E,X
C2/F1DC:	9D 8E 6F	STA $6F8E,X
C2/F1DF:	9D 9E 6F	STA $6F9E,X
C2/F1E2:	BD CE 74	LDA $74CE,X	(Animation X-offset)
C2/F1E5:	9D DE 74	STA $74DE,X
C2/F1E8:	9D EE 74	STA $74EE,X
C2/F1EB:	E8		INX
C2/F1EC:	E0 30 05	CPX #$0530
C2/F1EF:	D0 DF		BNE $F1D0	(-33)
C2/F1F1:	EE 66 6F	INC $6F66
C2/F1F4:	A9 02		LDA #$02
C2/F1F6:	8D 76 6F	STA $6F76
C2/F1F9:	60		RTS

C2/F1FA:	9C AD 62	STZ $62AD
C2/F1FD:	9C AE 62	STZ $62AE
C2/F200:	20 6D F6	JSR $F66D
C2/F203:	A2 83 01	LDX #$0183
C2/F206:	225224C1	JSL $C12452
C2/F20A:	20 70 FA	JSR $FA70
C2/F20D:	20 03 FA	JSR $FA03		(Why not JMP?)
C2/F210:	60		RTS

C2/F211:	A2 82 01	LDX #$0182
C2/F214:	228024C1	JSL $C12480
C2/F218:	20 87 FA	JSR $FA87
C2/F21B:	20 C7 F9	JSR $F9C7
C2/F21E:	4C 09 F8	JMP $F809

C2/F221:	A2 80 01	LDX #$0180
C2/F224:	228024C1	JSL $C12480
C2/F228:	20 87 FA	JSR $FA87
C2/F22B:	20 EB F9	JSR $F9EB
C2/F22E:	4C 09 F8	JMP $F809

C2/F231:	A2 92 01	LDX #$0192
C2/F234:	225224C1	JSL $C12452
C2/F238:	20 70 FA	JSR $FA70
C2/F23B:	20 EB F9	JSR $F9EB
C2/F23E:	4C 09 F8	JMP $F809

C2/F241:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F244:	20 4F FA	JSR $FA4F
C2/F247:	A9 CC		LDA #$CC
C2/F249:	8F242100	STA $002124
C2/F24D:	A2 87 01	LDX #$0187
C2/F250:	228024C1	JSL $C12480
C2/F254:	20 87 FA	JSR $FA87
C2/F257:	20 1B FA	JSR $FA1B
C2/F25A:	4C 09 F8	JMP $F809

C2/F25D:	A9 06		LDA #$06
C2/F25F:	8D 1B 96	STA $961B		(Set clip plane to a wide oval)
C2/F262:	20 4F FA	JSR $FA4F
C2/F265:	A9 3C		LDA #$3C
C2/F267:	8F2321000	STA $002123
C2/F26B:	A2 84 01	LDX #$0184
C2/F26E:	228024C1	JSL $C12480
C2/F272:	20 87 FA	JSR $FA87
C2/F275:	20 A3 F9	JSR $F9A3
C2/F278:	4C 09 F8	JMP $F809

C2/F27B:	A2 85 01	LDX #$0185
C2/F27E:	228024C1	JSL $C12480
C2/F282:	20 87 FA	JSR $FA87
C2/F285:	EE B0 62	INC $62B0
C2/F288:	60		RTS

C2/F289:	A2 81 01	LDX #$0181
C2/F28C:	228024C1	JSL $C12480
C2/F290:	20 87 FA	JSR $FA87
C2/F293:	20 27 FA	JSR $FA27
C2/F296:	4C 09 F8	JMP $F809

C2/F299:	20 AF F9	JSR $F9AF
C2/F29C:	20 4F FA	JSR $FA4F
C2/F29F:	A9 3C		LDA #$3C
C2/F2A1:	8F232100	STA $002123
C2/F2A5:	A9 CC		LDA #$CC
C2/F2A7:	8F242100	STA $002124
C2/F2AB:	A9 07		LDA #$07
C2/F2AD:	8D 1B 96	STA $961B		(Set clip plane to dome)
C2/F2B0:	AD 6F 89	LDA $896F
C2/F2B3:	29 F7		AND #$F7		(TRB would've worked...)
C2/F2B5:	8D 6F 89	STA $896F
C2/F2B8:	60		RTS

C2/F2B9:	20 30 F6	JSR $F630
C2/F2BC:	4C CA F8	JMP $F8CA

C2/F2BF:	20 CA F8	JSR $F8CA
C2/F2C2:	A2 02 84	LDX #$8402
C2/F2C5:	86 10		STX $10
C2/F2C7:	A9 13		LDA #$13
C2/F2C9:	2200B0C1	JSL $C1B000
C2/F2CD:	20 4F FA	JSR $FA4F
C2/F2D0:	A9 CC		LDA #$CC
C2/F2D2:	8F242100	STA $002124
C2/F2D6:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F2D9:	227EB0C1	JSL $C1B07E
C2/F2DD:	AD 6F 89	LDA $896F
C2/F2E0:	09 48		ORA #$48		(TSB would've worked...)
C2/F2E2:	8D 6F 89	STA $896F
C2/F2E5:	7B		TDC			(A = 0)
C2/F2E6:	AA		TAX			(X = 0)
C2/F2E7:	8E F5 4A	STX $4AF5		(Battle info window text X-offset)
C2/F2EA:	8E F7 4A	STX $4AF7		(" " " " Y-offset)
C2/F2ED:	EE AD 60	INC $60AD
C2/F2F0:	60		RTS

C2/F2F1:	229E9AC1	JSL $C19A9E
C2/F2F5:	A5 10		LDA $10
C2/F2F7:	30 0B		BMI $F304	(+11)	(Branch if entity is an enemy)
C2/F2F9:	0A (x5)	ASL x5
C2/F2FE:	A8		TAY
C2/F2FF:	A9 30		LDA #$30
C2/F301:	99 BD 61	STA $61BD,Y	(Draw character in correct orientation)
C2/F304:	60		RTS

C2/F305:	2286C3C1	JSL $C1C386
C2/F309:	9C 67 7B	STZ $7B67
C2/F30C:	222602C1	JSL $C10226
C2/F310:	22F1C3C1	JSL $C1C3F1
C2/F314:	AD 6F 89	LDA $896F
C2/F317:	29 EF		AND #$EF		(Seriously, what do you have against TRB and TSB?!)
C2/F319:	8D 6F 89	STA $896F
C2/F31C:	22A1AAC1	JSL $C1AAA1
C2/F320:	A5 12		LDA $12
C2/F322:	29 7F		AND #$7F
C2/F324:	38		SEC
C2/F325:	E9 04		SBC #$04
C2/F327:	20 9E FA	JSR $FA9E
C2/F32A:	48		PHA
C2/F32B:	225F1EC1	JSL $C11E5F
C2/F32F:	20 F1 F2	JSR $F2F1
C2/F332:	22221FC1	JSL $C11F22
C2/F336:	222602C1	JSL $C10226
C2/F33A:	68		PLA
C2/F33B:	49 FF		EOR #$FF
C2/F33D:	8D AB 60	STA $60AB
C2/F340:	AD 7D 62	LDA $627D
C2/F343:	29 7F		AND #$7F		(TRB... TRB...)
C2/F345:	8D 7D 62	STA $627D
C2/F348:	A9 02		LDA #$02
C2/F34A:	8D 0E 7B	STA $7B0E
C2/F34D:	8D 0F 7B	STA $7B0F
C2/F350:	60		RTS

C2/F351:	20 5D F3	JSR $F35D
C2/F354:	A9 06		LDA #$06
C2/F356:	8D 1B 96	STA $961B		(Set clip plane to a wide oval)
C2/F359:	9C AC 60	STZ $60AC
C2/F35C:	60		RTS

C2/F35D:	EE AC 60	INC $60AC
C2/F360:	20 EB F9	JSR $F9EB
C2/F363:	20 4F FA	JSR $FA4F
C2/F366:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F369:	A9 3C		LDA #$3C
C2/F36B:	8F232100	STA $002123
C2/F36F:	22A1AAC1	JSL $C1AAA1
C2/F373:	A5 12		LDA $12
C2/F375:	10 0D		BPL $F384	(+13)	(Branch if entity is not an enemy)
C2/F377:	29 0F		AND #$0F
C2/F379:	38		SEC
C2/F37A:	E9 04		SBC #$04
C2/F37C:	0A		ASL A
C2/F37D:	A8		TAY
C2/F37E:	A9 31		LDA #$31
C2/F380:	99 DC 80	STA $80DC,Y	(Draw enemy in correct orientation)
C2/F383:	60		RTS

C2/F384:	29 03		AND #$03
C2/F386:	0A (x5)	ASL x5
C2/F38B:	A8		TAY
C2/F38C:	A9 30		LDA #$30
C2/F38E:	99 BD 61	STA $61BD,Y	(Draw character in correct orientation)
C2/F391:	60		RTS

C2/F392:	A9 08		LDA #$08
C2/F394:	85 26		STA $26
C2/F396:	A9 05		LDA #$05
C2/F398:	20 F8 F4	JSR $F4F8
C2/F39B:	A9 06		LDA #$06		(INC acceptable)
C2/F39D:	20 E6 F6	JSR $F6E6
C2/F3A0:	20 1B FA	JSR $FA1B
C2/F3A3:	20 4F FA	JSR $FA4F
C2/F3A6:	A9 3C		LDA #$3C
C2/F3A8:	8F232100	STA $002123
C2/F3AC:	A9 04		LDA #$04
C2/F3AE:	8D 1B 96	STA $961B		(Set clip plane to a tall oval)
C2/F3B1:	EE AC 60	INC $60AC
C2/F3B4:	60		RTS

C2/F3B5:	A9 08		LDA #$08
C2/F3B7:	85 26		STA $26
C2/F3B9:	A9 05		LDA #$05
C2/F3BB:	20 F8 F4	JSR $F4F8
C2/F3BE:	A9 06		LDA #$06		(INC acceptable)
C2/F3C0:	20 E6 F6	JSR $F6E6
C2/F3C3:	20 03 FA	JSR $FA03
C2/F3C6:	20 4F FA	JSR $FA4F
C2/F3C9:	A9 3C		LDA #$3C
C2/F3CB:	8F232100	STA $002123
C2/F3CF:	A9 CC		LDA #$CC
C2/F3D1:	8F242100	STA $002124
C2/F3D5:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F3D8:	60		RTS

C2/F3D9:	20 1B FA	JSR $FA1B
C2/F3DC:	A9 CC		LDA #$CC
C2/F3DE:	8F242100	STA $002124
C2/F3E2:	20 4F FA	JSR $FA4F
C2/F3E5:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F3E8:	60		RTS

C2/F3E9:	20 DF F9	JSR $F9DF
C2/F3EC:	20 4F FA	JSR $FA4F
C2/F3EF:	A9 CC		LDA #$CC
C2/F3F1:	8F242100	STA $002124
C2/F3F5:	A9 02		LDA #$02
C2/F3F7:	8D 1B 96	STA $961B		(Set clip plane to wavy)
C2/F3FA:	60		RTS

C2/F3FB:	A9 00		LDA #$00		(Not TDC?)
C2/F3FD:	85 26		STA $26
C2/F3FF:	A9 02		LDA #$02
C2/F401:	20 F8 F4	JSR $F4F8
C2/F404:	A9 03		LDA #$03		(INC acceptable)
C2/F406:	20 E6 F6	JSR $F6E6
C2/F409:	AD 6F 89	LDA $896F
C2/F40C:	29 F7		AND #$F7		(I keep telling you about TRB and TSB, but apparently you just won't listen to me...)
C2/F40E:	8D 6F 89	STA $896F
C2/F411:	20 BB F9	JSR $F9BB
C2/F414:	EE AC 60	INC $60AC
C2/F417:	60		RTS

C2/F418:	A9 08		LDA #$08
C2/F41A:	85 26		STA $26
C2/F41C:	A9 05		LDA #$05
C2/F41E:	20 F8 F4	JSR $F4F8
C2/F421:	A9 06		LDA #$06		(INC acceptable)
C2/F423:	20 E6 F6	JSR $F6E6
C2/F426:	20 33 FA	JSR $FA33
C2/F429:	20 4F FA	JSR $FA4F
C2/F42C:	A9 CC		LDA #$CC
C2/F42E:	8F242100	STA $002124
C2/F432:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F435:	60		RTS

C2/F436:	20 33 FA	JSR $FA33
C2/F439:	20 4F FA	JSR $FA4F
C2/F43C:	A9 3C		LDA #$3C
C2/F43E:	8F232100	STA $002123
C2/F442:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F445:	2286C3C1	JSL $C1C386
C2/F449:	229E9AC1	JSL $C19A9E
C2/F44D:	A5 10		LDA $10
C2/F44F:	22EDC3C1	JSL $C1C3ED
C2/F453:	A5 10		LDA $10
C2/F455:	29 03		AND #$03
C2/F457:	0A (x5)	ASL x5
C2/F45C:	A8		TAY
C2/F45D:	A9 30		LDA #$30
C2/F45F:	99 BD 61	STA $61BD,Y
C2/F462:	A9 02		LDA #$02
C2/F464:	8D 0E 7B	STA $7B0E
C2/F467:	8D 0F 7B	STA $7B0F
C2/F46A:	60		RTS

C2/F46B:	20 33 FA	JSR $FA33
C2/F46E:	20 4F FA	JSR $FA4F
C2/F471:	A9 CC		LDA #$CC
C2/F473:	8F242100	STA $002124
C2/F477:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F47A:	EE AC 60	INC $60AC
C2/F47D:	EE AD 60	INC $60AD
C2/F480:	A9 02		LDA #$02
C2/F482:	8D 0E 7B	STA $7B0E
C2/F485:	8D 0F 7B	STA $7B0F
C2/F488:	60		RTS

C2/F489:	20 33 FA	JSR $FA33
C2/F48C:	EE AC 60	INC $60AC
C2/F48F:	A9 02		LDA #$02
C2/F491:	8D 0E 7B	STA $7B0E
C2/F494:	8D 0F 7B	STA $7B0F
C2/F497:	60		RTS

C2/F498:	20 9C F4	JSR $F49C
C2/F49B:	6B		RTL

C2/F49C:	EE AC 60	INC $60AC
C2/F49F:	A9 08		LDA #$08
C2/F4A1:	8D 0E 7B	STA $7B0E
C2/F4A4:	8D 0F 7B	STA $7B0F
C2/F4A7:	A2 02 01	LDX #$0102
C2/F4AA:	86 10		STX $10
C2/F4AC:	A9 12		LDA #$12
C2/F4AE:	2200B0C1	JSL $C1B000
C2/F4B2:	60		RTS

C2/F4B3:	229E9AC1	JSL $C19A9E
C2/F4B7:	A5 10		LDA $10
C2/F4B9:	C2 20		REP #$20		(16-bit A)
C2/F4BB:	0A		ASL A
C2/F4BC:	AA		TAX
C2/F4BD:	BF8BCEC2	LDA $C2CE8B,X
C2/F4C1:	18		CLC
C2/F4C2:	69 10 00	ADC #$0010
C2/F4C5:	AA		TAX
C2/F4C6:	7B		TDC
C2/F4C7:	E2 20		SEP #$20		(8-bit A)
C2/F4C9:	60		RTS

C2/F4CA:	20 B3 F4	JSR $F4B3
C2/F4CD:	A9 01		LDA #$01
C2/F4CF:	9D 35 6A	STA $6A35,X
C2/F4D2:	9D 45 6A	STA $6A45,X
C2/F4D5:	9D 55 6A	STA $6A55,X
C2/F4D8:	A9 00		LDA #$00		(Not TDC? Or DEC?)
C2/F4DA:	9D D8 74	STA $74D8,X
C2/F4DD:	A9 55		LDA #$55
C2/F4DF:	9D E8 74	STA $74E8,X
C2/F4E2:	A9 AA		LDA #$AA
C2/F4E4:	9D F8 74	STA $74F8,X
C2/F4E7:	A2 02 03	LDX #$0302
C2/F4EA:	86 10		STX $10
C2/F4EC:	A9 10		LDA #$10
C2/F4EE:	2200B0C1	JSL $C1B000
C2/F4F2:	A9 04		LDA #$04
C2/F4F4:	8D 0F 7B	STA $7B0F
C2/F4F7:	60		RTS

C2/F4F8:	85 22		STA $22
C2/F4FA:	A5 26		LDA $26
C2/F4FC:	85 28		STA $28
C2/F4FE:	AE 3D 61	LDX $613D
C2/F501:	86 12		STX $12
C2/F503:	8A		TXA
C2/F504:	0A0A0A0A	ASL x4
C2/F508:	85 12		STA $12
C2/F50A:	C2 20		REP #$20		(16-bit A)
C2/F50C:	A5 12		LDA $12
C2/F50E:	4A4A4A4A	LSR x4
C2/F512:	85 12		STA $12
C2/F514:	AD 80 60	LDA $6080
C2/F517:	4A4A4A4A	LSR x4
C2/F51B:	8D 80 60	STA $6080
C2/F51E:	64 24		STZ $24
C2/F520:	7B		TDC
C2/F521:	E2 20		SEP #$20		(8-bit A)
C2/F523:	AD 80 60	LDA $6080
C2/F526:	29 01		AND #$01
C2/F528:	D0 45		BNE $F56F	(+69)
C2/F52A:	A5 12		LDA $12
C2/F52C:	29 01		AND #$01
C2/F52E:	F0 3F		BEQ $F56F	(+63)
C2/F530:	A5 22		LDA $22
C2/F532:	85 14		STA $14
C2/F534:	A6 24		LDX $24
C2/F536:	A9 01		LDA #$01
C2/F538:	85 1A		STA $1A
C2/F53A:	86 1E		STX $1E
C2/F53C:	A9 10		LDA #$10
C2/F53E:	85 10		STA $10
C2/F540:	BD 2E 6A	LDA $6A2E,X
C2/F543:	9D 3E 6A	STA $6A3E,X
C2/F546:	BD 7E 6F	LDA $6F7E,X
C2/F549:	9D 8E 6F	STA $6F8E,X
C2/F54C:	BD CE 74	LDA $74CE,X
C2/F54F:	9D DE 74	STA $74DE,X
C2/F552:	E8		INX
C2/F553:	C6 10		DEC $10
C2/F555:	D0 E9		BNE $F540 (-23)
C2/F557:	DA		PHX
C2/F558:	A6 1E		LDX $1E
C2/F55A:	A5 1A		LDA $1A
C2/F55C:	9D 46 6A	STA $6A46,X
C2/F55F:	E6 1A		INC $1A
C2/F561:	BD 35 6A	LDA $6A35,X
C2/F564:	18		CLC
C2/F565:	65 26		ADC $26
C2/F567:	9D 45 6A	STA $6A45,X
C2/F56A:	FA		PLX
C2/F56B:	C6 14		DEC $14
C2/F56D:	D0 CB		BNE $F53A	(-53)
C2/F56F:	66 13		ROR $13
C2/F571:	66 12		ROR $12
C2/F573:	6E 81 60	ROR $6081
C2/F576:	6E 80 60	ROR $6080
C2/F579:	C2 20		REP #$20		(16-bit A)
C2/F57B:	A5 24		LDA $24
C2/F57D:	18		CLC
C2/F57E:	69 80 00	ADC #$0080
C2/F581:	85 24		STA $24
C2/F583:	AA		TAX
C2/F584:	7B		TDC
C2/F585:	E2 20		SEP #$20		(8-bit A)
C2/F587:	E0 00 05	CPX #$0500
C2/F58A:	D0 97		BNE $F523	(-105)
C2/F58C:	60		RTS

C2/F58D:	20 33 FA	JSR $FA33
C2/F590:	A9 08		LDA #$08	(8)
C2/F592:	85 26		STA $26
C2/F594:	A9 05		LDA #$05	(5)
C2/F596:	20 F8 F4	JSR $F4F8
C2/F599:	A9 06		LDA #$06	(6)
C2/F59B:	4C E6 F6	JMP $F6E6

C2/F59E:	4C 33 FA	JMP $FA33		(Is this really needed?)

C2/F5A1:	4C 33 FA	JMP $FA33		(Is THIS really needed?)

C2/F5A4:	A9 00		LDA #$00	(0)
C2/F5A6:	85 26		STA $26
C2/F5A8:	A9 07		LDA #$07	(7)
C2/F5AA:	20 F8 F4	JSR $F4F8
C2/F5AD:	A9 08		LDA #$08	(8)
C2/F5AF:	20 E6 F6	JSR $F6E6
C2/F5B2:	20 4F FA	JSR $FA4F
C2/F5B5:	A9 3C		LDA #$3C	(60)
C2/F5B7:	8F232100	STA $002123
C2/F5BB:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F5BE:	4C 27 FA	JMP $FA27

C2/F5C1:	EE AC 60	INC $60AC
C2/F5C4:	A9 00		LDA #$00	(0)
C2/F5C6:	85 26		STA $26
C2/F5C8:	A9 05		LDA #$05	(5)
C2/F5CA:	20 F8 F4	JSR $F4F8
C2/F5CD:	A9 06		LDA #$06	(6)
C2/F5CF:	4C E6 F6	JMP $F6E6

C2/F5D2:	A0 00 28	LDY #$2800	(10,240)
C2/F5D5:	2209B1C1	JSL $C1B109
C2/F5D9:	AD 8D 89	LDA $898D
C2/F5DC:	29 FE		AND #$FE
C2/F5DE:	8D 8D 89	STA $898D
C2/F5E1:	A0 03 00	LDY #$0003
C2/F5E4:	B1 76		LDA ($76),Y
C2/F5E6:	0A		ASL
C2/F5E7:	AA		TAX
C2/F5E8:	C2 20		REP #$20		(16-bit A)
C2/F5EA:	BD 01 20	LDA $2001,X	(Enemy sprite ID)
C2/F5ED:	AA		TAX
C2/F5EE:	7B		TDC
C2/F5EF:	E2 20		SEP #$20		(8-bit A)
C2/F5F1:	22D124C1	JSL $C124D1
C2/F5F5:	4C 09 F8	JMP $F809

C2/F5F8:	A9 08		LDA #$08	(8)
C2/F5FA:	85 26		STA $26
C2/F5FC:	A9 05		LDA #$05	(5)
C2/F5FE:	20 F8 F4	JSR $F4F8
C2/F601:	A9 06		LDA #$06	(6)
C2/F603:	20 E6 F6	JSR $F6E6
C2/F606:	20 1B FA	JSR $FA1B
C2/F609:	EE AC 60	INC $60AC
C2/F60C:	60		RTS

C2/F60D:	A9 08		LDA #$08	(8)
C2/F60F:	85 26		STA $26
C2/F611:	A9 05		LDA #$05	(5)
C2/F613:	20 F8 F4	JSR $F4F8
C2/F616:	A9 06		LDA #$06	(6)
C2/F618:	20 E6 F6	JSR $F6E6
C2/F61B:	20 27 FA	JSR $FA27
C2/F61E:	20 4F FA	JSR $FA4F
C2/F621:	A9 3C		LDA #$3C	(60)
C2/F623:	8F232100	STA $002123
C2/F627:	A9 05		LDA #$05	(5)
C2/F629:	8D 1B 96	STA $961B		(Set clip plane to wavy in)
C2/F62C:	EE AC 60	INC $60AC
C2/F62F:	60		RTS

C2/F630:	A9 06		LDA #$06	(6)
C2/F632:	85 26		STA $26
C2/F634:	A9 05		LDA #$05	(5)
C2/F636:	20 F8 F4	JSR $F4F8
C2/F639:	A9 06		LDA #$06	(6)
C2/F63B:	4C E6 F6	JMP $F6E6

C2/F63E:	64 26		STZ $26
C2/F640:	A9 03		LDA #$03	(3)
C2/F642:	20 F8 F4	JSR $F4F8
C2/F645:	A9 04		LDA #$04	(4)
C2/F647:	20 E6 F6	JSR $F6E6
C2/F64A:	4C 1B FA	JMP $FA1B

(Data of some kind.)
C2/F64D:	00
C2/F64E:	05
C2/F64F:	02
C2/F650:	01
C2/F651:	01
C2/F652:	00
C2/F653:	00

C2/F654:	01
C2/F655:	06
C2/F656:	03
C2/F657:	02
C2/F658:	02
C2/F659:	01
C2/F65A:	01

C2/F65B:	20 03 FA	JSR $FA03
C2/F65E:	20 4F FA	JSR $FA4F
C2/F661:	A9 3C		LDA #$3C	(60)
C2/F663:	8F232100	STA $002123
C2/F667:	A9 CC		LDA #$CC	(-52)
C2/F669:	8D242100	STA $002124
C2/F66D:	A9 08		LDA #$08	(8)
C2/F66F:	85 26		STA $26
C2/F671:	7B		TDC			(A = 0)
C2/F672:	AA		TAX			(X = 0)
C2/F673:	C2 20		REP #$20		(16-bit A)
C2/F675:	AD 3D 61	LDA $613D
C2/F678:	A0 10 00	LDY #$0010	(16)
C2/F67B:	0A		ASL
C2/F67C:	90 01		BCC $F67F	(+1)
C2/F67E:	E8		INX			(Count the number of 1s in $613D and $613E)
C2/F67F:	88		DEY
C2/F680:	D0 F9		BNE $F67B	(-7)
C2/F682:	E0 06 00	CPX #$0006	(6)
C2/F685:	90 03		BCC $F68A	(+3)
C2/F687:	A2 06 00	LDX #$0006 (6)	(X <= 6)
C2/F68A:	7B		TDC			(A = 0)
C2/F68B:	E2 20		SEP #$20
C2/F68D:	A9 06		LDA #$06	(6)
C2/F68F:	8D 1B 96	STA $961B		(Set clip plane to a wide oval)
C2/F692:	BF4DF6C2	LDA $C2F64D,X
C2/F696:	F0 05		BEQ $F69D	(+5)
C2/F698:	DA		PHX
C2/F699:	20 F8 F4	JSR $F4F8
C2/F69C:	FA		PLX
C2/F69D:	BF54F6C2	LDA $C2F654,X
C2/F6A1:	4C E6 F6	JMP $F6E6		(BRA acceptable)

C2/F6A4:	20 27 FA	JSR $FA27
C2/F6A7:	20 4F FA	JSR $FA4F
C2/F6AA:	A9 3C		LDA #$3C	(60)
C2/F6AC:	8F232100	STA $002123
C2/F6B0:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F6B3:	EE AC 60	INC $60AC
C2/F6B6:	A9 03		LDA #$03	(3)
C2/F6B8:	85 26		STA $26
C2/F6BA:	A9 05		LDA #$05	(5)
C2/F6BC:	20 F8 F4	JSR $F4F8
C2/F6BF:	A9 06		LDA #$06	(6)
C2/F6C1:	4C E6 F6	JMP $F6E6		(BRA acceptable)

C2/F6C4:	20 3F FA	JSR $FA3F
C2/F6C7:	A9 08		LDA #$08	(8)
C2/F6C9:	85 26		STA $26
C2/F6CB:	A9 02		LDA #$02	(2)
C2/F6CD:	20 F8 F4	JSR $F4F8
C2/F6D0:	A9 03		LDA #$03	(3)
C2/F6D2:	4C E6 F6	JMP $F6E6		(BRA acceptable)

C2/F6D5:	20 1B FA	JSR $FA1B
C2/F6D8:	A9 28		LDA #$28	(40)
C2/F6DA:	85 26		STA $26
C2/F6DC:	A9 01		LDA #$01	(1)
C2/F6DE:	20 F8 F4	JSR $F4F8
C2/F6E1:	A9 02		LDA #$02	(2)
C2/F6E3:	4C E6 F6	JMP $F6E6		(Not needed here!)

C2/F6E6:	8D 0F 7B	STA $7B0F		(Um, why are all of the next few functions lacking JMPs that go here?)
C2/F6E9:	8D 0E 7B	STA $7B0E
C2/F6EC:	60		RTS

C2/F6ED:	20 B3 F4	JSR $F4B3
C2/F6F0:	A9 01		LDA #$01	(1)
C2/F6F2:	9D 35 6A	STA $6A35,X
C2/F6F5:	9D 45 6A	STA $6A45,X
C2/F6F8:	A9 09		LDA #$09	(9)
C2/F6FA:	9D 55 6A	STA $6A55,X
C2/F6FD:	9D 65 6A	STA $6A65,X
C2/F700:	A9 11		LDA #$11	(11)
C2/F702:	9D 75 6A	STA $6A75,X
C2/F705:	9D 85 6A	STA $6A85,X
C2/F708:	A9 01		LDA #$01	(1)
C2/F70A:	9D AC 6F	STA $6FAC,X
C2/F70D:	9D BC 6F	STA $6FBC,X
C2/F710:	A9 02		LDA #$02	(2)	(INC acceptable)
C2/F712:	9D CC 6F	STA $6FCC,X
C2/F715:	9D DC 6F	STA $6FDC,X
C2/F718:	A9 80		LDA #$80	(-128)
C2/F71A:	9D E8 74	STA $74E8,X
C2/F71D:	9D 08 75	STA $7508,X
C2/F720:	9D 28 75	STA $7528,X
C2/F723:	7B		TDC			(A = 0)
C2/F724:	9D D9 74	STA $74D9,X
C2/F727:	9D F9 74	STA $74F9,X
C2/F72A:	9D 19 75	STA $7519,X
C2/F72D:	A9 FF		LDA #$FF		(DEC acceptable)
C2/F72F:	9D E9 74	STA $74E9,X
C2/F732:	9D 09 75	STA $7509,X
C2/F735:	9D 29 75	STA $7529,X
C2/F738:	20 41 F7	JSR $F741
C2/F73B:	A9 07		LDA #$07	(7)
C2/F73D:	8D 0F 7B	STA $7B0F
C2/F740:	60		RTS

C2/F741:	20 1B FA	JSR $FA1B
C2/F744:	2286C3C1	JSL $C1C386
C2/F748:	229E9AC1	JSL $C19A9E
C2/F74C:	A5 10		LDA $10
C2/F74E:	22EDC3C1	JSL $C1C3ED
C2/F752:	A9 02		LDA #$02	(2)
C2/F754:	8D 0E 7B	STA $7B0E
C2/F757:	8D 0F 7B	STA $7B0F
C2/F75A:	AD 6F 89	LDA $896F
C2/F75D:	29 F7		AND #$F7
C2/F75F:	8D 6F 89	STA $896F
C2/F762:	60		RTS

C2/F763:	20 1B FA	JSR $FA1B
C2/F766:	20 4F FA	JSR $FA4F
C2/F769:	A9 3C		LDA #$3C	(60)
C2/F76B:	8F232100	STA $002123
C2/F76F:	A9 03		LDA #$03	(3)
C2/F771:	8D 1B 96	STA $961B		(Set clip plane to a pillar)
C2/F774:	A9 02		LDA #$02	(2)	(DEC acceptable)
C2/F776:	8D 0E 7B	STA $7B0E
C2/F779:	8D 0F 7B	STA $7B0F
C2/F77C:	60		RTS

C2/F77D:	20 F7 F9	JSR $F9F7
C2/F780:	20 4F FA	JSR $FA4F
C2/F783:	A9 3C		LDA #$3C	(60)
C2/F785:	8F232100	STA $002123
C2/F789:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F78C:	A9 02		LDA #$02	(2)
C2/F78E:	8D 0E 7B	STA $7B0E
C2/F791:	8D 0F 7B	STA $7B0F
C2/F794:	60		RTS

C2/F795:	20 D3 F9	JSR $F9D3
C2/F798:	A9 02		LDA #$02	(2)
C2/F79A:	8D 0E 7B	STA $7B0E
C2/F79D:	8D 0F 7B	STA $7B0F
C2/F7A0:	60		RTS

C2/F7A1:	20 1B FA	JSR $FA1B
C2/F7A4:	20 4F FA	JSR $FA4F
C2/F7A7:	A9 3C		LDA #$3C	(60)
C2/F7A9:	8F232100	STA $002123
C2/F7AD:	9C 1B 96	STZ $961B		(Reset clip plane shape)
C2/F7B0:	2286C3C1	JSL $C1C386
C2/F7B4:	229E9AC1	JSL $C19A9E
C2/F7B8:	A5 10		LDA $10
C2/F7BA:	22EDC3C1	JSL $C1C3ED
C2/F7BE:	A9 02		LDA #$02	(2)
C2/F7C0:	8D 0E 7B	STA $7B0E
C2/F7C3:	8D 0F 7B	STA $7B0F
C2/F7C6:	60		RTS

C2/F7C7:	20 27 FA	JSR $FA27
C2/F7CA:	20 4F FA	JSR $FA4F
C2/F7CD:	A9 3C		LDA #$3C	(60)
C2/F7CF:	8F232100	STA $002123
C2/F7D3:	2286C3C1	JSL $C1C386
C2/F7D7:	229E9AC1	JSL $C19A9E
C2/F7DB:	A5 10		LDA $10
C2/F7DD:	22EDC3C1	JSL $C1C3ED
C2/F7E1:	A9 02		LDA #$02	(2)
C2/F7E3:	8D 1B 96	STA $961B		(Set clip plane to wavy. Could've used a BRA...)
C2/F7E6:	A9 02		LDA #$02	(2)	(And even though you didn't, this instruction is needless!)
C2/F7E8:	8D 0E 7B	STA $7B0E
C2/F7EB:	8D 0F 7B	STA $7B0F
C2/F7EE:	60		RTS

C2/F7EF:	20 33 FA	JSR $FA33
C2/F7F2:	20 4F FA	JSR $FA4F
C2/F7F5:	A9 CC		LDA #$CC	(-52)
C2/F7F7:	8F242100	STA $002124
C2/F7FB:	A9 01		LDA #$01	(1)
C2/F7FD:	8D 1B 96	STA $961B		(Set clip plane to a circle)
C2/F800:	A9 02		LDA #$02	(2)
C2/F802:	8D 0E 7B	STA $7B0E
C2/F805:	8D 0F 7B	STA $7B0F
C2/F808:	60		RTS

C2/F809:	A9 02		LDA #$02	(2)
C2/F80B:	8D 0E 7B	STA $7B0E
C2/F80E:	8D 0F 7B	STA $7B0F
C2/F811:	60		RTS

C2/F812:	EE AA 60	INC $60AA
C2/F815:	A9 06		LDA #$06	(6)
C2/F817:	8D 0E 7B	STA $7B0E
C2/F81A:	A9 02		LDA #$02	(2)
C2/F81C:	8D 0F 7B	STA $7B0F
C2/F81F:	60		RTS

C2/F820:	EE AC 60	INC $60AC
C2/F823:	A9 02		LDA #$02	(2)
C2/F825:	8D 0F 7B	STA $7B0F
C2/F828:	4C 3F FA	JMP $FA3F

C2/F82B:	A9 06		LDA #$06	(6)
C2/F82D:	8D 0E 7B	STA $7B0E
C2/F830:	8D 0F 7B	STA $7B0F
C2/F833:	4C 3F FA	JMP $FA3F

C2/F836:	4C 3F FA	JMP $FA3F		(???)

C2/F839:	4C 1B FA	JMP $FA1B		(???)

C2/F83C:	AD 6F 89	LDA $896F
C2/F83F:	29 F7		AND #$F7
C2/F841:	8D 6F 89	STA $896F
C2/F844:	4C 0F FA	JMP $FA0F

C2/F847:	C2 20		REP #$20		(16-bit A)
C2/F849:	AD 80 60	LDA $6080
C2/F84C:	49 FF FF	EOR #$FFFF
C2/F84F:	85 22		STA $22		(Animation script pointer)
C2/F851:	AD 7E 60	LDA $607E
C2/F854:	25 22		AND $22
C2/F856:	48		PHA
C2/F857:	7B		TDC
C2/F858:	E2 20		SEP #$20		(8-bit A)
C2/F859:	FA		PLX
C2/F85B:	D0 01		BNE $F85E	(+1)
C2/F85D:	60		RTS

C2/F85E:	9C 67 7B	STZ $7B67
C2/F861:	2286C3C1	JSL $C1C386
C2/F865:	222602C1	JSL $C10226
C2/F869:	22F1C3C1	JSL $C1C3F1
C2/F86D:	227EB0C1	JSL $C1B07E
C2/F871:	22A1AAC1	JSL $C1AAA1
C2/F875:	A5 12		LDA $12
C2/F877:	10 16		BPL $F88F	(+22)
C2/F879:	29 7F		AND #$7F
C2/F87B:	38		SEC
C2/F87C:	E9 04		SBC #$04	(4)
C2/F87E:	20 9E FA	JSR $FA9E
C2/F881:	225F1EC1	JSL $C11E5F
C2/F885:	22221FC1	JSL $C11F22
C2/F889:	222602C1	JSL $C10226
C2/F88D:	80 1F		BRA $F8AE	(+31)

C2/F88F:	29 03		AND #$03
C2/F891:	0A (x5)	ASL x5
C2/F896:	AA		TAX
C2/F897:	7B		TDC
C2/F898:	A8		TAY
C2/F899:	BD 80 7F	LDA $7F80,X
C2/F89C:	99 60 7E	STA $7E60,Y
C2/F89F:	C8		INY
C2/F8A0:	E8 		INX
C2/F8A1:	C0 20 00	CPY #$0020	(32)
C2/F8A4:	D0 F3		BNE $F899	(-13)
C2/F8A6:	AD 6F 89	LDA $896F
C2/F8A9:	09 10		ORA #$10
C2/F8AB:	8D 6F 89	STA $896F
C2/F8AE:	AD 7D 62	LDA $627D
C2/F8B1:	29 7F		AND #$7F
C2/F8B3:	8D 7D 62	STA $627D
C2/F8B6:	20 6F F3	JSR $F36F
C2/F8B9:	222602C1	JSL $C10226
C2/F8BD:	AD 6F 89	LDA $896F
C2/F8C0:	29 F7		AND #$F7
C2/F8C2:	09 40		ORA #$40
C2/F8C4:	8D 6F 89	STA $896F
C2/F8C7:	4C 1B FA	JMP $FA1B

C2/F8CA:	9C 67 7B	STZ $7B67
C2/F8CD:	2286C3C1	JSL $C1C386
C2/F8D1:	222602C1	JSL $C10226
C2/F8D5:	227EB0C1	JSL $C1B07E
C2/F8D9:	22A1AAC1	JSL $C1AAA1
C2/F8DD:	A5 12		LDA $12
C2/F8DF:	10 44		BPL $F925	(+68)
C2/F8E1:	29 7F		AND #$7F
C2/F8E3:	38		SEC
C2/F8E4:	E9 04		SBC #$04	(4)
C2/F8E6:	20 9E FA	JSR $FA9E
C2/F8E9:	48		PHA
C2/F8EA:	85 14		STA $14
C2/F8EC:	20 54 EA	JSR $EA54
C2/F8EF:	AD 8D 89	LDA $898D
C2/F8F2:	48 		PHA
C2/F8F3:	29 FE		AND #$FE
C2/F8F5:	8D 8D 89	STA $898D
C2/F8F8:	A5 14		LDA $14
C2/F8FA:	225F1EC1	JSL $C11E5F
C2/F8FE:	22221FC1	JSL $C11F22
C2/F902:	22F1C3C1	JSL $C1C3F1
C2/F906:	222602C1	JSL $C10226
C2/F90A:	20 54 EA	JSR $EA54
C2/F90D:	AD 6F 89	LDA $896F
C2/F910:	29 E7		AND #$E7
C2/F912:	8D 6F 89	STA $896F
C2/F915:	68		PLA
C2/F916:	8D 8D 89	STA $898D
C2/F919:	68		PLA
C2/F91A:	49 FF		EOR #$FF
C2/F91C:	8D AB 60	STA $60AB
C2/F91F:	222602C1	JSL $C10226
C2/F923:	80 37		BRA $F95C	(+55)

C2/F925:	48		PHA
C2/F926:	20 54 EA	JSR $EA54
C2/F929:	AD 8D 89	LDA $898D
C2/F92C:	48		PHA
C2/F92D:	29 FE		AND #$FE
C2/F92F:	8D 8D 89	STA $898D
C2/F932:	AD 6F 89	LDA $896F
C2/F935:	29 E7		AND #$E7
C2/F937:	09 50		ORA #$50
C2/F939:	8D 6F 89	STA $896F
C2/F93C:	22551EC1	JSL $C11E55
C2/F940:	68		PLA
C2/F941:	8D 8D 89	STA $898D
C2/F944:	68		PLA
C2/F945:	29 03		AND #$03
C2/F947:	0A (x5)	ASL x5
C2/F94C:	AA		TAX
C2/F94D:	7B		TDC			(A = 0)
C2/F94E:	A8		TAY			(Y = 0)
C2/F94F:	BD 80 7F	LDA $7F80,X
C2/F952:	99 60 7E	STA $7E60,Y
C2/F955:	C8		INY
C2/F956:	E8		INX
C2/F957:	C0 20 00	CPY #$0020	(32)
C2/F95A:	D0 F3		BNE $F94F	(-13)
C2/F95C:	AD 7D 62	LDA $627D
C2/F95F:	29 7F		AND #$7F
C2/F961:	8D 7D 62	STA $627D
C2/F964:	4C 0F FA	JMP $FA0F

(Not sure what these functions do. They're all similar, though, so I could see a much more efficient way to do this.)
C2/F967:	A2 02 04	LDX #$0402	(1,026)
C2/F96A:	86 10		STX $10
C2/F96C:	A9 01		LDA #$01	(1)
C2/F96E:	2200B0C1	JSL $C1B000
C2/F972:	60		RTS

C2/F973:	A2 02 45	LDX #$4502	(17,666)
C2/F976:	86 10		STX $10
C2/F978:	A9 12		LDA #$12	(18)
C2/F97A:	2200B0C1	JSL $C1B000
C2/F97E:	60		RTS

C2/F97F:	A2 02 04	LDX #$0402	(1,026)
C2/F982:	86 10		STX $10
C2/F984:	A9 03		LDA #$03	(3)
C2/F986:	2200B0C1	JSL $C1B000
C2/F98A:	60		RTS

C2/F98B:	A2 02 01	LDX #$0102	(258)
C2/F98E:	86 10		STX $10
C2/F990:	A9 02		LDA #$02	(2)
C2/F992:	2200B0C1	JSL $C1B000
C2/F996:	60		RTS

C2/F997:	A2 02 01	LDX #$0102	(258)
C2/F99A:	86 10		STX $10
C2/F99C:	A9 14		LDA #$14	(20)
C2/F99E:	2200B0C1	JSL $C1B000
C2/F9A2:	60		RTS

C2/F9A3:	A2 02 04	LDX #$0402	(1,026)
C2/F9A6:	86 10		STX $10
C2/F9A8:	A9 12		LDA #$12	(18)
C2/F9AA:	2200B0C1	JSL $C1B000
C2/F9AE:	60		RTS

C2/F9AF:	A2 02 41	LDX #$4102	(16,642)
C2/F9B2:	86 10		STX $10
C2/F9B4:	A9 14		LDA #$14	(20)
C2/F9B6:	2200B0C1	JSL $C1B000
C2/F9BA:	60		RTS

C2/F9BB:	A2 02 02	LDX #$0202	(514)
C2/F9BE:	86 10		STX $10
C2/F9C0:	A9 04		LDA #$04	(4)
C2/F9C2:	2200B0C1	JSL $C1B000
C2/F9C6:	60		RTS

C2/F9C7:	A2 02 05	LDX #$0502	(1,282)
C2/F9CA:	86 10		STX $10
C2/F9CC:	A9 12		LDA #$12	(18)
C2/F9CE:	2200B0C1	JSL $C1B000
C2/F9D2:	60		RTS

C2/F9D3:	A2 02 41	LDX #$4102	(16,642)
C2/F9D6:	86 10		STX $10
C2/F9D8:	A9 12		LDA #$12	(18)
C2/F9DA:	2200B0C1	JSL $C1B000
C2/F9DE:	60		RTS

C2/F9DF:	A2 02 04	LDX #$0402	(1,026)
C2/F9E2:	86 10		STX $10
C2/F9E4:	A9 10		LDA #$10	(16)
C2/F9E6:	2200B0C1	JSL $C1B000
C2/F9EA:	60		RTS

C2/F9EB:	A2 02 02	LDX #$0202	(514)
C2/F9EE:	86 10		STX $10
C2/F9F0:	A9 10		LDA #$10	(16)
C2/F9F2:	2200B0C1	JSL $C1B000
C2/F9F6:	60		RTS

C2/F9F7:	A2 02 41	LDX #$4102	(16,642)
C2/F9FA:	86 10		STX $10
C2/F9FC:	A9 10		LDA #$10	(16)
C2/F9FE:	2200B0C1	JSL $C1B000
C2/FA02:	60		RTS

C2/FA03:	A2 02 04	LDX #$0402	(1,026)
C2/FA06:	86 10		STX $10
C2/FA08:	A9 11		LDA #$11	(17)
C2/FA0A:	2200B0C1	JSL $C1B000
C2/FA0E:	60		RTS

C2/FA0F:	A2 02 01	LDX #$0102	(258)
C2/FA12:	86 10		STX $10
C2/FA14:	A9 04		LDA #$04	(4)
C2/FA16:	2200B0C1	JSL $C1B000
C2/FA1A:	60		RTS

C2/FA1B:	A2 02 01	LDX #$0102	(258)
C2/FA1E:	86 10		STX $10
C2/FA20:	A9 12		LDA #$12	(18)
C2/FA22:	2200B0C1	JSL $C1B000
C2/FA26:	60		RTS

C2/FA27:	A2 02 01	LDX #$0102	(258)
C2/FA2A:	86 10		STX $10
C2/FA2C:	A9 10		LDA #$10	(16)
C2/FA2E:	2200B0C1	JSL $C1B000
C2/FA32:	60		RTS

C2/FA33:	A2 02 04	LDX #$0402	(1,026)
C2/FA36:	86 10		STX $10
C2/FA38:	A9 13		LDA #$13	(19)
C2/FA3A:	2200B0C1	JSL $C1B000
C2/FA3E:	60		RTS

C2/FA3F:	A2 02 03	LDX #$0302	(770)
C2/FA42:	86 10		STX $10
C2/FA44:	A9 10		LDA #$10	(16)
C2/FA46:	2200B0C1	JSL $C1B000
C2/FA4A:	60		RTS

(Called from C1/B0D6.)
C2/FA4B:	20 4F FA	JSR $FA4F
C2/FA4E:	6B		RTL

(Some sort of resetting/initializing of variables here.)
C2/FA4F:	7B		TDC			(A = 0)
C2/FA50:	AA		TAX			(X = 0)
C2/FA51:	A8		TAY			(Y = 0)
C2/FA52:	A9 FF		LDA #$FF	(-1)	(DEC A would work too...)
C2/FA54:	9D 21 9A	STA $9A21,X
C2/FA57:	99 1F 96	STA $961F,Y
C2/FA5A:	1A		INC			(A = 0)
C2/FA5B:	9D 22 9A	STA $9A22,X
C2/FA5E:	99 20 96	STA $9620,Y
C2/FA61:	C8 C8		INY x2
C2/FA63:	E8 (x4)	INX x4
C2/FA67:	E0 5C 02	CPX #$025C	(604)
C2/FA6A:	D0 E6		BNE $FA52	(-26)
C2/FA6C:	EE 97 61	INC $6197
C2/FA6F:	60		RTS

(This function copies a monster palette from ROM to RAM.)
C2/FA70:	AE 69 61	LDX $6169
C2/FA73:	7B		TDC			(A = 0)
C2/FA74:	A8		TAY			(Y = 0)
C2/FA75:	BF2078D2	LDA $D27820,X	(Monster palette)
C2/FA79:	99 60 7E	STA $7E60,Y	(Store to RAM palette 3)
C2/FA7C:	99 60 7C	STA $7C60,Y	(Store to temp palette 3)C2/FA7F:	E8		INX
C2/FA80:	C8		INY
C2/FA81:	C0 20 00	CPY #$0020	(32)
C2/FA84:	D0 EF		BNE $FA75	(-17)
C2/FA86:	60		RTS

(This function copies a monster palette from ROM to a different location in RAM.)
C2/FA87:	AE 69 61	LDX $6169
C2/FA8A:	7B		TDC			(A = 0)
C2/FA8B:	A8		TAY			(Y = 0)
C2/FA8C:	BF2078D2	LDA $D27820,X	(Monster palette)
C2/FA90:	99 60 7F	STA $7F60,Y	(Store to RAM palette B)
C2/FA93:	99 60 7D	STA $7D60,Y	(Store to temp palette B)
C2/FA96:	E8		INX
C2/FA97:	C8		INY
C2/FA98:	C0 20 00	CPY #$0020	(32)
C2/FA9B:	D0 EF		BNE $FA8C	(-17)
C2/FA9D:	60		RTS

C2/FA9E:	AA		TAX
C2/FA9F:	BF011AC1	LDA $C11A01,X	(A = 2^X)
C2/FAA3:	60		RTS

(457 bytes of free space. The first 7 bytes are NOT available in FF3us v1.1.)
C2/FAA4:	FF (x457)

(Data retrieved from C1/6C0A and C1/6C6E. It appears to be a 16-bit sine table.)
C2/FC6D:	00 00
C2/FC6F:	24 03
C2/FC71:	48 06
C2/FC73:	6A 09
C2/FC75:	8C 0C
C2/FC77:	AB 0F
C2/FC79:	C8 12
C2/FC7B:	E2 15
C2/FC7D:	F9 18
C2/FC7F:	0B 1C
C2/FC81:	1A 1F
C2/FC83:	23 22
C2/FC85:	28 25
C2/FC87:	26 28
C2/FC89:	1F 2B
C2/FC8B:	11 2E
C2/FC8D:	FB 30
C2/FC8F:	DF 33
C2/FC91:	BA 36
C2/FC93:	8C 39
C2/FC95:	56 3C
C2/FC97:	17 3F
C2/FC99:	CE 41
C2/FC9B:	7A 44
C2/FC9D:	1C 47
C2/FC9F:	B3 49
C2/FCA1:	3F 4C
C2/FCA3:	BF 4E
C2/FCA5:	33 51
C2/FCA7:	9B 53
C2/FCA9:	F5 55
C2/FCAB:	42 58
C2/FCAD:	82 5A
C2/FCAF:	B3 5C
C2/FCB1:	D7 5E
C2/FCB3:	EB 60
C2/FCB5:	F1 62
C2/FCB7:	E8 64
C2/FCB9:	CF 66
C2/FCBB:	A6 68
C2/FCBD:	6D 6A
C2/FCBF:	23 6C
C2/FCC1:	C9 6D
C2/FCC3:	5E 6F
C2/FCC5:	E2 70
C2/FCC7:	54 72
C2/FCC9:	B5 73
C2/FCCB:	04 75
C2/FCCD:	41 76
C2/FCCF:	6B 77
C2/FCD1:	84 78
C2/FCD3:	89 79
C2/FCD5:	7C 7A
C2/FCD7:	5C 7B
C2/FCD9:	29 7C
C2/FCDB:	E3 7C
C2/FCDD:	89 7D
C2/FCDF:	1D 7E
C2/FCE1:	9C 7E
C2/FCE3:	09 7F
C2/FCE5:	61 7F
C2/FCE7:	A6 7F
C2/FCE9:	D8 7F
C2/FCEB:	F5 7F
C2/FCED:	FF 7F
C2/FCEF:	F5 7F
C2/FCF1:	D8 7F
C2/FCF3:	A6 7F
C2/FCF5:	61 7F
C2/FCF7:	09 7F
C2/FCF9:	9C 7E
C2/FCFB:	1D 7E
C2/FCFD:	89 7D
C2/FCFF:	E3 7C
C2/FD01:	29 7C
C2/FD03:	5C 7B
C2/FD05:	7C 7A
C2/FD07:	89 79
C2/FD09:	84 78
C2/FD0B:	6B 77
C2/FD0D:	41 76
C2/FD0F:	04 75
C2/FD11:	B5 73
C2/FD13:	54 72
C2/FD15:	E2 70
C2/FD17:	5E 6F
C2/FD19:	C9 6D
C2/FD1B:	23 6C
C2/FD1D:	6D 6A
C2/FD1F:	A6 68
C2/FD21:	CF 66
C2/FD23:	E8 64
C2/FD25:	F1 62
C2/FD27:	EB 60
C2/FD29:	D7 5E
C2/FD2B:	B3 5C
C2/FD2D:	82 5A
C2/FD2F:	42 58
C2/FD31:	F5 55
C2/FD33:	9A 53
C2/FD35:	33 51
C2/FD37:	BF 4E
C2/FD39:	3F 4C
C2/FD3B:	B3 49
C2/FD3D:	1C 47
C2/FD3F:	7A 44
C2/FD41:	CE 41
C2/FD43:	17 3F
C2/FD45:	56 3C
C2/FD47:	8C 39
C2/FD49:	BA 36
C2/FD4B:	DE 33
C2/FD4D:	FB 30
C2/FD4F:	11 2E
C2/FD51:	1F 2B
C2/FD53:	26 28
C2/FD55:	28 25
C2/FD57:	23 22
C2/FD59:	1A 1F
C2/FD5B:	0B 1C
C2/FD5D:	F8 18
C2/FD5F:	E2 15
C2/FD61:	C8 12
C2/FD63:	AB 0F
C2/FD65:	8C 0C
C2/FD67:	6A 09
C2/FD69:	48 06
C2/FD6B:	24 03
C2/FD6D:	00 00
C2/FD6F:	DC FC
C2/FD71:	B8 F9
C2/FD73:	95 F6
C2/FD75:	74 F3
C2/FD77:	55 F0
C2/FD79:	38 ED
C2/FD7B:	1E EA
C2/FD7D:	07 E7
C2/FD7F:	F5 E3
C2/FD81:	E6 E0
C2/FD83:	DC DD
C2/FD85:	D8 DA
C2/FD87:	D9 D7
C2/FD89:	E1 D4
C2/FD8B:	EF D1
C2/FD8D:	04 CF
C2/FD8F:	21 CC
C2/FD91:	46 C9
C2/FD93:	73 C6
C2/FD95:	AA C3
C2/FD97:	E9 C0
C2/FD99:	32 BE
C2/FD9B:	86 BB
C2/FD9D:	E3 B8
C2/FD9F:	4C B6
C2/FDA1:	C1 B3
C2/FDA3:	41 B1
C2/FDA5:	CD AE
C2/FDA7:	65 AC
C2/FDA9:	0B AA
C2/FDAB:	BE A7
C2/FDAD:	7E A5
C2/FDAF:	4C A3
C2/FDB1:	29 A1
C2/FDB3:	14 9F
C2/FDB5:	0F 9D
C2/FDB7:	18 9B
C2/FDB9:	31 99
C2/FDBB:	5A 97
C2/FDBD:	93 95
C2/FDBF:	DD 93
C2/FDC1:	37 92
C2/FDC3:	A2 90
C2/FDC5:	1E 8F
C2/FDC7:	AC 8D
C2/FDC9:	4B 8C
C2/FDCB:	FC 8A
C2/FDCD:	BF 89
C2/FDCF:	95 88
C2/FDD1:	7C 87
C2/FDD3:	77 86
C2/FDD5:	84 85
C2/FDD7:	A4 84
C2/FDD9:	D7 83
C2/FDDB:	1D 83
C2/FDDD:	77 82
C2/FDDF:	E3 81
C2/FDE1:	64 81
C2/FDE3:	F7 80
C2/FDE5:	9F 80
C2/FDE7:	5A 80
C2/FDE9:	28 80
C2/FDEB:	0B 80
C2/FDED:	01 80
C2/FDEF:	0B 80
C2/FDF1:	28 80
C2/FDF3:	5A 80
C2/FDF5:	9F 80
C2/FDF7:	F7 80
C2/FDF9:	64 81
C2/FDFB:	E3 81
C2/FDFD:	77 82
C2/FDFF:	1D 83
C2/FE01:	D7 83
C2/FE03:	A4 84
C2/FE05:	84 85
C2/FE07:	77 86
C2/FE09:	7C 87
C2/FE0B:	95 88
C2/FE0D:	BF 89
C2/FE0F:	FC 8A
C2/FE11:	4B 8C
C2/FE13:	AC 8D
C2/FE15:	1E 8F
C2/FE17:	A2 90
C2/FE19:	37 92
C2/FE1B:	DD 93
C2/FE1D:	93 95
C2/FE1F:	5A 97
C2/FE21:	32 99
C2/FE23:	18 9B
C2/FE25:	0F 9D
C2/FE27:	15 9F
C2/FE29:	2A A1
C2/FE2B:	4D A3
C2/FE2D:	7E A5
C2/FE2F:	BE A7
C2/FE31:	0B AA
C2/FE33:	66 AC
C2/FE35:	CD AE
C2/FE37:	41 B1
C2/FE39:	C1 B3
C2/FE3B:	4D B6
C2/FE3D:	E4 B8
C2/FE3F:	86 BB
C2/FE41:	33 BE
C2/FE43:	EA C0
C2/FE45:	AA C3
C2/FE47:	74 C6
C2/FE49:	47 C9
C2/FE4B:	22 CC
C2/FE4D:	05 CF
C2/FE4F:	F0 D1
C2/FE51:	E2 D4
C2/FE53:	DA D7
C2/FE55:	D9 DA
C2/FE57:	DD DD
C2/FE59:	E7 E0
C2/FE5B:	F5 E3
C2/FE5D:	08 E7
C2/FE5F:	1F EA
C2/FE61:	39 ED
C2/FE63:	55 F0
C2/FE65:	75 F3
C2/FE67:	96 F6
C2/FE69:	B9 F9
C2/FE6B:	DC FC

(8-bit sine table. This data is used for some kind of multiplication. It is called from C1/6B9A.)
C2/FE6D:	00
C2/FE6E:	03
C2/FE6F:	06
C2/FE70:	09
C2/FE71:	0C
C2/FE72:	10
C2/FE73:	13
C2/FE74:	16
C2/FE75:	19
C2/FE76:	1C
C2/FE77:	1F
C2/FE78:	22
C2/FE79:	25
C2/FE7A:	28
C2/FE7B:	2B
C2/FE7C:	2E
C2/FE7D:	31
C2/FE7E:	33
C2/FE7F:	36
C2/FE80:	39
C2/FE81:	3C
C2/FE82:	3F
C2/FE83:	41
C2/FE84:	44
C2/FE85:	47
C2/FE86:	49
C2/FE87:	4C
C2/FE88:	4E
C2/FE89:	51
C2/FE8A:	53
C2/FE8B:	55
C2/FE8C:	58
C2/FE8D:	5A
C2/FE8E:	5C
C2/FE8F:	5E
C2/FE90:	60
C2/FE91:	62
C2/FE92:	64
C2/FE93:	66
C2/FE94:	68
C2/FE95:	6A
C2/FE96:	6B
C2/FE97:	6D
C2/FE98:	6F
C2/FE99:	70
C2/FE9A:	71
C2/FE9B:	73
C2/FE9C:	74
C2/FE9D:	75
C2/FE9E:	76
C2/FE9F:	78
C2/FEA0:	79
C2/FEA1:	7A
C2/FEA2:	7A
C2/FEA3:	7B
C2/FEA4:	7C
C2/FEA5:	7D
C2/FEA6:	7D
C2/FEA7:	7E
C2/FEA8:	7E
C2/FEA9:	7E
C2/FEAA:	7F
C2/FEAB:	7F
C2/FEAC:	7F
C2/FEAD:	7F
C2/FEAE:	7F
C2/FEAF:	7F
C2/FEB0:	7F
C2/FEB1:	7E
C2/FEB2:	7E
C2/FEB3:	7E
C2/FEB4:	7D
C2/FEB5:	7D
C2/FEB6:	7C
C2/FEB7:	7B
C2/FEB8:	7A
C2/FEB9:	7A
C2/FEBA:	79
C2/FEBB:	78
C2/FEBC:	76
C2/FEBD:	75
C2/FEBE:	74
C2/FEBF:	73
C2/FEC0:	71
C2/FEC1:	70
C2/FEC2:	6F
C2/FEC3:	6D
C2/FEC4:	6B
C2/FEC5:	6A
C2/FEC6:	68
C2/FEC7:	66
C2/FEC8:	64
C2/FEC9:	62
C2/FECA:	60
C2/FECB:	5E
C2/FECC:	5C
C2/FECD:	5A
C2/FECE:	58
C2/FECF:	55
C2/FED0:	53
C2/FED1:	51
C2/FED2:	4E
C2/FED3:	4C
C2/FED4:	49
C2/FED5:	47
C2/FED6:	44
C2/FED7:	41
C2/FED8:	3F
C2/FED9:	3C
C2/FEDA:	39
C2/FEDB:	36
C2/FEDC:	33
C2/FEDD:	31
C2/FEDE:	2E
C2/FEDF:	2B
C2/FEE0:	28
C2/FEE1:	25
C2/FEE2:	22
C2/FEE3:	1F
C2/FEE4:	1C
C2/FEE5:	19
C2/FEE6:	16
C2/FEE7:	13
C2/FEE8:	10
C2/FEE9:	0C
C2/FEEA:	09
C2/FEEB:	06
C2/FEEC:	03
C2/FEED:	00
C2/FEEE:	FD
C2/FEEF:	FA
C2/FEF0:	F7
C2/FEF1:	F4
C2/FEF2:	F0
C2/FEF3:	ED
C2/FEF4:	EA
C2/FEF5:	E7
C2/FEF6:	E4
C2/FEF7:	E1
C2/FEF8:	DE
C2/FEF9:	DB
C2/FEFA:	D8
C2/FEFB:	D5
C2/FEFC:	D2
C2/FEFD:	CF
C2/FEFE:	CD
C2/FEFF:	CA
C2/FF00:	C7
C2/FF01:	C4
C2/FF02:	C1
C2/FF03:	BF
C2/FF04:	BC
C2/FF05:	B9
C2/FF06:	B7
C2/FF07:	B4
C2/FF08:	B2
C2/FF09:	AF
C2/FF0A:	AD
C2/FF0B:	AB
C2/FF0C:	A8
C2/FF0D:	A6
C2/FF0E:	A4
C2/FF0F:	A2
C2/FF10:	A0
C2/FF11:	9E
C2/FF12:	9C
C2/FF13:	9A
C2/FF14:	98
C2/FF15:	96
C2/FF16:	95
C2/FF17:	93
C2/FF18:	91
C2/FF19:	90
C2/FF1A:	8F
C2/FF1B:	8D
C2/FF1C:	8C
C2/FF1D:	8B
C2/FF1E:	8A
C2/FF1F:	88
C2/FF20:	87
C2/FF21:	86
C2/FF22:	86
C2/FF23:	85
C2/FF24:	84
C2/FF25:	83
C2/FF26:	83
C2/FF27:	82
C2/FF28:	82
C2/FF29:	82
C2/FF2A:	81
C2/FF2B:	81
C2/FF2C:	81
C2/FF2D:	81
C2/FF2E:	81
C2/FF2F:	81
C2/FF30:	81
C2/FF31:	82
C2/FF32:	82
C2/FF33:	82
C2/FF34:	83
C2/FF35:	83
C2/FF36:	84
C2/FF37:	85
C2/FF38:	86
C2/FF39:	86
C2/FF3A:	87
C2/FF3B:	88
C2/FF3C:	8A
C2/FF3D:	8B
C2/FF3E:	8C
C2/FF3F:	8D
C2/FF40:	8F
C2/FF41:	90
C2/FF42:	91
C2/FF43:	93
C2/FF44:	95
C2/FF45:	96
C2/FF46:	98
C2/FF47:	9A
C2/FF48:	9C
C2/FF49:	9E
C2/FF4A:	A0
C2/FF4B:	A2
C2/FF4C:	A4
C2/FF4D:	A6
C2/FF4E:	A8
C2/FF4F:	AB
C2/FF50:	AD
C2/FF51:	AF
C2/FF52:	B2
C2/FF53:	B4
C2/FF54:	B7
C2/FF55:	B9
C2/FF56:	BC
C2/FF57:	BF
C2/FF58:	C1
C2/FF59:	C4
C2/FF5A:	C7
C2/FF5B:	CA
C2/FF5C:	CD
C2/FF5D:	CF
C2/FF5E:	D2
C2/FF5F:	D5
C2/FF60:	D8
C2/FF61:	DB
C2/FF62:	DE
C2/FF63:	E1
C2/FF64:	E4
C2/FF65:	E7
C2/FF66:	EA
C2/FF67:	ED
C2/FF68:	F0
C2/FF69:	F4
C2/FF6A:	F7
C2/FF6B:	FA
C2/FF6C:	FD